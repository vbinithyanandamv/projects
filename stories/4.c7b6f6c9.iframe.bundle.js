/*! For license information please see 4.c7b6f6c9.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{3085:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(process){__webpack_require__.d(__webpack_exports__,"AElement",(function(){return AElement})),__webpack_require__.d(__webpack_exports__,"AnimateColorElement",(function(){return AnimateColorElement})),__webpack_require__.d(__webpack_exports__,"AnimateElement",(function(){return AnimateElement})),__webpack_require__.d(__webpack_exports__,"AnimateTransformElement",(function(){return AnimateTransformElement})),__webpack_require__.d(__webpack_exports__,"BoundingBox",(function(){return BoundingBox})),__webpack_require__.d(__webpack_exports__,"CB1",(function(){return CB1})),__webpack_require__.d(__webpack_exports__,"CB2",(function(){return CB2})),__webpack_require__.d(__webpack_exports__,"CB3",(function(){return CB3})),__webpack_require__.d(__webpack_exports__,"CB4",(function(){return CB4})),__webpack_require__.d(__webpack_exports__,"Canvg",(function(){return Canvg})),__webpack_require__.d(__webpack_exports__,"CircleElement",(function(){return CircleElement})),__webpack_require__.d(__webpack_exports__,"ClipPathElement",(function(){return ClipPathElement})),__webpack_require__.d(__webpack_exports__,"DefsElement",(function(){return DefsElement})),__webpack_require__.d(__webpack_exports__,"DescElement",(function(){return DescElement})),__webpack_require__.d(__webpack_exports__,"Document",(function(){return Document})),__webpack_require__.d(__webpack_exports__,"Element",(function(){return Element})),__webpack_require__.d(__webpack_exports__,"EllipseElement",(function(){return EllipseElement})),__webpack_require__.d(__webpack_exports__,"FeColorMatrixElement",(function(){return FeColorMatrixElement})),__webpack_require__.d(__webpack_exports__,"FeCompositeElement",(function(){return FeCompositeElement})),__webpack_require__.d(__webpack_exports__,"FeDropShadowElement",(function(){return FeDropShadowElement})),__webpack_require__.d(__webpack_exports__,"FeGaussianBlurElement",(function(){return FeGaussianBlurElement})),__webpack_require__.d(__webpack_exports__,"FeMorphologyElement",(function(){return FeMorphologyElement})),__webpack_require__.d(__webpack_exports__,"FilterElement",(function(){return FilterElement})),__webpack_require__.d(__webpack_exports__,"Font",(function(){return Font})),__webpack_require__.d(__webpack_exports__,"FontElement",(function(){return FontElement})),__webpack_require__.d(__webpack_exports__,"FontFaceElement",(function(){return FontFaceElement})),__webpack_require__.d(__webpack_exports__,"GElement",(function(){return GElement})),__webpack_require__.d(__webpack_exports__,"GlyphElement",(function(){return GlyphElement})),__webpack_require__.d(__webpack_exports__,"GradientElement",(function(){return GradientElement})),__webpack_require__.d(__webpack_exports__,"ImageElement",(function(){return ImageElement})),__webpack_require__.d(__webpack_exports__,"LineElement",(function(){return LineElement})),__webpack_require__.d(__webpack_exports__,"LinearGradientElement",(function(){return LinearGradientElement})),__webpack_require__.d(__webpack_exports__,"MarkerElement",(function(){return MarkerElement})),__webpack_require__.d(__webpack_exports__,"MaskElement",(function(){return MaskElement})),__webpack_require__.d(__webpack_exports__,"Matrix",(function(){return Matrix})),__webpack_require__.d(__webpack_exports__,"MissingGlyphElement",(function(){return MissingGlyphElement})),__webpack_require__.d(__webpack_exports__,"Mouse",(function(){return Mouse})),__webpack_require__.d(__webpack_exports__,"PSEUDO_ZERO",(function(){return PSEUDO_ZERO})),__webpack_require__.d(__webpack_exports__,"Parser",(function(){return Parser})),__webpack_require__.d(__webpack_exports__,"PathElement",(function(){return PathElement})),__webpack_require__.d(__webpack_exports__,"PathParser",(function(){return PathParser})),__webpack_require__.d(__webpack_exports__,"PatternElement",(function(){return PatternElement})),__webpack_require__.d(__webpack_exports__,"Point",(function(){return Point})),__webpack_require__.d(__webpack_exports__,"PolygonElement",(function(){return PolygonElement})),__webpack_require__.d(__webpack_exports__,"PolylineElement",(function(){return PolylineElement})),__webpack_require__.d(__webpack_exports__,"Property",(function(){return Property})),__webpack_require__.d(__webpack_exports__,"QB1",(function(){return QB1})),__webpack_require__.d(__webpack_exports__,"QB2",(function(){return QB2})),__webpack_require__.d(__webpack_exports__,"QB3",(function(){return QB3})),__webpack_require__.d(__webpack_exports__,"RadialGradientElement",(function(){return RadialGradientElement})),__webpack_require__.d(__webpack_exports__,"RectElement",(function(){return RectElement})),__webpack_require__.d(__webpack_exports__,"RenderedElement",(function(){return RenderedElement})),__webpack_require__.d(__webpack_exports__,"Rotate",(function(){return Rotate})),__webpack_require__.d(__webpack_exports__,"SVGElement",(function(){return SVGElement})),__webpack_require__.d(__webpack_exports__,"SVGFontLoader",(function(){return SVGFontLoader})),__webpack_require__.d(__webpack_exports__,"Scale",(function(){return Scale})),__webpack_require__.d(__webpack_exports__,"Screen",(function(){return Screen})),__webpack_require__.d(__webpack_exports__,"Skew",(function(){return Skew})),__webpack_require__.d(__webpack_exports__,"SkewX",(function(){return SkewX})),__webpack_require__.d(__webpack_exports__,"SkewY",(function(){return SkewY})),__webpack_require__.d(__webpack_exports__,"StopElement",(function(){return StopElement})),__webpack_require__.d(__webpack_exports__,"StyleElement",(function(){return StyleElement})),__webpack_require__.d(__webpack_exports__,"SymbolElement",(function(){return SymbolElement})),__webpack_require__.d(__webpack_exports__,"TRefElement",(function(){return TRefElement})),__webpack_require__.d(__webpack_exports__,"TSpanElement",(function(){return TSpanElement})),__webpack_require__.d(__webpack_exports__,"TextElement",(function(){return TextElement})),__webpack_require__.d(__webpack_exports__,"TextPathElement",(function(){return TextPathElement})),__webpack_require__.d(__webpack_exports__,"TitleElement",(function(){return TitleElement})),__webpack_require__.d(__webpack_exports__,"Transform",(function(){return Transform})),__webpack_require__.d(__webpack_exports__,"Translate",(function(){return Translate})),__webpack_require__.d(__webpack_exports__,"UnknownElement",(function(){return UnknownElement})),__webpack_require__.d(__webpack_exports__,"UseElement",(function(){return UseElement})),__webpack_require__.d(__webpack_exports__,"ViewPort",(function(){return ViewPort})),__webpack_require__.d(__webpack_exports__,"compressSpaces",(function(){return compressSpaces})),__webpack_require__.d(__webpack_exports__,"getSelectorSpecificity",(function(){return getSelectorSpecificity})),__webpack_require__.d(__webpack_exports__,"normalizeAttributeName",(function(){return normalizeAttributeName})),__webpack_require__.d(__webpack_exports__,"normalizeColor",(function(){return normalizeColor})),__webpack_require__.d(__webpack_exports__,"parseExternalUrl",(function(){return parseExternalUrl})),__webpack_require__.d(__webpack_exports__,"presets",(function(){return index})),__webpack_require__.d(__webpack_exports__,"toNumbers",(function(){return toNumbers})),__webpack_require__.d(__webpack_exports__,"trimLeft",(function(){return trimLeft})),__webpack_require__.d(__webpack_exports__,"trimRight",(function(){return trimRight})),__webpack_require__.d(__webpack_exports__,"vectorMagnitude",(function(){return vectorMagnitude})),__webpack_require__.d(__webpack_exports__,"vectorsAngle",(function(){return vectorsAngle})),__webpack_require__.d(__webpack_exports__,"vectorsRatio",(function(){return vectorsRatio}));var _babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(3279),_babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0__),_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(3286),_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1__),_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(3291),_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2__),_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(3296),_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__),_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(3343),_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4__),_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(3346),_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5__),_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(3350),_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6__),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(3355),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7__),_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(3361),_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8__),_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(3364),_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9__),_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(3369),_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10__),_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(3372),_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11__),_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(3376),_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default=__webpack_require__.n(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12__),_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(3377),_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__),_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(3388),_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__),_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(3390),_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__),_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(3391),_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__),_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(3392),_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17__),_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(3396),_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18__),_babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(3402),_babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19__),_babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(3406),_babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20__),_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(3411),_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21__),_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(3413),_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22__),raf__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(3418),raf__WEBPACK_IMPORTED_MODULE_23___default=__webpack_require__.n(raf__WEBPACK_IMPORTED_MODULE_23__),_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(3420),_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24__),rgbcolor__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(3426),rgbcolor__WEBPACK_IMPORTED_MODULE_25___default=__webpack_require__.n(rgbcolor__WEBPACK_IMPORTED_MODULE_25__),_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(3427),_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26__),_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__(3431),_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__),_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__(3440),_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__),_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__(3225),_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__),_babel_runtime_corejs3_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_30__=__webpack_require__(3449),_babel_runtime_corejs3_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_30___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_30__),_babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31__=__webpack_require__(3453),_babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31__),_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32__=__webpack_require__(3458),_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32__),_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__(3465),_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33__),_babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34__=__webpack_require__(3467),_babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34__),_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35__=__webpack_require__(3472),_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35__),_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__(3477),_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__),_babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__(3485),_babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37__),svg_pathdata__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__(3491),_babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__(3492),_babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39__),_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__(3224),_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40___default=__webpack_require__.n(_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__),_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41__=__webpack_require__(3496),_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41__),_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42__=__webpack_require__(3500),_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42__),_babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43__=__webpack_require__(3187),_babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43__),_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44__=__webpack_require__(3505),_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44__),_babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45__=__webpack_require__(3507),_babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45__),_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46__=__webpack_require__(3509),_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46__),_babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47__=__webpack_require__(3511),_babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47__),_babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48__=__webpack_require__(3513),_babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48__),_babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49__=__webpack_require__(3520),_babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49__),_babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50__=__webpack_require__(3524),_babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50___default=__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50__),stackblur_canvas__WEBPACK_IMPORTED_MODULE_51__=__webpack_require__(3528);function compressSpaces(str){return str.replace(/(?!\u3000)\s+/gm," ")}function trimLeft(str){return str.replace(/^[\n \t]+/,"")}function trimRight(str){return str.replace(/[\n \t]+$/,"")}function toNumbers(str){var matches=(str||"").match(/-?(\d+(?:\.\d*(?:[eE][+-]?\d+)?)?|\.\d+)(?=\D|$)/gm)||[];return _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(matches).call(matches,_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default.a)}var allUppercase=/^[A-Z-]+$/;function normalizeAttributeName(name){return allUppercase.test(name)?name.toLowerCase():name}function parseExternalUrl(url){var urlMatch=url.match(/url\(('([^']+)'|"([^"]+)"|([^'"\)]+))\)/)||[];return urlMatch[2]||urlMatch[3]||urlMatch[4]}function normalizeColor(color){if(!_babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0___default()(color).call(color,"rgb"))return color;var rgbParts=3;return color.replace(/\d+(\.\d+)?/g,(function(num,isFloat){return rgbParts--&&isFloat?String(Math.round(_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(num))):num}))}var attributeRegex=/(\[[^\]]+\])/g,idRegex=/(#[^\s\+>~\.\[:]+)/g,classRegex=/(\.[^\s\+>~\.\[:]+)/g,pseudoElementRegex=/(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi,pseudoClassWithBracketsRegex=/(:[\w-]+\([^\)]*\))/gi,pseudoClassRegex=/(:[^\s\+>~\.\[:]+)/g,elementRegex=/([^\s\+>~\.\[:]+)/g;function findSelectorMatch(selector,regex){var matches=selector.match(regex);return matches?[selector.replace(regex," "),matches.length]:[selector,0]}function getSelectorSpecificity(selector){var specificity=[0,0,0],currentSelector=selector.replace(/:not\(([^\)]*)\)/g,"     $1 ").replace(/{[\s\S]*/gm," "),delta=0,_findSelectorMatch=findSelectorMatch(currentSelector,attributeRegex),_findSelectorMatch2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch,2);currentSelector=_findSelectorMatch2[0],delta=_findSelectorMatch2[1],specificity[1]+=delta;var _findSelectorMatch3=findSelectorMatch(currentSelector,idRegex),_findSelectorMatch4=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch3,2);currentSelector=_findSelectorMatch4[0],delta=_findSelectorMatch4[1],specificity[0]+=delta;var _findSelectorMatch5=findSelectorMatch(currentSelector,classRegex),_findSelectorMatch6=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch5,2);currentSelector=_findSelectorMatch6[0],delta=_findSelectorMatch6[1],specificity[1]+=delta;var _findSelectorMatch7=findSelectorMatch(currentSelector,pseudoElementRegex),_findSelectorMatch8=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch7,2);currentSelector=_findSelectorMatch8[0],delta=_findSelectorMatch8[1],specificity[2]+=delta;var _findSelectorMatch9=findSelectorMatch(currentSelector,pseudoClassWithBracketsRegex),_findSelectorMatch10=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch9,2);currentSelector=_findSelectorMatch10[0],delta=_findSelectorMatch10[1],specificity[1]+=delta;var _findSelectorMatch11=findSelectorMatch(currentSelector,pseudoClassRegex),_findSelectorMatch12=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch11,2);currentSelector=_findSelectorMatch12[0],delta=_findSelectorMatch12[1],specificity[1]+=delta;var _findSelectorMatch13=findSelectorMatch(currentSelector=currentSelector.replace(/[\*\s\+>~]/g," ").replace(/[#\.]/g," "),elementRegex),_findSelectorMatch14=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_findSelectorMatch13,2);return currentSelector=_findSelectorMatch14[0],delta=_findSelectorMatch14[1],specificity[2]+=delta,specificity.join("")}var PSEUDO_ZERO=1e-8;function vectorMagnitude(v){return Math.sqrt(Math.pow(v[0],2)+Math.pow(v[1],2))}function vectorsRatio(u,v){return(u[0]*v[0]+u[1]*v[1])/(vectorMagnitude(u)*vectorMagnitude(v))}function vectorsAngle(u,v){return(u[0]*v[1]<u[1]*v[0]?-1:1)*Math.acos(vectorsRatio(u,v))}function CB1(t){return t*t*t}function CB2(t){return 3*t*t*(1-t)}function CB3(t){return 3*t*(1-t)*(1-t)}function CB4(t){return(1-t)*(1-t)*(1-t)}function QB1(t){return t*t}function QB2(t){return 2*t*(1-t)}function QB3(t){return(1-t)*(1-t)}var Property=function(){function Property(document,name,value){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Property),this.document=document,this.name=name,this.value=value,this.isNormalizedColor=!1}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Property,[{key:"split",value:function split(){var _context,_context2,separator=arguments.length>0&&void 0!==arguments[0]?arguments[0]:" ",document=this.document,name=this.name;return _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context2=compressSpaces(this.getString())).call(_context2).split(separator)).call(_context,(function(value){return new Property(document,name,value)}))}},{key:"hasValue",value:function hasValue(zeroIsValue){var value=this.value;return null!==value&&""!==value&&(zeroIsValue||0!==value)&&void 0!==value}},{key:"isString",value:function isString(regexp){var value=this.value,result="string"==typeof value;return result&&regexp?regexp.test(value):result}},{key:"isUrlDefinition",value:function isUrlDefinition(){return this.isString(/^url\(/)}},{key:"isPixels",value:function isPixels(){if(!this.hasValue())return!1;var asString=this.getString();switch(!0){case/px$/.test(asString):case/^[0-9]+$/.test(asString):return!0;default:return!1}}},{key:"setValue",value:function setValue(value){return this.value=value,this}},{key:"getValue",value:function getValue(def){return void 0===def||this.hasValue()?this.value:def}},{key:"getNumber",value:function getNumber(def){if(!this.hasValue())return void 0===def?0:_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(def);var value=this.value,n=_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(value);return this.isString(/%$/)&&(n/=100),n}},{key:"getString",value:function getString(def){return void 0===def||this.hasValue()?void 0===this.value?"":String(this.value):String(def)}},{key:"getColor",value:function getColor(def){var color=this.getString(def);return this.isNormalizedColor||(this.isNormalizedColor=!0,color=normalizeColor(color),this.value=color),color}},{key:"getDpi",value:function getDpi(){return 96}},{key:"getRem",value:function getRem(){return this.document.rootEmSize}},{key:"getEm",value:function getEm(){return this.document.emSize}},{key:"getUnits",value:function getUnits(){return this.getString().replace(/[0-9\.\-]/g,"")}},{key:"getPixels",value:function getPixels(axisOrIsFontSize){var processPercent=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.hasValue())return 0;var _ref="boolean"==typeof axisOrIsFontSize?[void 0,axisOrIsFontSize]:[axisOrIsFontSize],_ref2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_ref,2),axis=_ref2[0],isFontSize=_ref2[1],viewPort=this.document.screen.viewPort;switch(!0){case this.isString(/vmin$/):return this.getNumber()/100*Math.min(viewPort.computeSize("x"),viewPort.computeSize("y"));case this.isString(/vmax$/):return this.getNumber()/100*Math.max(viewPort.computeSize("x"),viewPort.computeSize("y"));case this.isString(/vw$/):return this.getNumber()/100*viewPort.computeSize("x");case this.isString(/vh$/):return this.getNumber()/100*viewPort.computeSize("y");case this.isString(/rem$/):return this.getNumber()*this.getRem();case this.isString(/em$/):return this.getNumber()*this.getEm();case this.isString(/ex$/):return this.getNumber()*this.getEm()/2;case this.isString(/px$/):return this.getNumber();case this.isString(/pt$/):return this.getNumber()*this.getDpi()*(1/72);case this.isString(/pc$/):return 15*this.getNumber();case this.isString(/cm$/):return this.getNumber()*this.getDpi()/2.54;case this.isString(/mm$/):return this.getNumber()*this.getDpi()/25.4;case this.isString(/in$/):return this.getNumber()*this.getDpi();case this.isString(/%$/)&&isFontSize:return this.getNumber()*this.getEm();case this.isString(/%$/):return this.getNumber()*viewPort.computeSize(axis);default:var n=this.getNumber();return processPercent&&n<1?n*viewPort.computeSize(axis):n}}},{key:"getMilliseconds",value:function getMilliseconds(){return this.hasValue()?this.isString(/ms$/)?this.getNumber():1e3*this.getNumber():0}},{key:"getRadians",value:function getRadians(){if(!this.hasValue())return 0;switch(!0){case this.isString(/deg$/):return this.getNumber()*(Math.PI/180);case this.isString(/grad$/):return this.getNumber()*(Math.PI/200);case this.isString(/rad$/):return this.getNumber();default:return this.getNumber()*(Math.PI/180)}}},{key:"getDefinition",value:function getDefinition(){var asString=this.getString(),name=asString.match(/#([^\)'"]+)/);return name&&(name=name[1]),name||(name=asString),this.document.definitions[name]}},{key:"getFillStyleDefinition",value:function getFillStyleDefinition(element,opacity){var def=this.getDefinition();if(!def)return null;if("function"==typeof def.createGradient)return def.createGradient(this.document.ctx,element,opacity);if("function"==typeof def.createPattern){if(def.getHrefAttribute().hasValue()){var patternTransform=def.getAttribute("patternTransform");def=def.getHrefAttribute().getDefinition(),patternTransform.hasValue()&&def.getAttribute("patternTransform",!0).setValue(patternTransform.value)}return def.createPattern(this.document.ctx,element,opacity)}return null}},{key:"getTextBaseline",value:function getTextBaseline(){return this.hasValue()?Property.textBaselineMapping[this.getString()]:null}},{key:"addOpacity",value:function addOpacity(opacity){for(var value=this.getColor(),len=value.length,commas=0,i=0;i<len&&(","===value[i]&&commas++,3!==commas);i++);if(opacity.hasValue()&&this.isString()&&3!==commas){var color=new rgbcolor__WEBPACK_IMPORTED_MODULE_25___default.a(value);color.ok&&(color.alpha=opacity.getNumber(),value=color.toRGBA())}return new Property(this.document,this.name,value)}}],[{key:"empty",value:function empty(document){return new Property(document,"EMPTY","")}}]),Property}();Property.textBaselineMapping={baseline:"alphabetic","before-edge":"top","text-before-edge":"top",middle:"middle",central:"middle","after-edge":"bottom","text-after-edge":"bottom",ideographic:"ideographic",alphabetic:"alphabetic",hanging:"hanging",mathematical:"alphabetic"};var ViewPort=function(){function ViewPort(){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,ViewPort),this.viewPorts=[]}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(ViewPort,[{key:"clear",value:function clear(){this.viewPorts=[]}},{key:"setCurrent",value:function setCurrent(width,height){this.viewPorts.push({width:width,height:height})}},{key:"removeCurrent",value:function removeCurrent(){this.viewPorts.pop()}},{key:"getCurrent",value:function getCurrent(){var viewPorts=this.viewPorts;return viewPorts[viewPorts.length-1]}},{key:"computeSize",value:function computeSize(d){return"number"==typeof d?d:"x"===d?this.width:"y"===d?this.height:Math.sqrt(Math.pow(this.width,2)+Math.pow(this.height,2))/Math.sqrt(2)}},{key:"width",get:function get(){return this.getCurrent().width}},{key:"height",get:function get(){return this.getCurrent().height}}]),ViewPort}(),Point=function(){function Point(x,y){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Point),this.x=x,this.y=y}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Point,[{key:"angleTo",value:function angleTo(point){return Math.atan2(point.y-this.y,point.x-this.x)}},{key:"applyTransform",value:function applyTransform(transform){var x=this.x,y=this.y,xp=x*transform[0]+y*transform[2]+transform[4],yp=x*transform[1]+y*transform[3]+transform[5];this.x=xp,this.y=yp}}],[{key:"parse",value:function parse(point){var defaultValue=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,_toNumbers=toNumbers(point),_toNumbers2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_toNumbers,2),_toNumbers2$=_toNumbers2[0],x=void 0===_toNumbers2$?defaultValue:_toNumbers2$,_toNumbers2$2=_toNumbers2[1],y=void 0===_toNumbers2$2?defaultValue:_toNumbers2$2;return new Point(x,y)}},{key:"parseScale",value:function parseScale(scale){var defaultValue=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,_toNumbers3=toNumbers(scale),_toNumbers4=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_toNumbers3,2),_toNumbers4$=_toNumbers4[0],x=void 0===_toNumbers4$?defaultValue:_toNumbers4$,_toNumbers4$2=_toNumbers4[1],y=void 0===_toNumbers4$2?x:_toNumbers4$2;return new Point(x,y)}},{key:"parsePath",value:function parsePath(path){for(var points=toNumbers(path),len=points.length,pathPoints=[],i=0;i<len;i+=2)pathPoints.push(new Point(points[i],points[i+1]));return pathPoints}}]),Point}(),Mouse=function(){function Mouse(screen){var _context,_context2;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Mouse),this.screen=screen,this.working=!1,this.events=[],this.eventElements=[],this.onClick=_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context=this.onClick).call(_context,this),this.onMouseMove=_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context2=this.onMouseMove).call(_context2,this)}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Mouse,[{key:"isWorking",value:function isWorking(){return this.working}},{key:"start",value:function start(){if(!this.working){var screen=this.screen,onClick=this.onClick,onMouseMove=this.onMouseMove,canvas=screen.ctx.canvas;canvas.onclick=onClick,canvas.onmousemove=onMouseMove,this.working=!0}}},{key:"stop",value:function stop(){if(this.working){var canvas=this.screen.ctx.canvas;this.working=!1,canvas.onclick=null,canvas.onmousemove=null}}},{key:"hasEvents",value:function hasEvents(){return this.working&&this.events.length>0}},{key:"runEvents",value:function runEvents(){if(this.working){var document=this.screen,events=this.events,eventElements=this.eventElements,style=document.ctx.canvas.style;style&&(style.cursor=""),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(events).call(events,(function(_ref,i){for(var run=_ref.run,element=eventElements[i];element;)run(element),element=element.parent})),this.events=[],this.eventElements=[]}}},{key:"checkPath",value:function checkPath(element,ctx){if(this.working&&ctx){var events=this.events,eventElements=this.eventElements;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(events).call(events,(function(_ref2,i){var x=_ref2.x,y=_ref2.y;!eventElements[i]&&ctx.isPointInPath&&ctx.isPointInPath(x,y)&&(eventElements[i]=element)}))}}},{key:"checkBoundingBox",value:function checkBoundingBox(element,boundingBox){if(this.working&&boundingBox){var events=this.events,eventElements=this.eventElements;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(events).call(events,(function(_ref3,i){var x=_ref3.x,y=_ref3.y;!eventElements[i]&&boundingBox.isPointInBox(x,y)&&(eventElements[i]=element)}))}}},{key:"mapXY",value:function mapXY(x,y){for(var _this$screen=this.screen,window=_this$screen.window,ctx=_this$screen.ctx,point=new Point(x,y),element=ctx.canvas;element;)point.x-=element.offsetLeft,point.y-=element.offsetTop,element=element.offsetParent;return window.scrollX&&(point.x+=window.scrollX),window.scrollY&&(point.y+=window.scrollY),point}},{key:"onClick",value:function onClick(evt){var _this$mapXY=this.mapXY((evt||event).clientX,(evt||event).clientY),x=_this$mapXY.x,y=_this$mapXY.y;this.events.push({type:"onclick",x:x,y:y,run:function run(event){event.onClick&&event.onClick()}})}},{key:"onMouseMove",value:function onMouseMove(evt){var _this$mapXY2=this.mapXY((evt||event).clientX,(evt||event).clientY),x=_this$mapXY2.x,y=_this$mapXY2.y;this.events.push({type:"onmousemove",x:x,y:y,run:function run(event){event.onMouseMove&&event.onMouseMove()}})}}]),Mouse}(),defaultWindow="undefined"!=typeof window?window:null,defaultFetch="undefined"!=typeof fetch?_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(fetch).call(fetch,void 0):null,Screen=function(){function Screen(ctx){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$fetch=_ref.fetch,fetch=void 0===_ref$fetch?defaultFetch:_ref$fetch,_ref$window=_ref.window,window=void 0===_ref$window?defaultWindow:_ref$window;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Screen),this.ctx=ctx,this.FRAMERATE=30,this.MAX_VIRTUAL_PIXELS=3e4,this.CLIENT_WIDTH=800,this.CLIENT_HEIGHT=600,this.viewPort=new ViewPort,this.mouse=new Mouse(this),this.animations=[],this.waits=[],this.frameDuration=0,this.isReadyLock=!1,this.isFirstRender=!0,this.intervalId=null,this.window=window,this.fetch=fetch}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Screen,[{key:"wait",value:function wait(checker){this.waits.push(checker)}},{key:"ready",value:function ready(){return this.readyPromise?this.readyPromise:_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default.a.resolve()}},{key:"isReady",value:function isReady(){var _context;if(this.isReadyLock)return!0;var isReadyLock=_babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context=this.waits).call(_context,(function(_){return _()}));return isReadyLock&&(this.waits=[],this.resolveReady&&this.resolveReady()),this.isReadyLock=isReadyLock,isReadyLock}},{key:"setDefaults",value:function setDefaults(ctx){ctx.strokeStyle="rgba(0,0,0,0)",ctx.lineCap="butt",ctx.lineJoin="miter",ctx.miterLimit=4}},{key:"setViewBox",value:function setViewBox(_ref2){var document=_ref2.document,ctx=_ref2.ctx,aspectRatio=_ref2.aspectRatio,width=_ref2.width,desiredWidth=_ref2.desiredWidth,height=_ref2.height,desiredHeight=_ref2.desiredHeight,_ref2$minX=_ref2.minX,minX=void 0===_ref2$minX?0:_ref2$minX,_ref2$minY=_ref2.minY,minY=void 0===_ref2$minY?0:_ref2$minY,refX=_ref2.refX,refY=_ref2.refY,_ref2$clip=_ref2.clip,clip=void 0!==_ref2$clip&&_ref2$clip,_ref2$clipX=_ref2.clipX,clipX=void 0===_ref2$clipX?0:_ref2$clipX,_ref2$clipY=_ref2.clipY,clipY=void 0===_ref2$clipY?0:_ref2$clipY,_cleanAspectRatio$spl=compressSpaces(aspectRatio).replace(/^defer\s/,"").split(" "),_cleanAspectRatio$spl2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_cleanAspectRatio$spl,2),align=_cleanAspectRatio$spl2[0]||"xMidYMid",meetOrSlice=_cleanAspectRatio$spl2[1]||"meet",scaleX=width/desiredWidth,scaleY=height/desiredHeight,scaleMin=Math.min(scaleX,scaleY),scaleMax=Math.max(scaleX,scaleY),finalDesiredWidth=desiredWidth,finalDesiredHeight=desiredHeight;"meet"===meetOrSlice&&(finalDesiredWidth*=scaleMin,finalDesiredHeight*=scaleMin),"slice"===meetOrSlice&&(finalDesiredWidth*=scaleMax,finalDesiredHeight*=scaleMax);var refXProp=new Property(document,"refX",refX),refYProp=new Property(document,"refY",refY),hasRefs=refXProp.hasValue()&&refYProp.hasValue();if(hasRefs&&ctx.translate(-scaleMin*refXProp.getPixels("x"),-scaleMin*refYProp.getPixels("y")),clip){var scaledClipX=scaleMin*clipX,scaledClipY=scaleMin*clipY;ctx.beginPath(),ctx.moveTo(scaledClipX,scaledClipY),ctx.lineTo(width,scaledClipY),ctx.lineTo(width,height),ctx.lineTo(scaledClipX,height),ctx.closePath(),ctx.clip()}if(!hasRefs){var isMeetMinY="meet"===meetOrSlice&&scaleMin===scaleY,isSliceMaxY="slice"===meetOrSlice&&scaleMax===scaleY,isMeetMinX="meet"===meetOrSlice&&scaleMin===scaleX,isSliceMaxX="slice"===meetOrSlice&&scaleMax===scaleX;/^xMid/.test(align)&&(isMeetMinY||isSliceMaxY)&&ctx.translate(width/2-finalDesiredWidth/2,0),/YMid$/.test(align)&&(isMeetMinX||isSliceMaxX)&&ctx.translate(0,height/2-finalDesiredHeight/2),/^xMax/.test(align)&&(isMeetMinY||isSliceMaxY)&&ctx.translate(width-finalDesiredWidth,0),/YMax$/.test(align)&&(isMeetMinX||isSliceMaxX)&&ctx.translate(0,height-finalDesiredHeight)}switch(!0){case"none"===align:ctx.scale(scaleX,scaleY);break;case"meet"===meetOrSlice:ctx.scale(scaleMin,scaleMin);break;case"slice"===meetOrSlice:ctx.scale(scaleMax,scaleMax)}ctx.translate(-minX,-minY)}},{key:"start",value:function start(element){var _this=this,_ref3=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref3$enableRedraw=_ref3.enableRedraw,enableRedraw=void 0!==_ref3$enableRedraw&&_ref3$enableRedraw,_ref3$ignoreMouse=_ref3.ignoreMouse,ignoreMouse=void 0!==_ref3$ignoreMouse&&_ref3$ignoreMouse,_ref3$ignoreAnimation=_ref3.ignoreAnimation,ignoreAnimation=void 0!==_ref3$ignoreAnimation&&_ref3$ignoreAnimation,_ref3$ignoreDimension=_ref3.ignoreDimensions,ignoreDimensions=void 0!==_ref3$ignoreDimension&&_ref3$ignoreDimension,_ref3$ignoreClear=_ref3.ignoreClear,ignoreClear=void 0!==_ref3$ignoreClear&&_ref3$ignoreClear,forceRedraw=_ref3.forceRedraw,scaleWidth=_ref3.scaleWidth,scaleHeight=_ref3.scaleHeight,offsetX=_ref3.offsetX,offsetY=_ref3.offsetY,FRAMERATE=this.FRAMERATE,mouse=this.mouse,frameDuration=1e3/FRAMERATE;if(this.frameDuration=frameDuration,this.readyPromise=new _babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default.a((function(resolve){_this.resolveReady=resolve})),this.isReady()&&this.render(element,ignoreDimensions,ignoreClear,scaleWidth,scaleHeight,offsetX,offsetY),enableRedraw){var now=_babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19___default()(),then=now,delta=0,tick=function tick(){now=_babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19___default()(),(delta=now-then)>=frameDuration&&(then=now-delta%frameDuration,_this.shouldUpdate(ignoreAnimation,forceRedraw)&&(_this.render(element,ignoreDimensions,ignoreClear,scaleWidth,scaleHeight,offsetX,offsetY),mouse.runEvents())),_this.intervalId=raf__WEBPACK_IMPORTED_MODULE_23___default()(tick)};ignoreMouse||mouse.start(),this.intervalId=raf__WEBPACK_IMPORTED_MODULE_23___default()(tick)}}},{key:"stop",value:function stop(){this.intervalId&&(raf__WEBPACK_IMPORTED_MODULE_23___default.a.cancel(this.intervalId),this.intervalId=null),this.mouse.stop()}},{key:"shouldUpdate",value:function shouldUpdate(ignoreAnimation,forceRedraw){if(!ignoreAnimation){var _context2,frameDuration=this.frameDuration,shouldUpdate=_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(_context2=this.animations).call(_context2,(function(shouldUpdate,animation){return animation.update(frameDuration)||shouldUpdate}),!1);if(shouldUpdate)return!0}return!("function"!=typeof forceRedraw||!forceRedraw())||(!(this.isReadyLock||!this.isReady())||!!this.mouse.hasEvents())}},{key:"render",value:function render(element,ignoreDimensions,ignoreClear,scaleWidth,scaleHeight,offsetX,offsetY){var CLIENT_WIDTH=this.CLIENT_WIDTH,CLIENT_HEIGHT=this.CLIENT_HEIGHT,viewPort=this.viewPort,ctx=this.ctx,isFirstRender=this.isFirstRender,canvas=ctx.canvas;viewPort.clear(),canvas.width&&canvas.height?viewPort.setCurrent(canvas.width,canvas.height):viewPort.setCurrent(CLIENT_WIDTH,CLIENT_HEIGHT);var widthStyle=element.getStyle("width"),heightStyle=element.getStyle("height");!ignoreDimensions&&(isFirstRender||"number"!=typeof scaleWidth&&"number"!=typeof scaleHeight)&&(widthStyle.hasValue()&&(canvas.width=widthStyle.getPixels("x"),canvas.style&&(canvas.style.width="".concat(canvas.width,"px"))),heightStyle.hasValue()&&(canvas.height=heightStyle.getPixels("y"),canvas.style&&(canvas.style.height="".concat(canvas.height,"px"))));var cWidth=canvas.clientWidth||canvas.width,cHeight=canvas.clientHeight||canvas.height;if(ignoreDimensions&&widthStyle.hasValue()&&heightStyle.hasValue()&&(cWidth=widthStyle.getPixels("x"),cHeight=heightStyle.getPixels("y")),viewPort.setCurrent(cWidth,cHeight),"number"==typeof offsetX&&element.getAttribute("x",!0).setValue(offsetX),"number"==typeof offsetY&&element.getAttribute("y",!0).setValue(offsetY),"number"==typeof scaleWidth||"number"==typeof scaleHeight){var _context3,_context4,viewBox=toNumbers(element.getAttribute("viewBox").getString()),xRatio=0,yRatio=0;if("number"==typeof scaleWidth){var _widthStyle=element.getStyle("width");_widthStyle.hasValue()?xRatio=_widthStyle.getPixels("x")/scaleWidth:isNaN(viewBox[2])||(xRatio=viewBox[2]/scaleWidth)}if("number"==typeof scaleHeight){var _heightStyle=element.getStyle("height");_heightStyle.hasValue()?yRatio=_heightStyle.getPixels("y")/scaleHeight:isNaN(viewBox[3])||(yRatio=viewBox[3]/scaleHeight)}xRatio||(xRatio=yRatio),yRatio||(yRatio=xRatio),element.getAttribute("width",!0).setValue(scaleWidth),element.getAttribute("height",!0).setValue(scaleHeight);var transformStyle=element.getStyle("transform",!0,!0);transformStyle.setValue(_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context3=_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context4="".concat(transformStyle.getString()," scale(")).call(_context4,1/xRatio,", ")).call(_context3,1/yRatio,")"))}ignoreClear||ctx.clearRect(0,0,cWidth,cHeight),element.render(ctx),isFirstRender&&(this.isFirstRender=!1)}}]),Screen}();Screen.defaultWindow=defaultWindow,Screen.defaultFetch=defaultFetch;var defaultFetch$1=Screen.defaultFetch,DefaultDOMParser="undefined"!=typeof DOMParser?DOMParser:null,Parser=function(){function Parser(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_ref$fetch=_ref.fetch,fetch=void 0===_ref$fetch?defaultFetch$1:_ref$fetch,_ref$DOMParser=_ref.DOMParser,DOMParser=void 0===_ref$DOMParser?DefaultDOMParser:_ref$DOMParser;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Parser),this.fetch=fetch,this.DOMParser=DOMParser}var _load,_parse;return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Parser,[{key:"parse",value:(_parse=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee(resource){return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(!/^</.test(resource)){_context.next=2;break}return _context.abrupt("return",this.parseFromString(resource));case 2:return _context.abrupt("return",this.load(resource));case 3:case"end":return _context.stop()}}),_callee,this)}))),function parse(_x){return _parse.apply(this,arguments)})},{key:"parseFromString",value:function parseFromString(xml){var parser=new this.DOMParser;try{return this.checkDocument(parser.parseFromString(xml,"image/svg+xml"))}catch(err){return this.checkDocument(parser.parseFromString(xml,"text/xml"))}}},{key:"checkDocument",value:function checkDocument(document){var parserError=document.getElementsByTagName("parsererror")[0];if(parserError)throw new Error(parserError.textContent);return document}},{key:"load",value:(_load=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee2(url){var response,xml;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return _context2.next=2,this.fetch(url);case 2:return response=_context2.sent,_context2.next=5,response.text();case 5:return xml=_context2.sent,_context2.abrupt("return",this.parseFromString(xml));case 7:case"end":return _context2.stop()}}),_callee2,this)}))),function load(_x2){return _load.apply(this,arguments)})}]),Parser}(),Translate=function(){function Translate(_,point){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Translate),this.type="translate",this.point=null,this.point=Point.parse(point)}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Translate,[{key:"apply",value:function apply(ctx){var _this$point=this.point,x=_this$point.x,y=_this$point.y;ctx.translate(x||0,y||0)}},{key:"unapply",value:function unapply(ctx){var _this$point2=this.point,x=_this$point2.x,y=_this$point2.y;ctx.translate(-1*x||0,-1*y||0)}},{key:"applyToPoint",value:function applyToPoint(point){var _this$point3=this.point,x=_this$point3.x,y=_this$point3.y;point.applyTransform([1,0,0,1,x||0,y||0])}}]),Translate}(),Rotate=function(){function Rotate(document,rotate,transformOrigin){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Rotate),this.type="rotate",this.angle=null,this.originX=null,this.originY=null,this.cx=0,this.cy=0;var numbers=toNumbers(rotate);this.angle=new Property(document,"angle",numbers[0]),this.originX=transformOrigin[0],this.originY=transformOrigin[1],this.cx=numbers[1]||0,this.cy=numbers[2]||0}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Rotate,[{key:"apply",value:function apply(ctx){var cx=this.cx,cy=this.cy,originX=this.originX,originY=this.originY,angle=this.angle,x=cx+originX.getPixels("x"),y=cy+originY.getPixels("y");ctx.translate(x,y),ctx.rotate(angle.getRadians()),ctx.translate(-x,-y)}},{key:"unapply",value:function unapply(ctx){var cx=this.cx,cy=this.cy,angle=this.angle;ctx.translate(cx,cy),ctx.rotate(-1*angle.getRadians()),ctx.translate(-cx,-cy)}},{key:"applyToPoint",value:function applyToPoint(point){var cx=this.cx,cy=this.cy,rad=this.angle.getRadians();point.applyTransform([1,0,0,1,cx||0,cy||0]),point.applyTransform([Math.cos(rad),Math.sin(rad),-Math.sin(rad),Math.cos(rad),0,0]),point.applyTransform([1,0,0,1,-cx||0,-cy||0])}}]),Rotate}(),Scale=function(){function Scale(_,scale){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Scale),this.type="scale",this.scale=null;var scaleSize=Point.parseScale(scale);0!==scaleSize.x&&0!==scaleSize.y||(scaleSize.x=PSEUDO_ZERO,scaleSize.y=PSEUDO_ZERO),this.scale=scaleSize}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Scale,[{key:"apply",value:function apply(ctx){var _this$scale=this.scale,x=_this$scale.x,y=_this$scale.y;ctx.scale(x,y||x)}},{key:"unapply",value:function unapply(ctx){var _this$scale2=this.scale,x=_this$scale2.x,y=_this$scale2.y;ctx.scale(1/x,1/y||x)}},{key:"applyToPoint",value:function applyToPoint(point){var _this$scale3=this.scale,x=_this$scale3.x,y=_this$scale3.y;point.applyTransform([x||0,0,0,y||0,0,0])}}]),Scale}(),Matrix=function(){function Matrix(_,matrix){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Matrix),this.type="matrix",this.matrix=[],this.matrix=toNumbers(matrix)}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Matrix,[{key:"apply",value:function apply(ctx){var matrix=this.matrix;ctx.transform(matrix[0],matrix[1],matrix[2],matrix[3],matrix[4],matrix[5])}},{key:"unapply",value:function unapply(ctx){var matrix=this.matrix,a=matrix[0],b=matrix[2],c=matrix[4],d=matrix[1],e=matrix[3],f=matrix[5],det=1/(a*(1*e-0*f)-b*(1*d-0*f)+c*(0*d-0*e));ctx.transform(det*(1*e-0*f),det*(0*f-1*d),det*(0*c-1*b),det*(1*a-0*c),det*(b*f-c*e),det*(c*d-a*f))}},{key:"applyToPoint",value:function applyToPoint(point){point.applyTransform(this.matrix)}}]),Matrix}();function _createSuper(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var Skew=function(_Matrix){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(Skew,_Matrix);var _super=_createSuper(Skew);function Skew(document,skew){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Skew),(_this=_super.call(this,document,skew)).type="skew",_this.angle=null,_this.angle=new Property(document,"angle",skew),_this}return Skew}(Matrix);function _createSuper$1(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$1(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var SkewX=function(_Skew){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(SkewX,_Skew);var _super=_createSuper$1(SkewX);function SkewX(document,skew){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,SkewX),(_this=_super.call(this,document,skew)).type="skewX",_this.matrix=[1,0,Math.tan(_this.angle.getRadians()),1,0,0],_this}return SkewX}(Skew);function _createSuper$2(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$2(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var SkewY=function(_Skew){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(SkewY,_Skew);var _super=_createSuper$2(SkewY);function SkewY(document,skew){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,SkewY),(_this=_super.call(this,document,skew)).type="skewY",_this.matrix=[1,Math.tan(_this.angle.getRadians()),0,1,0,0],_this}return SkewY}(Skew);var Transform=function(){function Transform(document,transform,transformOrigin){var _this=this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Transform),this.document=document,this.transforms=[];var data=function parseTransforms(transform){var _context;return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context=compressSpaces(transform)).call(_context).replace(/\)([a-zA-Z])/g,") $1").replace(/\)(\s?,\s?)/g,") ").split(/\s(?=[a-z])/)}(transform);_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(data).call(data,(function(transform){if("none"!==transform){var _parseTransform=function parseTransform(transform){var _transform$split=transform.split("("),_transform$split2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_transform$split,2),type=_transform$split2[0],value=_transform$split2[1];return[_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(type).call(type),_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(value).call(value).replace(")","")]}(transform),_parseTransform2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_parseTransform,2),type=_parseTransform2[0],value=_parseTransform2[1],TransformType=Transform.transformTypes[type];void 0!==TransformType&&_this.transforms.push(new TransformType(_this.document,value,transformOrigin))}}))}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Transform,[{key:"apply",value:function apply(ctx){for(var transforms=this.transforms,len=transforms.length,i=0;i<len;i++)transforms[i].apply(ctx)}},{key:"unapply",value:function unapply(ctx){for(var transforms=this.transforms,i=transforms.length-1;i>=0;i--)transforms[i].unapply(ctx)}},{key:"applyToPoint",value:function applyToPoint(point){for(var transforms=this.transforms,len=transforms.length,i=0;i<len;i++)transforms[i].applyToPoint(point)}}],[{key:"fromElement",value:function fromElement(document,element){var transformStyle=element.getStyle("transform",!1,!0),_element$getStyle$spl=element.getStyle("transform-origin",!1,!0).split(),_element$getStyle$spl2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_element$getStyle$spl,2),transformOriginXProperty=_element$getStyle$spl2[0],_element$getStyle$spl3=_element$getStyle$spl2[1],transformOrigin=[transformOriginXProperty,void 0===_element$getStyle$spl3?transformOriginXProperty:_element$getStyle$spl3];return transformStyle.hasValue()?new Transform(document,transformStyle.getString(),transformOrigin):null}}]),Transform}();Transform.transformTypes={translate:Translate,rotate:Rotate,scale:Scale,matrix:Matrix,skewX:SkewX,skewY:SkewY};var Element=function(){function Element(document,node){var _context,_context4,_this=this,captureTextNodes=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Element),this.document=document,this.node=node,this.captureTextNodes=captureTextNodes,this.attributes={},this.styles={},this.stylesSpecificity={},this.animationFrozen=!1,this.animationFrozenValue="",this.parent=null,this.children=[],node&&1===node.nodeType){if(_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(node.attributes)).call(_context,(function(attribute){var nodeName=normalizeAttributeName(attribute.nodeName);_this.attributes[nodeName]=new Property(document,nodeName,attribute.value)})),this.addStylesFromStyleDefinition(),this.getAttribute("style").hasValue()){var _context2,styles=_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context2=this.getAttribute("style").getString().split(";")).call(_context2,(function(_){return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_)}));_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(styles).call(styles,(function(style){var _context3;if(style){var _style$split$map=_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context3=style.split(":")).call(_context3,(function(_){return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_)})),_style$split$map2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_style$split$map,2),name=_style$split$map2[0],value=_style$split$map2[1];_this.styles[name]=new Property(document,name,value)}}))}var definitions=document.definitions,id=this.getAttribute("id");id.hasValue()&&(definitions[id.getValue()]||(definitions[id.getValue()]=this)),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4=_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(node.childNodes)).call(_context4,(function(childNode){if(1===childNode.nodeType)_this.addChild(childNode);else if(captureTextNodes&&(3===childNode.nodeType||4===childNode.nodeType)){var textNode=document.createTextNode(childNode);textNode.getText().length>0&&_this.addChild(textNode)}}))}}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Element,[{key:"getAttribute",value:function getAttribute(name){var createIfNotExists=arguments.length>1&&void 0!==arguments[1]&&arguments[1],attr=this.attributes[name];if(!attr&&createIfNotExists){var _attr=new Property(this.document,name,"");return this.attributes[name]=_attr,_attr}return attr||Property.empty(this.document)}},{key:"getHrefAttribute",value:function getHrefAttribute(){for(var key in this.attributes)if("href"===key||/:href$/.test(key))return this.attributes[key];return Property.empty(this.document)}},{key:"getStyle",value:function getStyle(name){var createIfNotExists=arguments.length>1&&void 0!==arguments[1]&&arguments[1],skipAncestors=arguments.length>2&&void 0!==arguments[2]&&arguments[2],style=this.styles[name];if(style)return style;var attr=this.getAttribute(name);if(attr&&attr.hasValue())return this.styles[name]=attr,attr;if(!skipAncestors){var parent=this.parent;if(parent){var parentStyle=parent.getStyle(name);if(parentStyle&&parentStyle.hasValue())return parentStyle}}if(createIfNotExists){var _style=new Property(this.document,name,"");return this.styles[name]=_style,_style}return style||Property.empty(this.document)}},{key:"render",value:function render(ctx){if("none"!==this.getStyle("display").getString()&&"hidden"!==this.getStyle("visibility").getString()){if(ctx.save(),this.getStyle("mask").hasValue()){var mask=this.getStyle("mask").getDefinition();mask&&(this.applyEffects(ctx),mask.apply(ctx,this))}else if("none"!==this.getStyle("filter").getValue("none")){var filter=this.getStyle("filter").getDefinition();filter&&(this.applyEffects(ctx),filter.apply(ctx,this))}else this.setContext(ctx),this.renderChildren(ctx),this.clearContext(ctx);ctx.restore()}}},{key:"setContext",value:function setContext(_){}},{key:"applyEffects",value:function applyEffects(ctx){var transform=Transform.fromElement(this.document,this);transform&&transform.apply(ctx);var clipPathStyleProp=this.getStyle("clip-path",!1,!0);if(clipPathStyleProp.hasValue()){var clip=clipPathStyleProp.getDefinition();clip&&clip.apply(ctx)}}},{key:"clearContext",value:function clearContext(_){}},{key:"renderChildren",value:function renderChildren(ctx){var _context5;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context5=this.children).call(_context5,(function(child){child.render(ctx)}))}},{key:"addChild",value:function addChild(childNode){var _context6,child=childNode instanceof Element?childNode:this.document.createElement(childNode);child.parent=this,_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context6=Element.ignoreChildTypes).call(_context6,child.type)||this.children.push(child)}},{key:"matchesSelector",value:function matchesSelector(selector){var _context7,node=this.node;if("function"==typeof node.matches)return node.matches(selector);var styleClasses=node.getAttribute("class");return!(!styleClasses||""===styleClasses)&&_babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31___default()(_context7=styleClasses.split(" ")).call(_context7,(function(styleClass){if(".".concat(styleClass)===selector)return!0}))}},{key:"addStylesFromStyleDefinition",value:function addStylesFromStyleDefinition(){var _this$document=this.document,styles=_this$document.styles,stylesSpecificity=_this$document.stylesSpecificity;for(var selector in styles)if("@"!==selector[0]&&this.matchesSelector(selector)){var style=styles[selector],specificity=stylesSpecificity[selector];if(style)for(var name in style){var existingSpecificity=this.stylesSpecificity[name];void 0===existingSpecificity&&(existingSpecificity="000"),specificity>=existingSpecificity&&(this.styles[name]=style[name],this.stylesSpecificity[name]=specificity)}}}},{key:"removeStyles",value:function removeStyles(element,ignoreStyles){return _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(ignoreStyles).call(ignoreStyles,(function(toRestore,name){var _context8,styleProp=element.getStyle(name);if(!styleProp.hasValue())return toRestore;var value=styleProp.getString();return styleProp.setValue(""),_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context8=[]).call(_context8,_babel_runtime_corejs3_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_30___default()(toRestore),[[name,value]])}),[])}},{key:"restoreStyles",value:function restoreStyles(element,styles){_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(styles).call(styles,(function(_ref){var _ref2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_ref,2),name=_ref2[0],value=_ref2[1];element.getStyle(name,!0).setValue(value)}))}}]),Element}();function _createSuper$3(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$3(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}Element.ignoreChildTypes=["title"];var UnknownElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(UnknownElement,_Element);var _super=_createSuper$3(UnknownElement);function UnknownElement(document,node,captureTextNodes){return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,UnknownElement),_super.call(this,document,node,captureTextNodes)}return UnknownElement}(Element);function wrapFontFamily(fontFamily){var trimmed=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontFamily).call(fontFamily);return/^('|")/.test(trimmed)?trimmed:'"'.concat(trimmed,'"')}function prepareFontStyle(fontStyle){if(!fontStyle)return"";var targetFontStyle=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontStyle).call(fontStyle).toLowerCase();switch(targetFontStyle){case"normal":case"italic":case"oblique":case"inherit":case"initial":case"unset":return targetFontStyle;default:return/^oblique\s+(-|)\d+deg$/.test(targetFontStyle)?targetFontStyle:""}}function prepareFontWeight(fontWeight){if(!fontWeight)return"";var targetFontWeight=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontWeight).call(fontWeight).toLowerCase();switch(targetFontWeight){case"normal":case"bold":case"lighter":case"bolder":case"inherit":case"initial":case"unset":return targetFontWeight;default:return/^[\d.]+$/.test(targetFontWeight)?targetFontWeight:""}}var Font=function(){function Font(fontStyle,fontVariant,fontWeight,fontSize,fontFamily,inherit){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Font);var inheritFont=inherit?"string"==typeof inherit?Font.parse(inherit):inherit:{};this.fontFamily=fontFamily||inheritFont.fontFamily,this.fontSize=fontSize||inheritFont.fontSize,this.fontStyle=fontStyle||inheritFont.fontStyle,this.fontWeight=fontWeight||inheritFont.fontWeight,this.fontVariant=fontVariant||inheritFont.fontVariant}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Font,[{key:"toString",value:function toString(){var _context2,fontFamily,_context;return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context2=[prepareFontStyle(this.fontStyle),this.fontVariant,prepareFontWeight(this.fontWeight),this.fontSize,(fontFamily=this.fontFamily,void 0===process?fontFamily:_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontFamily).call(fontFamily).split(",")).call(_context,wrapFontFamily).join(","))].join(" ")).call(_context2)}}],[{key:"parse",value:function parse(){var _context3,font=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",inherit=arguments.length>1?arguments[1]:void 0,fontStyle="",fontVariant="",fontWeight="",fontSize="",fontFamily="",parts=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context3=compressSpaces(font)).call(_context3).split(" "),set={fontSize:!1,fontStyle:!1,fontWeight:!1,fontVariant:!1};return _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(parts).call(parts,(function(part){var _context4,_context5,_context6;switch(!0){case!set.fontStyle&&_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context4=Font.styles).call(_context4,part):"inherit"!==part&&(fontStyle=part),set.fontStyle=!0;break;case!set.fontVariant&&_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context5=Font.variants).call(_context5,part):"inherit"!==part&&(fontVariant=part),set.fontStyle=!0,set.fontVariant=!0;break;case!set.fontWeight&&_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context6=Font.weights).call(_context6,part):"inherit"!==part&&(fontWeight=part),set.fontStyle=!0,set.fontVariant=!0,set.fontWeight=!0;break;case!set.fontSize:if("inherit"!==part){var _part$split=part.split("/"),_part$split2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_part$split,1);fontSize=_part$split2[0]}set.fontStyle=!0,set.fontVariant=!0,set.fontWeight=!0,set.fontSize=!0;break;default:"inherit"!==part&&(fontFamily+=part)}})),new Font(fontStyle,fontVariant,fontWeight,fontSize,fontFamily,inherit)}}]),Font}();Font.styles="normal|italic|oblique|inherit",Font.variants="normal|small-caps|inherit",Font.weights="normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit";var BoundingBox=function(){function BoundingBox(){var x1=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Number.NaN,y1=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.NaN,x2=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Number.NaN,y2=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Number.NaN;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,BoundingBox),this.x1=x1,this.y1=y1,this.x2=x2,this.y2=y2,this.addPoint(x1,y1),this.addPoint(x2,y2)}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(BoundingBox,[{key:"addPoint",value:function addPoint(x,y){void 0!==x&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=x,this.x2=x),x<this.x1&&(this.x1=x),x>this.x2&&(this.x2=x)),void 0!==y&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=y,this.y2=y),y<this.y1&&(this.y1=y),y>this.y2&&(this.y2=y))}},{key:"addX",value:function addX(x){this.addPoint(x,null)}},{key:"addY",value:function addY(y){this.addPoint(null,y)}},{key:"addBoundingBox",value:function addBoundingBox(boundingBox){if(boundingBox){var x1=boundingBox.x1,y1=boundingBox.y1,x2=boundingBox.x2,y2=boundingBox.y2;this.addPoint(x1,y1),this.addPoint(x2,y2)}}},{key:"sumCubic",value:function sumCubic(t,p0,p1,p2,p3){return Math.pow(1-t,3)*p0+3*Math.pow(1-t,2)*t*p1+3*(1-t)*Math.pow(t,2)*p2+Math.pow(t,3)*p3}},{key:"bezierCurveAdd",value:function bezierCurveAdd(forX,p0,p1,p2,p3){var b=6*p0-12*p1+6*p2,a=-3*p0+9*p1-9*p2+3*p3,c=3*p1-3*p0;if(0!==a){var b2ac=Math.pow(b,2)-4*c*a;if(!(b2ac<0)){var t1=(-b+Math.sqrt(b2ac))/(2*a);0<t1&&t1<1&&(forX?this.addX(this.sumCubic(t1,p0,p1,p2,p3)):this.addY(this.sumCubic(t1,p0,p1,p2,p3)));var t2=(-b-Math.sqrt(b2ac))/(2*a);0<t2&&t2<1&&(forX?this.addX(this.sumCubic(t2,p0,p1,p2,p3)):this.addY(this.sumCubic(t2,p0,p1,p2,p3)))}}else{if(0===b)return;var t=-c/b;0<t&&t<1&&(forX?this.addX(this.sumCubic(t,p0,p1,p2,p3)):this.addY(this.sumCubic(t,p0,p1,p2,p3)))}}},{key:"addBezierCurve",value:function addBezierCurve(p0x,p0y,p1x,p1y,p2x,p2y,p3x,p3y){this.addPoint(p0x,p0y),this.addPoint(p3x,p3y),this.bezierCurveAdd(!0,p0x,p1x,p2x,p3x),this.bezierCurveAdd(!1,p0y,p1y,p2y,p3y)}},{key:"addQuadraticCurve",value:function addQuadraticCurve(p0x,p0y,p1x,p1y,p2x,p2y){var cp1x=p0x+2/3*(p1x-p0x),cp1y=p0y+2/3*(p1y-p0y),cp2x=cp1x+1/3*(p2x-p0x),cp2y=cp1y+1/3*(p2y-p0y);this.addBezierCurve(p0x,p0y,cp1x,cp2x,cp1y,cp2y,p2x,p2y)}},{key:"isPointInBox",value:function isPointInBox(x,y){var x1=this.x1,y1=this.y1,x2=this.x2,y2=this.y2;return x1<=x&&x<=x2&&y1<=y&&y<=y2}},{key:"x",get:function get(){return this.x1}},{key:"y",get:function get(){return this.y1}},{key:"width",get:function get(){return this.x2-this.x1}},{key:"height",get:function get(){return this.y2-this.y1}}]),BoundingBox}();function _createSuper$4(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$4(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var RenderedElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(RenderedElement,_Element);var _super=_createSuper$4(RenderedElement);function RenderedElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,RenderedElement),(_this=_super.apply(this,arguments)).modifiedEmSizeStack=!1,_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(RenderedElement,[{key:"calculateOpacity",value:function calculateOpacity(){for(var opacity=1,element=this;element;){var opacityStyle=element.getStyle("opacity",!1,!0);opacityStyle.hasValue(!0)&&(opacity*=opacityStyle.getNumber()),element=element.parent}return opacity}},{key:"setContext",value:function setContext(ctx){var fromMeasure=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!fromMeasure){var fillStyleProp=this.getStyle("fill"),fillOpacityStyleProp=this.getStyle("fill-opacity"),strokeStyleProp=this.getStyle("stroke"),strokeOpacityProp=this.getStyle("stroke-opacity");if(fillStyleProp.isUrlDefinition()){var fillStyle=fillStyleProp.getFillStyleDefinition(this,fillOpacityStyleProp);fillStyle&&(ctx.fillStyle=fillStyle)}else if(fillStyleProp.hasValue()){"currentColor"===fillStyleProp.getString()&&fillStyleProp.setValue(this.getStyle("color").getColor());var _fillStyle=fillStyleProp.getColor();"inherit"!==_fillStyle&&(ctx.fillStyle="none"===_fillStyle?"rgba(0,0,0,0)":_fillStyle)}if(fillOpacityStyleProp.hasValue()){var _fillStyle2=new Property(this.document,"fill",ctx.fillStyle).addOpacity(fillOpacityStyleProp).getColor();ctx.fillStyle=_fillStyle2}if(strokeStyleProp.isUrlDefinition()){var strokeStyle=strokeStyleProp.getFillStyleDefinition(this,strokeOpacityProp);strokeStyle&&(ctx.strokeStyle=strokeStyle)}else if(strokeStyleProp.hasValue()){"currentColor"===strokeStyleProp.getString()&&strokeStyleProp.setValue(this.getStyle("color").getColor());var _strokeStyle=strokeStyleProp.getString();"inherit"!==_strokeStyle&&(ctx.strokeStyle="none"===_strokeStyle?"rgba(0,0,0,0)":_strokeStyle)}if(strokeOpacityProp.hasValue()){var _strokeStyle2=new Property(this.document,"stroke",ctx.strokeStyle).addOpacity(strokeOpacityProp).getString();ctx.strokeStyle=_strokeStyle2}var strokeWidthStyleProp=this.getStyle("stroke-width");if(strokeWidthStyleProp.hasValue()){var newLineWidth=strokeWidthStyleProp.getPixels();ctx.lineWidth=newLineWidth||PSEUDO_ZERO}var strokeLinecapStyleProp=this.getStyle("stroke-linecap"),strokeLinejoinStyleProp=this.getStyle("stroke-linejoin"),strokeMiterlimitProp=this.getStyle("stroke-miterlimit"),pointOrderStyleProp=this.getStyle("paint-order"),strokeDasharrayStyleProp=this.getStyle("stroke-dasharray"),strokeDashoffsetProp=this.getStyle("stroke-dashoffset");if(strokeLinecapStyleProp.hasValue()&&(ctx.lineCap=strokeLinecapStyleProp.getString()),strokeLinejoinStyleProp.hasValue()&&(ctx.lineJoin=strokeLinejoinStyleProp.getString()),strokeMiterlimitProp.hasValue()&&(ctx.miterLimit=strokeMiterlimitProp.getNumber()),pointOrderStyleProp.hasValue()&&(ctx.paintOrder=pointOrderStyleProp.getValue()),strokeDasharrayStyleProp.hasValue()&&"none"!==strokeDasharrayStyleProp.getString()){var gaps=toNumbers(strokeDasharrayStyleProp.getString());void 0!==ctx.setLineDash?ctx.setLineDash(gaps):void 0!==ctx.webkitLineDash?ctx.webkitLineDash=gaps:void 0===ctx.mozDash||1===gaps.length&&0===gaps[0]||(ctx.mozDash=gaps);var offset=strokeDashoffsetProp.getPixels();void 0!==ctx.lineDashOffset?ctx.lineDashOffset=offset:void 0!==ctx.webkitLineDashOffset?ctx.webkitLineDashOffset=offset:void 0!==ctx.mozDashOffset&&(ctx.mozDashOffset=offset)}}if(this.modifiedEmSizeStack=!1,void 0!==ctx.font){var fontStyleProp=this.getStyle("font"),fontStyleStyleProp=this.getStyle("font-style"),fontVariantStyleProp=this.getStyle("font-variant"),fontWeightStyleProp=this.getStyle("font-weight"),fontSizeStyleProp=this.getStyle("font-size"),fontFamilyStyleProp=this.getStyle("font-family"),font=new Font(fontStyleStyleProp.getString(),fontVariantStyleProp.getString(),fontWeightStyleProp.getString(),fontSizeStyleProp.hasValue()?"".concat(fontSizeStyleProp.getPixels(!0),"px"):"",fontFamilyStyleProp.getString(),Font.parse(fontStyleProp.getString(),ctx.font));fontStyleStyleProp.setValue(font.fontStyle),fontVariantStyleProp.setValue(font.fontVariant),fontWeightStyleProp.setValue(font.fontWeight),fontSizeStyleProp.setValue(font.fontSize),fontFamilyStyleProp.setValue(font.fontFamily),ctx.font=font.toString(),fontSizeStyleProp.isPixels()&&(this.document.emSize=fontSizeStyleProp.getPixels(),this.modifiedEmSizeStack=!0)}fromMeasure||(this.applyEffects(ctx),ctx.globalAlpha=this.calculateOpacity())}},{key:"clearContext",value:function clearContext(ctx){_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(RenderedElement.prototype),"clearContext",this).call(this,ctx),this.modifiedEmSizeStack&&this.document.popEmSize()}}]),RenderedElement}(Element);function _createSuper$5(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$5(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var TextElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(TextElement,_RenderedElement);var _super=_createSuper$5(TextElement);function TextElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,TextElement),(_this=_super.call(this,document,node,(this instanceof TextElement?this.constructor:void 0)===TextElement||captureTextNodes)).type="text",_this.x=0,_this.y=0,_this.measureCache=-1,_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(TextElement,[{key:"setContext",value:function setContext(ctx){var fromMeasure=arguments.length>1&&void 0!==arguments[1]&&arguments[1];_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(TextElement.prototype),"setContext",this).call(this,ctx,fromMeasure);var textBaseline=this.getStyle("dominant-baseline").getTextBaseline()||this.getStyle("alignment-baseline").getTextBaseline();textBaseline&&(ctx.textBaseline=textBaseline)}},{key:"initializeCoordinates",value:function initializeCoordinates(ctx){this.x=this.getAttribute("x").getPixels("x"),this.y=this.getAttribute("y").getPixels("y");var dxAttr=this.getAttribute("dx"),dyAttr=this.getAttribute("dy");dxAttr.hasValue()&&(this.x+=dxAttr.getPixels("x")),dyAttr.hasValue()&&(this.y+=dyAttr.getPixels("y")),this.x+=this.getAnchorDelta(ctx,this,0)}},{key:"getBoundingBox",value:function getBoundingBox(ctx){var _context,_this2=this;if("text"!==this.type)return this.getTElementBoundingBox(ctx);this.initializeCoordinates(ctx);var boundingBox=null;return _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=this.children).call(_context,(function(_,i){var childBoundingBox=_this2.getChildBoundingBox(ctx,_this2,_this2,i);boundingBox?boundingBox.addBoundingBox(childBoundingBox):boundingBox=childBoundingBox})),boundingBox}},{key:"getFontSize",value:function getFontSize(){var document=this.document,parent=this.parent,inheritFontSize=Font.parse(document.ctx.font).fontSize;return parent.getStyle("font-size").getNumber(inheritFontSize)}},{key:"getTElementBoundingBox",value:function getTElementBoundingBox(ctx){var fontSize=this.getFontSize();return new BoundingBox(this.x,this.y-fontSize,this.x+this.measureText(ctx),this.y)}},{key:"getGlyph",value:function getGlyph(font,text,i){var char=text[i],glyph=null;if(font.isArabic){var len=text.length,prevChar=text[i-1],nextChar=text[i+1],arabicForm="isolated";(0===i||" "===prevChar)&&i<len-2&&" "!==nextChar&&(arabicForm="terminal"),i>0&&" "!==prevChar&&i<len-2&&" "!==nextChar&&(arabicForm="medial"),i>0&&" "!==prevChar&&(i===len-1||" "===nextChar)&&(arabicForm="initial"),void 0!==font.glyphs[char]&&((glyph=font.glyphs[char][arabicForm])||"glyph"!==font.glyphs[char].type||(glyph=font.glyphs[char]))}else glyph=font.glyphs[char];return glyph||(glyph=font.missingGlyph),glyph}},{key:"getText",value:function getText(){return""}},{key:"getTextFromNode",value:function getTextFromNode(node){var textNode=node||this.node,childNodes=_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(textNode.parentNode.childNodes),index=_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default()(childNodes).call(childNodes,textNode),lastIndex=childNodes.length-1,text=compressSpaces(textNode.value||textNode.text||textNode.textContent||"");return 0===index&&(text=trimLeft(text)),index===lastIndex&&(text=trimRight(text)),text}},{key:"renderChildren",value:function renderChildren(ctx){var _context2,_this3=this;if("text"===this.type){this.initializeCoordinates(ctx),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context2=this.children).call(_context2,(function(_,i){_this3.renderChild(ctx,_this3,_this3,i)}));var mouse=this.document.screen.mouse;mouse.isWorking()&&mouse.checkBoundingBox(this,this.getBoundingBox(ctx))}else this.renderTElementChildren(ctx)}},{key:"renderTElementChildren",value:function renderTElementChildren(ctx){var document=this.document,parent=this.parent,renderText=this.getText(),customFont=parent.getStyle("font-family").getDefinition();if(customFont)for(var _context3,unitsPerEm=customFont.fontFace.unitsPerEm,ctxFont=Font.parse(document.ctx.font),fontSize=parent.getStyle("font-size").getNumber(ctxFont.fontSize),fontStyle=parent.getStyle("font-style").getString(ctxFont.fontStyle),scale=fontSize/unitsPerEm,text=customFont.isRTL?_babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34___default()(_context3=renderText.split("")).call(_context3).join(""):renderText,dx=toNumbers(parent.getAttribute("dx").getString()),len=text.length,i=0;i<len;i++){var glyph=this.getGlyph(customFont,text,i);ctx.translate(this.x,this.y),ctx.scale(scale,-scale);var lw=ctx.lineWidth;ctx.lineWidth=ctx.lineWidth*unitsPerEm/fontSize,"italic"===fontStyle&&ctx.transform(1,0,.4,1,0,0),glyph.render(ctx),"italic"===fontStyle&&ctx.transform(1,0,-.4,1,0,0),ctx.lineWidth=lw,ctx.scale(1/scale,-1/scale),ctx.translate(-this.x,-this.y),this.x+=fontSize*(glyph.horizAdvX||customFont.horizAdvX)/unitsPerEm,void 0===dx[i]||isNaN(dx[i])||(this.x+=dx[i])}else{var x=this.x,y=this.y;"stroke"===ctx.paintOrder?(ctx.strokeStyle&&ctx.strokeText(renderText,x,y),ctx.fillStyle&&ctx.fillText(renderText,x,y)):(ctx.fillStyle&&ctx.fillText(renderText,x,y),ctx.strokeStyle&&ctx.strokeText(renderText,x,y))}}},{key:"getAnchorDelta",value:function getAnchorDelta(ctx,parent,startI){var textAnchor=this.getStyle("text-anchor").getString("start");if("start"!==textAnchor){for(var children=parent.children,len=children.length,child=null,width=0,i=startI;i<len&&(child=children[i],!(i>startI&&child.getAttribute("x").hasValue()||child.getAttribute("text-anchor").hasValue()));i++)width+=child.measureTextRecursive(ctx);return-1*("end"===textAnchor?width:width/2)}return 0}},{key:"adjustChildCoordinates",value:function adjustChildCoordinates(ctx,textParent,parent,i){var child=parent.children[i];if("function"!=typeof child.measureText)return child;ctx.save(),child.setContext(ctx,!0);var xAttr=child.getAttribute("x"),yAttr=child.getAttribute("y"),dxAttr=child.getAttribute("dx"),dyAttr=child.getAttribute("dy"),textAnchor=child.getAttribute("text-anchor").getString("start");if(0===i&&"textNode"!==child.type&&(xAttr.hasValue()||xAttr.setValue(textParent.getAttribute("x").getValue("0")),yAttr.hasValue()||yAttr.setValue(textParent.getAttribute("y").getValue("0")),dxAttr.hasValue()||dxAttr.setValue(textParent.getAttribute("dx").getValue("0")),dyAttr.hasValue()||dyAttr.setValue(textParent.getAttribute("dy").getValue("0"))),xAttr.hasValue()){if(child.x=xAttr.getPixels("x")+textParent.getAnchorDelta(ctx,parent,i),"start"!==textAnchor){var width=child.measureTextRecursive(ctx);child.x+=-1*("end"===textAnchor?width:width/2)}dxAttr.hasValue()&&(child.x+=dxAttr.getPixels("x"))}else{if("start"!==textAnchor){var _width=child.measureTextRecursive(ctx);textParent.x+=-1*("end"===textAnchor?_width:_width/2)}dxAttr.hasValue()&&(textParent.x+=dxAttr.getPixels("x")),child.x=textParent.x}return textParent.x=child.x+child.measureText(ctx),yAttr.hasValue()?(child.y=yAttr.getPixels("y"),dyAttr.hasValue()&&(child.y+=dyAttr.getPixels("y"))):(dyAttr.hasValue()&&(textParent.y+=dyAttr.getPixels("y")),child.y=textParent.y),textParent.y=child.y,child.clearContext(ctx),ctx.restore(),child}},{key:"getChildBoundingBox",value:function getChildBoundingBox(ctx,textParent,parent,i){var _context4,child=this.adjustChildCoordinates(ctx,textParent,parent,i);if("function"!=typeof child.getBoundingBox)return null;var boundingBox=child.getBoundingBox(ctx);return boundingBox?(_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4=child.children).call(_context4,(function(_,i){var childBoundingBox=textParent.getChildBoundingBox(ctx,textParent,child,i);boundingBox.addBoundingBox(childBoundingBox)})),boundingBox):null}},{key:"renderChild",value:function renderChild(ctx,textParent,parent,i){var _context5,child=this.adjustChildCoordinates(ctx,textParent,parent,i);child.render(ctx),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context5=child.children).call(_context5,(function(_,i){textParent.renderChild(ctx,textParent,child,i)}))}},{key:"measureTextRecursive",value:function measureTextRecursive(ctx){var _context6;return _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(_context6=this.children).call(_context6,(function(width,child){return width+child.measureTextRecursive(ctx)}),this.measureText(ctx))}},{key:"measureText",value:function measureText(ctx){var measureCache=this.measureCache;if(~measureCache)return measureCache;var renderText=this.getText(),measure=this.measureTargetText(ctx,renderText);return this.measureCache=measure,measure}},{key:"measureTargetText",value:function measureTargetText(ctx,targetText){if(!targetText.length)return 0;var parent=this.parent,customFont=parent.getStyle("font-family").getDefinition();if(customFont){for(var _context7,fontSize=this.getFontSize(),text=customFont.isRTL?_babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34___default()(_context7=targetText.split("")).call(_context7).join(""):targetText,dx=toNumbers(parent.getAttribute("dx").getString()),len=text.length,_measure=0,i=0;i<len;i++){_measure+=(this.getGlyph(customFont,text,i).horizAdvX||customFont.horizAdvX)*fontSize/customFont.fontFace.unitsPerEm,void 0===dx[i]||isNaN(dx[i])||(_measure+=dx[i])}return _measure}if(!ctx.measureText)return 10*targetText.length;ctx.save(),this.setContext(ctx,!0);var measure=ctx.measureText(targetText).width;return this.clearContext(ctx),ctx.restore(),measure}}]),TextElement}(RenderedElement);function _createSuper$6(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$6(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var TSpanElement=function(_TextElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(TSpanElement,_TextElement);var _super=_createSuper$6(TSpanElement);function TSpanElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,TSpanElement),(_this=_super.call(this,document,node,(this instanceof TSpanElement?this.constructor:void 0)===TSpanElement||captureTextNodes)).type="tspan",_this.text=_this.children.length>0?"":_this.getTextFromNode(),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(TSpanElement,[{key:"getText",value:function getText(){return this.text}}]),TSpanElement}(TextElement);function _createSuper$7(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$7(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var TextNode=function(_TSpanElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(TextNode,_TSpanElement);var _super=_createSuper$7(TextNode);function TextNode(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,TextNode),(_this=_super.apply(this,arguments)).type="textNode",_this}return TextNode}(TSpanElement);function _createSuper$8(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$8(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var PathParser=function(_SVGPathData){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(PathParser,_SVGPathData);var _super=_createSuper$8(PathParser);function PathParser(path){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,PathParser),(_this=_super.call(this,path.replace(/[+-.]\s+/g,"-").replace(/[^MmZzLlHhVvCcSsQqTtAae\d\s.,+-].*/g,""))).control=null,_this.start=null,_this.current=null,_this.command=null,_this.commands=_this.commands,_this.i=-1,_this.previousCommand=null,_this.points=[],_this.angles=[],_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(PathParser,[{key:"reset",value:function reset(){this.i=-1,this.command=null,this.previousCommand=null,this.start=new Point(0,0),this.control=new Point(0,0),this.current=new Point(0,0),this.points=[],this.angles=[]}},{key:"isEnd",value:function isEnd(){return this.i>=this.commands.length-1}},{key:"next",value:function next(){var command=this.commands[++this.i];return this.previousCommand=this.command,this.command=command,command}},{key:"getPoint",value:function getPoint(){var xProp=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"x",yProp=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"y",point=new Point(this.command[xProp],this.command[yProp]);return this.makeAbsolute(point)}},{key:"getAsControlPoint",value:function getAsControlPoint(xProp,yProp){var point=this.getPoint(xProp,yProp);return this.control=point,point}},{key:"getAsCurrentPoint",value:function getAsCurrentPoint(xProp,yProp){var point=this.getPoint(xProp,yProp);return this.current=point,point}},{key:"getReflectedControlPoint",value:function getReflectedControlPoint(){var previousCommand=this.previousCommand.type;if(previousCommand!==svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.a.CURVE_TO&&previousCommand!==svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.a.SMOOTH_CURVE_TO&&previousCommand!==svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.a.QUAD_TO&&previousCommand!==svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.a.SMOOTH_QUAD_TO)return this.current;var _this$current=this.current,cx=_this$current.x,cy=_this$current.y,_this$control=this.control,ox=_this$control.x,oy=_this$control.y;return new Point(2*cx-ox,2*cy-oy)}},{key:"makeAbsolute",value:function makeAbsolute(point){if(this.command.relative){var _this$current2=this.current,x=_this$current2.x,y=_this$current2.y;point.x+=x,point.y+=y}return point}},{key:"addMarker",value:function addMarker(point,from,priorTo){var points=this.points,angles=this.angles;priorTo&&angles.length>0&&!angles[angles.length-1]&&(angles[angles.length-1]=points[points.length-1].angleTo(priorTo)),this.addMarkerAngle(point,from?from.angleTo(point):null)}},{key:"addMarkerAngle",value:function addMarkerAngle(point,angle){this.points.push(point),this.angles.push(angle)}},{key:"getMarkerPoints",value:function getMarkerPoints(){return this.points}},{key:"getMarkerAngles",value:function getMarkerAngles(){for(var angles=this.angles,len=angles.length,i=0;i<len;i++)if(!angles[i])for(var j=i+1;j<len;j++)if(angles[j]){angles[i]=angles[j];break}return angles}}]),PathParser}(svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.a);function _createSuper$9(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$9(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var PathElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(PathElement,_RenderedElement);var _super=_createSuper$9(PathElement);function PathElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,PathElement),(_this=_super.call(this,document,node,captureTextNodes)).type="path",_this.pathParser=null,_this.pathParser=new PathParser(_this.getAttribute("d").getString()),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(PathElement,[{key:"path",value:function path(ctx){var pathParser=this.pathParser,boundingBox=new BoundingBox;for(pathParser.reset(),ctx&&ctx.beginPath();!pathParser.isEnd();)switch(pathParser.next().type){case PathParser.MOVE_TO:this.pathM(ctx,boundingBox);break;case PathParser.LINE_TO:this.pathL(ctx,boundingBox);break;case PathParser.HORIZ_LINE_TO:this.pathH(ctx,boundingBox);break;case PathParser.VERT_LINE_TO:this.pathV(ctx,boundingBox);break;case PathParser.CURVE_TO:this.pathC(ctx,boundingBox);break;case PathParser.SMOOTH_CURVE_TO:this.pathS(ctx,boundingBox);break;case PathParser.QUAD_TO:this.pathQ(ctx,boundingBox);break;case PathParser.SMOOTH_QUAD_TO:this.pathT(ctx,boundingBox);break;case PathParser.ARC:this.pathA(ctx,boundingBox);break;case PathParser.CLOSE_PATH:this.pathZ(ctx,boundingBox)}return boundingBox}},{key:"getBoundingBox",value:function getBoundingBox(_){return this.path()}},{key:"getMarkers",value:function getMarkers(){var pathParser=this.pathParser,points=pathParser.getMarkerPoints(),angles=pathParser.getMarkerAngles();return _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(points).call(points,(function(point,i){return[point,angles[i]]}))}},{key:"renderChildren",value:function renderChildren(ctx){this.path(ctx),this.document.screen.mouse.checkPath(this,ctx);var fillRuleStyleProp=this.getStyle("fill-rule");""!==ctx.fillStyle&&("inherit"!==fillRuleStyleProp.getString("inherit")?_babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37___default()(ctx).call(ctx,fillRuleStyleProp.getString()):_babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37___default()(ctx).call(ctx)),""!==ctx.strokeStyle&&ctx.stroke();var markers=this.getMarkers();if(markers){var markersLastIndex=markers.length-1,markerStartStyleProp=this.getStyle("marker-start"),markerMidStyleProp=this.getStyle("marker-mid"),markerEndStyleProp=this.getStyle("marker-end");if(markerStartStyleProp.isUrlDefinition()){var marker=markerStartStyleProp.getDefinition(),_markers$=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(markers[0],2),point=_markers$[0],angle=_markers$[1];marker.render(ctx,point,angle)}if(markerMidStyleProp.isUrlDefinition())for(var _marker=markerMidStyleProp.getDefinition(),i=1;i<markersLastIndex;i++){var _markers$i=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(markers[i],2),_point=_markers$i[0],_angle=_markers$i[1];_marker.render(ctx,_point,_angle)}if(markerEndStyleProp.isUrlDefinition()){var _marker2=markerEndStyleProp.getDefinition(),_markers$markersLastI=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(markers[markersLastIndex],2),_point2=_markers$markersLastI[0],_angle2=_markers$markersLastI[1];_marker2.render(ctx,_point2,_angle2)}}}},{key:"pathM",value:function pathM(ctx,boundingBox){var pathParser=this.pathParser,point=PathElement.pathM(pathParser).point,x=point.x,y=point.y;pathParser.addMarker(point),boundingBox.addPoint(x,y),ctx&&ctx.moveTo(x,y)}},{key:"pathL",value:function pathL(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathL=PathElement.pathL(pathParser),current=_PathElement$pathL.current,point=_PathElement$pathL.point,x=point.x,y=point.y;pathParser.addMarker(point,current),boundingBox.addPoint(x,y),ctx&&ctx.lineTo(x,y)}},{key:"pathH",value:function pathH(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathH=PathElement.pathH(pathParser),current=_PathElement$pathH.current,point=_PathElement$pathH.point,x=point.x,y=point.y;pathParser.addMarker(point,current),boundingBox.addPoint(x,y),ctx&&ctx.lineTo(x,y)}},{key:"pathV",value:function pathV(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathV=PathElement.pathV(pathParser),current=_PathElement$pathV.current,point=_PathElement$pathV.point,x=point.x,y=point.y;pathParser.addMarker(point,current),boundingBox.addPoint(x,y),ctx&&ctx.lineTo(x,y)}},{key:"pathC",value:function pathC(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathC=PathElement.pathC(pathParser),current=_PathElement$pathC.current,point=_PathElement$pathC.point,controlPoint=_PathElement$pathC.controlPoint,currentPoint=_PathElement$pathC.currentPoint;pathParser.addMarker(currentPoint,controlPoint,point),boundingBox.addBezierCurve(current.x,current.y,point.x,point.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y),ctx&&ctx.bezierCurveTo(point.x,point.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y)}},{key:"pathS",value:function pathS(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathS=PathElement.pathS(pathParser),current=_PathElement$pathS.current,point=_PathElement$pathS.point,controlPoint=_PathElement$pathS.controlPoint,currentPoint=_PathElement$pathS.currentPoint;pathParser.addMarker(currentPoint,controlPoint,point),boundingBox.addBezierCurve(current.x,current.y,point.x,point.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y),ctx&&ctx.bezierCurveTo(point.x,point.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y)}},{key:"pathQ",value:function pathQ(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathQ=PathElement.pathQ(pathParser),current=_PathElement$pathQ.current,controlPoint=_PathElement$pathQ.controlPoint,currentPoint=_PathElement$pathQ.currentPoint;pathParser.addMarker(currentPoint,controlPoint,controlPoint),boundingBox.addQuadraticCurve(current.x,current.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y),ctx&&ctx.quadraticCurveTo(controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y)}},{key:"pathT",value:function pathT(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathT=PathElement.pathT(pathParser),current=_PathElement$pathT.current,controlPoint=_PathElement$pathT.controlPoint,currentPoint=_PathElement$pathT.currentPoint;pathParser.addMarker(currentPoint,controlPoint,controlPoint),boundingBox.addQuadraticCurve(current.x,current.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y),ctx&&ctx.quadraticCurveTo(controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y)}},{key:"pathA",value:function pathA(ctx,boundingBox){var pathParser=this.pathParser,_PathElement$pathA=PathElement.pathA(pathParser),currentPoint=_PathElement$pathA.currentPoint,rX=_PathElement$pathA.rX,rY=_PathElement$pathA.rY,sweepFlag=_PathElement$pathA.sweepFlag,xAxisRotation=_PathElement$pathA.xAxisRotation,centp=_PathElement$pathA.centp,a1=_PathElement$pathA.a1,ad=_PathElement$pathA.ad,dir=1-sweepFlag?1:-1,ah=a1+dir*(ad/2),halfWay=new Point(centp.x+rX*Math.cos(ah),centp.y+rY*Math.sin(ah));if(pathParser.addMarkerAngle(halfWay,ah-dir*Math.PI/2),pathParser.addMarkerAngle(currentPoint,ah-dir*Math.PI),boundingBox.addPoint(currentPoint.x,currentPoint.y),ctx&&!isNaN(a1)&&!isNaN(ad)){var r=rX>rY?rX:rY,sx=rX>rY?1:rX/rY,sy=rX>rY?rY/rX:1;ctx.translate(centp.x,centp.y),ctx.rotate(xAxisRotation),ctx.scale(sx,sy),ctx.arc(0,0,r,a1,a1+ad,Boolean(1-sweepFlag)),ctx.scale(1/sx,1/sy),ctx.rotate(-xAxisRotation),ctx.translate(-centp.x,-centp.y)}}},{key:"pathZ",value:function pathZ(ctx,boundingBox){PathElement.pathZ(this.pathParser),ctx&&boundingBox.x1!==boundingBox.x2&&boundingBox.y1!==boundingBox.y2&&ctx.closePath()}}],[{key:"pathM",value:function pathM(pathParser){var point=pathParser.getAsCurrentPoint();return pathParser.start=pathParser.current,{point:point}}},{key:"pathL",value:function pathL(pathParser){return{current:pathParser.current,point:pathParser.getAsCurrentPoint()}}},{key:"pathH",value:function pathH(pathParser){var current=pathParser.current,command=pathParser.command,point=new Point((command.relative?current.x:0)+command.x,current.y);return pathParser.current=point,{current:current,point:point}}},{key:"pathV",value:function pathV(pathParser){var current=pathParser.current,command=pathParser.command,point=new Point(current.x,(command.relative?current.y:0)+command.y);return pathParser.current=point,{current:current,point:point}}},{key:"pathC",value:function pathC(pathParser){return{current:pathParser.current,point:pathParser.getPoint("x1","y1"),controlPoint:pathParser.getAsControlPoint("x2","y2"),currentPoint:pathParser.getAsCurrentPoint()}}},{key:"pathS",value:function pathS(pathParser){return{current:pathParser.current,point:pathParser.getReflectedControlPoint(),controlPoint:pathParser.getAsControlPoint("x2","y2"),currentPoint:pathParser.getAsCurrentPoint()}}},{key:"pathQ",value:function pathQ(pathParser){return{current:pathParser.current,controlPoint:pathParser.getAsControlPoint("x1","y1"),currentPoint:pathParser.getAsCurrentPoint()}}},{key:"pathT",value:function pathT(pathParser){var current=pathParser.current,controlPoint=pathParser.getReflectedControlPoint();return pathParser.control=controlPoint,{current:current,controlPoint:controlPoint,currentPoint:pathParser.getAsCurrentPoint()}}},{key:"pathA",value:function pathA(pathParser){var current=pathParser.current,command=pathParser.command,rX=command.rX,rY=command.rY,xRot=command.xRot,lArcFlag=command.lArcFlag,sweepFlag=command.sweepFlag,xAxisRotation=xRot*(Math.PI/180),currentPoint=pathParser.getAsCurrentPoint(),currp=new Point(Math.cos(xAxisRotation)*(current.x-currentPoint.x)/2+Math.sin(xAxisRotation)*(current.y-currentPoint.y)/2,-Math.sin(xAxisRotation)*(current.x-currentPoint.x)/2+Math.cos(xAxisRotation)*(current.y-currentPoint.y)/2),l=Math.pow(currp.x,2)/Math.pow(rX,2)+Math.pow(currp.y,2)/Math.pow(rY,2);l>1&&(rX*=Math.sqrt(l),rY*=Math.sqrt(l));var s=(lArcFlag===sweepFlag?-1:1)*Math.sqrt((Math.pow(rX,2)*Math.pow(rY,2)-Math.pow(rX,2)*Math.pow(currp.y,2)-Math.pow(rY,2)*Math.pow(currp.x,2))/(Math.pow(rX,2)*Math.pow(currp.y,2)+Math.pow(rY,2)*Math.pow(currp.x,2)));isNaN(s)&&(s=0);var cpp=new Point(s*rX*currp.y/rY,s*-rY*currp.x/rX),centp=new Point((current.x+currentPoint.x)/2+Math.cos(xAxisRotation)*cpp.x-Math.sin(xAxisRotation)*cpp.y,(current.y+currentPoint.y)/2+Math.sin(xAxisRotation)*cpp.x+Math.cos(xAxisRotation)*cpp.y),a1=vectorsAngle([1,0],[(currp.x-cpp.x)/rX,(currp.y-cpp.y)/rY]),u=[(currp.x-cpp.x)/rX,(currp.y-cpp.y)/rY],v=[(-currp.x-cpp.x)/rX,(-currp.y-cpp.y)/rY],ad=vectorsAngle(u,v);return vectorsRatio(u,v)<=-1&&(ad=Math.PI),vectorsRatio(u,v)>=1&&(ad=0),{currentPoint:currentPoint,rX:rX,rY:rY,sweepFlag:sweepFlag,xAxisRotation:xAxisRotation,centp:centp,a1:a1,ad:ad}}},{key:"pathZ",value:function pathZ(pathParser){pathParser.current=pathParser.start}}]),PathElement}(RenderedElement);function _createSuper$a(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$a(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var SVGElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(SVGElement,_RenderedElement);var _super=_createSuper$a(SVGElement);function SVGElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,SVGElement),(_this=_super.apply(this,arguments)).type="svg",_this.root=!1,_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(SVGElement,[{key:"setContext",value:function setContext(ctx){var document=this.document,screen=document.screen,window=document.window,canvas=ctx.canvas;if(screen.setDefaults(ctx),canvas.style&&void 0!==ctx.font&&window&&void 0!==window.getComputedStyle){ctx.font=window.getComputedStyle(canvas).getPropertyValue("font");var fontSizeProp=new Property(document,"fontSize",Font.parse(ctx.font).fontSize);fontSizeProp.hasValue()&&(document.rootEmSize=fontSizeProp.getPixels("y"),document.emSize=document.rootEmSize)}this.getAttribute("x").hasValue()||this.getAttribute("x",!0).setValue(0),this.getAttribute("y").hasValue()||this.getAttribute("y",!0).setValue(0);var _screen$viewPort=screen.viewPort,width=_screen$viewPort.width,height=_screen$viewPort.height;this.getStyle("width").hasValue()||this.getStyle("width",!0).setValue("100%"),this.getStyle("height").hasValue()||this.getStyle("height",!0).setValue("100%"),this.getStyle("color").hasValue()||this.getStyle("color",!0).setValue("black");var refXAttr=this.getAttribute("refX"),refYAttr=this.getAttribute("refY"),viewBoxAttr=this.getAttribute("viewBox"),viewBox=viewBoxAttr.hasValue()?toNumbers(viewBoxAttr.getString()):null,clip=!this.root&&"visible"!==this.getStyle("overflow").getValue("hidden"),minX=0,minY=0,clipX=0,clipY=0;viewBox&&(minX=viewBox[0],minY=viewBox[1]),this.root||(width=this.getStyle("width").getPixels("x"),height=this.getStyle("height").getPixels("y"),"marker"===this.type&&(clipX=minX,clipY=minY,minX=0,minY=0)),screen.viewPort.setCurrent(width,height),this.node&&this.getStyle("transform",!1,!0).hasValue()&&!this.getStyle("transform-origin",!1,!0).hasValue()&&this.getStyle("transform-origin",!0,!0).setValue("50% 50%"),_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(SVGElement.prototype),"setContext",this).call(this,ctx),ctx.translate(this.getAttribute("x").getPixels("x"),this.getAttribute("y").getPixels("y")),viewBox&&(width=viewBox[2],height=viewBox[3]),document.setViewBox({ctx:ctx,aspectRatio:this.getAttribute("preserveAspectRatio").getString(),width:screen.viewPort.width,desiredWidth:width,height:screen.viewPort.height,desiredHeight:height,minX:minX,minY:minY,refX:refXAttr.getValue(),refY:refYAttr.getValue(),clip:clip,clipX:clipX,clipY:clipY}),viewBox&&(screen.viewPort.removeCurrent(),screen.viewPort.setCurrent(width,height))}},{key:"clearContext",value:function clearContext(ctx){_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(SVGElement.prototype),"clearContext",this).call(this,ctx),this.document.screen.viewPort.removeCurrent()}},{key:"resize",value:function resize(width){var _context,height=arguments.length>1&&void 0!==arguments[1]?arguments[1]:width,preserveAspectRatio=arguments.length>2&&void 0!==arguments[2]&&arguments[2],widthAttr=this.getAttribute("width",!0),heightAttr=this.getAttribute("height",!0),viewBoxAttr=this.getAttribute("viewBox"),styleAttr=this.getAttribute("style"),originWidth=widthAttr.getNumber(0),originHeight=heightAttr.getNumber(0);if(preserveAspectRatio)if("string"==typeof preserveAspectRatio)this.getAttribute("preserveAspectRatio",!0).setValue(preserveAspectRatio);else{var preserveAspectRatioAttr=this.getAttribute("preserveAspectRatio");preserveAspectRatioAttr.hasValue()&&preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\s*(\S.*\S)\s*$/,"$1"))}(widthAttr.setValue(width),heightAttr.setValue(height),viewBoxAttr.hasValue())||viewBoxAttr.setValue(_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context="0 0 ".concat(originWidth||width," ")).call(_context,originHeight||height));if(styleAttr.hasValue()){var widthStyle=this.getStyle("width"),heightStyle=this.getStyle("height");widthStyle.hasValue()&&widthStyle.setValue("".concat(width,"px")),heightStyle.hasValue()&&heightStyle.setValue("".concat(height,"px"))}}}]),SVGElement}(RenderedElement);function _createSuper$b(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$b(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var RectElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(RectElement,_PathElement);var _super=_createSuper$b(RectElement);function RectElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,RectElement),(_this=_super.apply(this,arguments)).type="rect",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(RectElement,[{key:"path",value:function path(ctx){var x=this.getAttribute("x").getPixels("x"),y=this.getAttribute("y").getPixels("y"),width=this.getStyle("width",!1,!0).getPixels("x"),height=this.getStyle("height",!1,!0).getPixels("y"),rxAttr=this.getAttribute("rx"),ryAttr=this.getAttribute("ry"),rx=rxAttr.getPixels("x"),ry=ryAttr.getPixels("y");if(rxAttr.hasValue()&&!ryAttr.hasValue()&&(ry=rx),ryAttr.hasValue()&&!rxAttr.hasValue()&&(rx=ry),rx=Math.min(rx,width/2),ry=Math.min(ry,height/2),ctx){var KAPPA=(Math.sqrt(2)-1)/3*4;ctx.beginPath(),height>0&&width>0&&(ctx.moveTo(x+rx,y),ctx.lineTo(x+width-rx,y),ctx.bezierCurveTo(x+width-rx+KAPPA*rx,y,x+width,y+ry-KAPPA*ry,x+width,y+ry),ctx.lineTo(x+width,y+height-ry),ctx.bezierCurveTo(x+width,y+height-ry+KAPPA*ry,x+width-rx+KAPPA*rx,y+height,x+width-rx,y+height),ctx.lineTo(x+rx,y+height),ctx.bezierCurveTo(x+rx-KAPPA*rx,y+height,x,y+height-ry+KAPPA*ry,x,y+height-ry),ctx.lineTo(x,y+ry),ctx.bezierCurveTo(x,y+ry-KAPPA*ry,x+rx-KAPPA*rx,y,x+rx,y),ctx.closePath())}return new BoundingBox(x,y,x+width,y+height)}},{key:"getMarkers",value:function getMarkers(){return null}}]),RectElement}(PathElement);function _createSuper$c(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$c(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var CircleElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(CircleElement,_PathElement);var _super=_createSuper$c(CircleElement);function CircleElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,CircleElement),(_this=_super.apply(this,arguments)).type="circle",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(CircleElement,[{key:"path",value:function path(ctx){var cx=this.getAttribute("cx").getPixels("x"),cy=this.getAttribute("cy").getPixels("y"),r=this.getAttribute("r").getPixels();return ctx&&r>0&&(ctx.beginPath(),ctx.arc(cx,cy,r,0,2*Math.PI,!1),ctx.closePath()),new BoundingBox(cx-r,cy-r,cx+r,cy+r)}},{key:"getMarkers",value:function getMarkers(){return null}}]),CircleElement}(PathElement);function _createSuper$d(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$d(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var EllipseElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(EllipseElement,_PathElement);var _super=_createSuper$d(EllipseElement);function EllipseElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,EllipseElement),(_this=_super.apply(this,arguments)).type="ellipse",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(EllipseElement,[{key:"path",value:function path(ctx){var KAPPA=(Math.sqrt(2)-1)/3*4,rx=this.getAttribute("rx").getPixels("x"),ry=this.getAttribute("ry").getPixels("y"),cx=this.getAttribute("cx").getPixels("x"),cy=this.getAttribute("cy").getPixels("y");return ctx&&rx>0&&ry>0&&(ctx.beginPath(),ctx.moveTo(cx+rx,cy),ctx.bezierCurveTo(cx+rx,cy+KAPPA*ry,cx+KAPPA*rx,cy+ry,cx,cy+ry),ctx.bezierCurveTo(cx-KAPPA*rx,cy+ry,cx-rx,cy+KAPPA*ry,cx-rx,cy),ctx.bezierCurveTo(cx-rx,cy-KAPPA*ry,cx-KAPPA*rx,cy-ry,cx,cy-ry),ctx.bezierCurveTo(cx+KAPPA*rx,cy-ry,cx+rx,cy-KAPPA*ry,cx+rx,cy),ctx.closePath()),new BoundingBox(cx-rx,cy-ry,cx+rx,cy+ry)}},{key:"getMarkers",value:function getMarkers(){return null}}]),EllipseElement}(PathElement);function _createSuper$e(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$e(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var LineElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(LineElement,_PathElement);var _super=_createSuper$e(LineElement);function LineElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,LineElement),(_this=_super.apply(this,arguments)).type="line",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(LineElement,[{key:"getPoints",value:function getPoints(){return[new Point(this.getAttribute("x1").getPixels("x"),this.getAttribute("y1").getPixels("y")),new Point(this.getAttribute("x2").getPixels("x"),this.getAttribute("y2").getPixels("y"))]}},{key:"path",value:function path(ctx){var _this$getPoints=this.getPoints(),_this$getPoints2=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_this$getPoints,2),_this$getPoints2$=_this$getPoints2[0],x0=_this$getPoints2$.x,y0=_this$getPoints2$.y,_this$getPoints2$2=_this$getPoints2[1],x1=_this$getPoints2$2.x,y1=_this$getPoints2$2.y;return ctx&&(ctx.beginPath(),ctx.moveTo(x0,y0),ctx.lineTo(x1,y1)),new BoundingBox(x0,y0,x1,y1)}},{key:"getMarkers",value:function getMarkers(){var _this$getPoints3=this.getPoints(),_this$getPoints4=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(_this$getPoints3,2),p0=_this$getPoints4[0],p1=_this$getPoints4[1],a=p0.angleTo(p1);return[[p0,a],[p1,a]]}}]),LineElement}(PathElement);function _createSuper$f(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$f(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var PolylineElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(PolylineElement,_PathElement);var _super=_createSuper$f(PolylineElement);function PolylineElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,PolylineElement),(_this=_super.call(this,document,node,captureTextNodes)).type="polyline",_this.points=[],_this.points=Point.parsePath(_this.getAttribute("points").getString()),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(PolylineElement,[{key:"path",value:function path(ctx){var points=this.points,_points$=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(points,1)[0],x0=_points$.x,y0=_points$.y,boundingBox=new BoundingBox(x0,y0);return ctx&&(ctx.beginPath(),ctx.moveTo(x0,y0)),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(points).call(points,(function(_ref){var x=_ref.x,y=_ref.y;boundingBox.addPoint(x,y),ctx&&ctx.lineTo(x,y)})),boundingBox}},{key:"getMarkers",value:function getMarkers(){var points=this.points,lastIndex=points.length-1,markers=[];return _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(points).call(points,(function(point,i){i!==lastIndex&&markers.push([point,point.angleTo(points[i+1])])})),markers.length>0&&markers.push([points[points.length-1],markers[markers.length-1][1]]),markers}}]),PolylineElement}(PathElement);function _createSuper$g(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$g(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var PolygonElement=function(_PolylineElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(PolygonElement,_PolylineElement);var _super=_createSuper$g(PolygonElement);function PolygonElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,PolygonElement),(_this=_super.apply(this,arguments)).type="polygon",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(PolygonElement,[{key:"path",value:function path(ctx){var boundingBox=_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(PolygonElement.prototype),"path",this).call(this,ctx),_this$points$=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(this.points,1)[0],x=_this$points$.x,y=_this$points$.y;return ctx&&(ctx.lineTo(x,y),ctx.closePath()),boundingBox}}]),PolygonElement}(PolylineElement);function _createSuper$h(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$h(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var PatternElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(PatternElement,_Element);var _super=_createSuper$h(PatternElement);function PatternElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,PatternElement),(_this=_super.apply(this,arguments)).type="pattern",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(PatternElement,[{key:"createPattern",value:function createPattern(ctx,_,parentOpacityProp){var width=this.getStyle("width").getPixels("x",!0),height=this.getStyle("height").getPixels("y",!0),patternSvg=new SVGElement(this.document,null);patternSvg.attributes.viewBox=new Property(this.document,"viewBox",this.getAttribute("viewBox").getValue()),patternSvg.attributes.width=new Property(this.document,"width","".concat(width,"px")),patternSvg.attributes.height=new Property(this.document,"height","".concat(height,"px")),patternSvg.attributes.transform=new Property(this.document,"transform",this.getAttribute("patternTransform").getValue()),patternSvg.children=this.children;var patternCanvas=this.document.createCanvas(width,height),patternCtx=patternCanvas.getContext("2d"),xAttr=this.getAttribute("x"),yAttr=this.getAttribute("y");xAttr.hasValue()&&yAttr.hasValue()&&patternCtx.translate(xAttr.getPixels("x",!0),yAttr.getPixels("y",!0)),parentOpacityProp.hasValue()?this.styles["fill-opacity"]=parentOpacityProp:_babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39___default()(this.styles,"fill-opacity");for(var x=-1;x<=1;x++)for(var y=-1;y<=1;y++)patternCtx.save(),patternSvg.attributes.x=new Property(this.document,"x",x*patternCanvas.width),patternSvg.attributes.y=new Property(this.document,"y",y*patternCanvas.height),patternSvg.render(patternCtx),patternCtx.restore();return ctx.createPattern(patternCanvas,"repeat")}}]),PatternElement}(Element);function _createSuper$i(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$i(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var MarkerElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(MarkerElement,_Element);var _super=_createSuper$i(MarkerElement);function MarkerElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,MarkerElement),(_this=_super.apply(this,arguments)).type="marker",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(MarkerElement,[{key:"render",value:function render(ctx,point,angle){if(point){var x=point.x,y=point.y,orient=this.getAttribute("orient").getValue("auto"),markerUnits=this.getAttribute("markerUnits").getValue("strokeWidth");ctx.translate(x,y),"auto"===orient&&ctx.rotate(angle),"strokeWidth"===markerUnits&&ctx.scale(ctx.lineWidth,ctx.lineWidth),ctx.save();var markerSvg=new SVGElement(this.document,null);markerSvg.type=this.type,markerSvg.attributes.viewBox=new Property(this.document,"viewBox",this.getAttribute("viewBox").getValue()),markerSvg.attributes.refX=new Property(this.document,"refX",this.getAttribute("refX").getValue()),markerSvg.attributes.refY=new Property(this.document,"refY",this.getAttribute("refY").getValue()),markerSvg.attributes.width=new Property(this.document,"width",this.getAttribute("markerWidth").getValue()),markerSvg.attributes.height=new Property(this.document,"height",this.getAttribute("markerHeight").getValue()),markerSvg.attributes.overflow=new Property(this.document,"overflow",this.getAttribute("overflow").getValue()),markerSvg.attributes.fill=new Property(this.document,"fill",this.getAttribute("fill").getColor("black")),markerSvg.attributes.stroke=new Property(this.document,"stroke",this.getAttribute("stroke").getValue("none")),markerSvg.children=this.children,markerSvg.render(ctx),ctx.restore(),"strokeWidth"===markerUnits&&ctx.scale(1/ctx.lineWidth,1/ctx.lineWidth),"auto"===orient&&ctx.rotate(-angle),ctx.translate(-x,-y)}}}]),MarkerElement}(Element);function _createSuper$j(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$j(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var DefsElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(DefsElement,_Element);var _super=_createSuper$j(DefsElement);function DefsElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,DefsElement),(_this=_super.apply(this,arguments)).type="defs",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(DefsElement,[{key:"render",value:function render(){}}]),DefsElement}(Element);function _createSuper$k(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$k(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var GElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(GElement,_RenderedElement);var _super=_createSuper$k(GElement);function GElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,GElement),(_this=_super.apply(this,arguments)).type="g",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(GElement,[{key:"getBoundingBox",value:function getBoundingBox(ctx){var _context,boundingBox=new BoundingBox;return _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=this.children).call(_context,(function(child){boundingBox.addBoundingBox(child.getBoundingBox(ctx))})),boundingBox}}]),GElement}(RenderedElement);function _createSuper$l(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$l(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var GradientElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(GradientElement,_Element);var _super=_createSuper$l(GradientElement);function GradientElement(document,node,captureTextNodes){var _this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,GradientElement),(_this=_super.call(this,document,node,captureTextNodes)).attributesToInherit=["gradientUnits"],_this.stops=[];var _assertThisInitialize=_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40___default()(_this),stops=_assertThisInitialize.stops,children=_assertThisInitialize.children;return _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(children).call(children,(function(child){"stop"===child.type&&stops.push(child)})),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(GradientElement,[{key:"getGradientUnits",value:function getGradientUnits(){return this.getAttribute("gradientUnits").getString("objectBoundingBox")}},{key:"createGradient",value:function createGradient(ctx,element,parentOpacityProp){var _this2=this,stopsContainer=this;this.getHrefAttribute().hasValue()&&(stopsContainer=this.getHrefAttribute().getDefinition(),this.inheritStopContainer(stopsContainer));var stops=stopsContainer.stops,gradient=this.getGradient(ctx,element);if(!gradient)return this.addParentOpacity(parentOpacityProp,stops[stops.length-1].color);if(_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(stops).call(stops,(function(stop){gradient.addColorStop(stop.offset,_this2.addParentOpacity(parentOpacityProp,stop.color))})),this.getAttribute("gradientTransform").hasValue()){var document=this.document,_document$screen=document.screen,MAX_VIRTUAL_PIXELS=_document$screen.MAX_VIRTUAL_PIXELS,viewPort=_document$screen.viewPort,rootView=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(viewPort.viewPorts,1)[0],rect=new RectElement(document,null);rect.attributes.x=new Property(document,"x",-MAX_VIRTUAL_PIXELS/3),rect.attributes.y=new Property(document,"y",-MAX_VIRTUAL_PIXELS/3),rect.attributes.width=new Property(document,"width",MAX_VIRTUAL_PIXELS),rect.attributes.height=new Property(document,"height",MAX_VIRTUAL_PIXELS);var group=new GElement(document,null);group.attributes.transform=new Property(document,"transform",this.getAttribute("gradientTransform").getValue()),group.children=[rect];var patternSvg=new SVGElement(document,null);patternSvg.attributes.x=new Property(document,"x",0),patternSvg.attributes.y=new Property(document,"y",0),patternSvg.attributes.width=new Property(document,"width",rootView.width),patternSvg.attributes.height=new Property(document,"height",rootView.height),patternSvg.children=[group];var patternCanvas=document.createCanvas(rootView.width,rootView.height),patternCtx=patternCanvas.getContext("2d");return patternCtx.fillStyle=gradient,patternSvg.render(patternCtx),patternCtx.createPattern(patternCanvas,"no-repeat")}return gradient}},{key:"inheritStopContainer",value:function inheritStopContainer(stopsContainer){var _context,_this3=this;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=this.attributesToInherit).call(_context,(function(attributeToInherit){!_this3.getAttribute(attributeToInherit).hasValue()&&stopsContainer.getAttribute(attributeToInherit).hasValue()&&_this3.getAttribute(attributeToInherit,!0).setValue(stopsContainer.getAttribute(attributeToInherit).getValue())}))}},{key:"addParentOpacity",value:function addParentOpacity(parentOpacityProp,color){return parentOpacityProp.hasValue()?new Property(this.document,"color",color).addOpacity(parentOpacityProp).getColor():color}}]),GradientElement}(Element);function _createSuper$m(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$m(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var LinearGradientElement=function(_GradientElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(LinearGradientElement,_GradientElement);var _super=_createSuper$m(LinearGradientElement);function LinearGradientElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,LinearGradientElement),(_this=_super.call(this,document,node,captureTextNodes)).type="linearGradient",_this.attributesToInherit.push("x1","y1","x2","y2"),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(LinearGradientElement,[{key:"getGradient",value:function getGradient(ctx,element){var isBoundingBoxUnits="objectBoundingBox"===this.getGradientUnits(),boundingBox=isBoundingBoxUnits?element.getBoundingBox(ctx):null;if(isBoundingBoxUnits&&!boundingBox)return null;this.getAttribute("x1").hasValue()||this.getAttribute("y1").hasValue()||this.getAttribute("x2").hasValue()||this.getAttribute("y2").hasValue()||(this.getAttribute("x1",!0).setValue(0),this.getAttribute("y1",!0).setValue(0),this.getAttribute("x2",!0).setValue(1),this.getAttribute("y2",!0).setValue(0));var x1=isBoundingBoxUnits?boundingBox.x+boundingBox.width*this.getAttribute("x1").getNumber():this.getAttribute("x1").getPixels("x"),y1=isBoundingBoxUnits?boundingBox.y+boundingBox.height*this.getAttribute("y1").getNumber():this.getAttribute("y1").getPixels("y"),x2=isBoundingBoxUnits?boundingBox.x+boundingBox.width*this.getAttribute("x2").getNumber():this.getAttribute("x2").getPixels("x"),y2=isBoundingBoxUnits?boundingBox.y+boundingBox.height*this.getAttribute("y2").getNumber():this.getAttribute("y2").getPixels("y");return x1===x2&&y1===y2?null:ctx.createLinearGradient(x1,y1,x2,y2)}}]),LinearGradientElement}(GradientElement);function _createSuper$n(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$n(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var RadialGradientElement=function(_GradientElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(RadialGradientElement,_GradientElement);var _super=_createSuper$n(RadialGradientElement);function RadialGradientElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,RadialGradientElement),(_this=_super.call(this,document,node,captureTextNodes)).type="radialGradient",_this.attributesToInherit.push("cx","cy","r","fx","fy","fr"),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(RadialGradientElement,[{key:"getGradient",value:function getGradient(ctx,element){var isBoundingBoxUnits="objectBoundingBox"===this.getGradientUnits(),boundingBox=element.getBoundingBox(ctx);if(isBoundingBoxUnits&&!boundingBox)return null;this.getAttribute("cx").hasValue()||this.getAttribute("cx",!0).setValue("50%"),this.getAttribute("cy").hasValue()||this.getAttribute("cy",!0).setValue("50%"),this.getAttribute("r").hasValue()||this.getAttribute("r",!0).setValue("50%");var cx=isBoundingBoxUnits?boundingBox.x+boundingBox.width*this.getAttribute("cx").getNumber():this.getAttribute("cx").getPixels("x"),cy=isBoundingBoxUnits?boundingBox.y+boundingBox.height*this.getAttribute("cy").getNumber():this.getAttribute("cy").getPixels("y"),fx=cx,fy=cy;this.getAttribute("fx").hasValue()&&(fx=isBoundingBoxUnits?boundingBox.x+boundingBox.width*this.getAttribute("fx").getNumber():this.getAttribute("fx").getPixels("x")),this.getAttribute("fy").hasValue()&&(fy=isBoundingBoxUnits?boundingBox.y+boundingBox.height*this.getAttribute("fy").getNumber():this.getAttribute("fy").getPixels("y"));var r=isBoundingBoxUnits?(boundingBox.width+boundingBox.height)/2*this.getAttribute("r").getNumber():this.getAttribute("r").getPixels(),fr=this.getAttribute("fr").getPixels();return ctx.createRadialGradient(fx,fy,fr,cx,cy,r)}}]),RadialGradientElement}(GradientElement);function _createSuper$o(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$o(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var StopElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(StopElement,_Element);var _super=_createSuper$o(StopElement);function StopElement(document,node,captureTextNodes){var _this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,StopElement),(_this=_super.call(this,document,node,captureTextNodes)).type="stop";var offset=Math.max(0,Math.min(1,_this.getAttribute("offset").getNumber())),stopOpacity=_this.getStyle("stop-opacity"),stopColor=_this.getStyle("stop-color",!0);return""===stopColor.getString()&&stopColor.setValue("#000"),stopOpacity.hasValue()&&(stopColor=stopColor.addOpacity(stopOpacity)),_this.offset=offset,_this.color=stopColor.getColor(),_this}return StopElement}(Element);function _createSuper$p(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$p(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var AnimateElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(AnimateElement,_Element);var _super=_createSuper$p(AnimateElement);function AnimateElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,AnimateElement),(_this=_super.call(this,document,node,captureTextNodes)).type="animate",_this.duration=0,_this.initialValue=null,_this.initialUnits="",_this.removed=!1,_this.frozen=!1,document.screen.animations.push(_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40___default()(_this)),_this.begin=_this.getAttribute("begin").getMilliseconds(),_this.maxDuration=_this.begin+_this.getAttribute("dur").getMilliseconds(),_this.from=_this.getAttribute("from"),_this.to=_this.getAttribute("to"),_this.values=_this.getAttribute("values"),_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(_this).hasValue()&&_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(_this).setValue(_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(_this).getString().split(";")),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(AnimateElement,[{key:"getProperty",value:function getProperty(){var attributeType=this.getAttribute("attributeType").getString(),attributeName=this.getAttribute("attributeName").getString();return"CSS"===attributeType?this.parent.getStyle(attributeName,!0):this.parent.getAttribute(attributeName,!0)}},{key:"calcValue",value:function calcValue(){var _context,initialUnits=this.initialUnits,_this$getProgress=this.getProgress(),progress=_this$getProgress.progress,from=_this$getProgress.from,to=_this$getProgress.to,newValue=from.getNumber()+(to.getNumber()-from.getNumber())*progress;return"%"===initialUnits&&(newValue*=100),_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context="".concat(newValue)).call(_context,initialUnits)}},{key:"update",value:function update(delta){var parent=this.parent,prop=this.getProperty();if(this.initialValue||(this.initialValue=prop.getString(),this.initialUnits=prop.getUnits()),this.duration>this.maxDuration){var fill=this.getAttribute("fill").getString("remove");if("indefinite"===this.getAttribute("repeatCount").getString()||"indefinite"===this.getAttribute("repeatDur").getString())this.duration=0;else if("freeze"!==fill||this.frozen){if("remove"===fill&&!this.removed)return this.removed=!0,prop.setValue(parent.animationFrozen?parent.animationFrozenValue:this.initialValue),!0}else this.frozen=!0,parent.animationFrozen=!0,parent.animationFrozenValue=prop.getString();return!1}this.duration+=delta;var updated=!1;if(this.begin<this.duration){var newValue=this.calcValue(),typeAttr=this.getAttribute("type");if(typeAttr.hasValue()){var _context2,type=typeAttr.getString();newValue=_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context2="".concat(type,"(")).call(_context2,newValue,")")}prop.setValue(newValue),updated=!0}return updated}},{key:"getProgress",value:function getProgress(){var document=this.document,values=_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(this),result={progress:(this.duration-this.begin)/(this.maxDuration-this.begin)};if(values.hasValue()){var p=result.progress*(values.getValue().length-1),lb=Math.floor(p),ub=Math.ceil(p);result.from=new Property(document,"from",_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(values.getValue()[lb])),result.to=new Property(document,"to",_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(values.getValue()[ub])),result.progress=(p-lb)/(ub-lb)}else result.from=this.from,result.to=this.to;return result}}]),AnimateElement}(Element);function _createSuper$q(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$q(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var AnimateColorElement=function(_AnimateElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(AnimateColorElement,_AnimateElement);var _super=_createSuper$q(AnimateColorElement);function AnimateColorElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,AnimateColorElement),(_this=_super.apply(this,arguments)).type="animateColor",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(AnimateColorElement,[{key:"calcValue",value:function calcValue(){var _this$getProgress=this.getProgress(),progress=_this$getProgress.progress,from=_this$getProgress.from,to=_this$getProgress.to,colorFrom=new rgbcolor__WEBPACK_IMPORTED_MODULE_25___default.a(from.getColor()),colorTo=new rgbcolor__WEBPACK_IMPORTED_MODULE_25___default.a(to.getColor());if(colorFrom.ok&&colorTo.ok){var _context,_context2,r=colorFrom.r+(colorTo.r-colorFrom.r)*progress,g=colorFrom.g+(colorTo.g-colorFrom.g)*progress,b=colorFrom.b+(colorTo.b-colorFrom.b)*progress;return _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context=_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context2="rgb(".concat(_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default()(r,10),", ")).call(_context2,_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default()(g,10),", ")).call(_context,_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default()(b,10),")")}return this.getAttribute("from").getColor()}}]),AnimateColorElement}(AnimateElement);function _createSuper$r(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$r(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var AnimateTransformElement=function(_AnimateElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(AnimateTransformElement,_AnimateElement);var _super=_createSuper$r(AnimateTransformElement);function AnimateTransformElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,AnimateTransformElement),(_this=_super.apply(this,arguments)).type="animateTransform",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(AnimateTransformElement,[{key:"calcValue",value:function calcValue(){var _this$getProgress=this.getProgress(),progress=_this$getProgress.progress,from=_this$getProgress.from,to=_this$getProgress.to,transformFrom=toNumbers(from.getString()),transformTo=toNumbers(to.getString());return _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(transformFrom).call(transformFrom,(function(from,i){return from+(transformTo[i]-from)*progress})).join(" ")}}]),AnimateTransformElement}(AnimateElement);function _createForOfIteratorHelper(o,allowArrayLike){var it;if(void 0===_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46___default.a||null==_babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45___default()(o)){if(_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44___default()(o)||(it=function _unsupportedIterableToArray(o,minLen){var _context;if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=_babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47___default()(_context=Object.prototype.toString.call(o)).call(_context,8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=_babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43___default()(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createSuper$s(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$s(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var FontElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FontElement,_Element);var _super=_createSuper$s(FontElement);function FontElement(document,node,captureTextNodes){var _this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FontElement),(_this=_super.call(this,document,node,captureTextNodes)).type="font",_this.glyphs={},_this.horizAdvX=_this.getAttribute("horiz-adv-x").getNumber();var _step,definitions=document.definitions,_iterator=_createForOfIteratorHelper(_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40___default()(_this).children);try{for(_iterator.s();!(_step=_iterator.n()).done;){var child=_step.value;switch(child.type){case"font-face":_this.fontFace=child;var fontFamilyStyle=child.getStyle("font-family");fontFamilyStyle.hasValue()&&(definitions[fontFamilyStyle.getString()]=_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40___default()(_this));break;case"missing-glyph":_this.missingGlyph=child;break;case"glyph":var glyph=child;glyph.arabicForm?(_this.isRTL=!0,_this.isArabic=!0,void 0===_this.glyphs[glyph.unicode]&&(_this.glyphs[glyph.unicode]={}),_this.glyphs[glyph.unicode][glyph.arabicForm]=glyph):_this.glyphs[glyph.unicode]=glyph}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return _this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FontElement,[{key:"render",value:function render(){}}]),FontElement}(Element);function _createSuper$t(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$t(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var FontFaceElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FontFaceElement,_Element);var _super=_createSuper$t(FontFaceElement);function FontFaceElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FontFaceElement),(_this=_super.call(this,document,node,captureTextNodes)).type="font-face",_this.ascent=_this.getAttribute("ascent").getNumber(),_this.descent=_this.getAttribute("descent").getNumber(),_this.unitsPerEm=_this.getAttribute("units-per-em").getNumber(),_this}return FontFaceElement}(Element);function _createSuper$u(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$u(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var MissingGlyphElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(MissingGlyphElement,_PathElement);var _super=_createSuper$u(MissingGlyphElement);function MissingGlyphElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,MissingGlyphElement),(_this=_super.apply(this,arguments)).type="missing-glyph",_this.horizAdvX=0,_this}return MissingGlyphElement}(PathElement);function _createSuper$v(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$v(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var GlyphElement=function(_PathElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(GlyphElement,_PathElement);var _super=_createSuper$v(GlyphElement);function GlyphElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,GlyphElement),(_this=_super.call(this,document,node,captureTextNodes)).type="glyph",_this.horizAdvX=_this.getAttribute("horiz-adv-x").getNumber(),_this.unicode=_this.getAttribute("unicode").getString(),_this.arabicForm=_this.getAttribute("arabic-form").getString(),_this}return GlyphElement}(PathElement);function _createSuper$w(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$w(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var TRefElement=function(_TextElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(TRefElement,_TextElement);var _super=_createSuper$w(TRefElement);function TRefElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,TRefElement),(_this=_super.apply(this,arguments)).type="tref",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(TRefElement,[{key:"getText",value:function getText(){var element=this.getHrefAttribute().getDefinition();if(element){var firstChild=element.children[0];if(firstChild)return firstChild.getText()}return""}}]),TRefElement}(TextElement);function _createSuper$x(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$x(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var AElement=function(_TextElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(AElement,_TextElement);var _super=_createSuper$x(AElement);function AElement(document,node,captureTextNodes){var _context,_this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,AElement),(_this=_super.call(this,document,node,captureTextNodes)).type="a";var childNodes=node.childNodes,firstChild=childNodes[0],hasText=childNodes.length>0&&_babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context=_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(childNodes)).call(_context,(function(node){return 3===node.nodeType}));return _this.hasText=hasText,_this.text=hasText?_this.getTextFromNode(firstChild):"",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(AElement,[{key:"getText",value:function getText(){return this.text}},{key:"renderChildren",value:function renderChildren(ctx){if(this.hasText){_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(AElement.prototype),"renderChildren",this).call(this,ctx);var document=this.document,x=this.x,y=this.y,mouse=document.screen.mouse,fontSize=new Property(document,"fontSize",Font.parse(document.ctx.font).fontSize);mouse.isWorking()&&mouse.checkBoundingBox(this,new BoundingBox(x,y-fontSize.getPixels("y"),x+this.measureText(ctx),y))}else if(this.children.length>0){var g=new GElement(this.document,null);g.children=this.children,g.parent=this,g.render(ctx)}}},{key:"onClick",value:function onClick(){var window=this.document.window;window&&window.open(this.getHrefAttribute().getString())}},{key:"onMouseMove",value:function onMouseMove(){this.document.ctx.canvas.style.cursor="pointer"}}]),AElement}(TextElement);function _createForOfIteratorHelper$1(o,allowArrayLike){var it;if(void 0===_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46___default.a||null==_babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45___default()(o)){if(_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44___default()(o)||(it=function _unsupportedIterableToArray$1(o,minLen){var _context5;if(!o)return;if("string"==typeof o)return _arrayLikeToArray$1(o,minLen);var n=_babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47___default()(_context5=Object.prototype.toString.call(o)).call(_context5,8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray$1(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=_babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43___default()(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray$1(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(object,enumerableOnly){var keys=_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default()(object);if(_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default.a){var symbols=_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default()(object);enumerableOnly&&(symbols=_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default()(symbols).call(symbols,(function(sym){return _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var _context3,source=null!=arguments[i]?arguments[i]:{};if(i%2)_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context3=ownKeys(Object(source),!0)).call(_context3,(function(key){_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14___default()(target,key,source[key])}));else if(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default.a)_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default()(target,_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default()(source));else{var _context4;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4=ownKeys(Object(source))).call(_context4,(function(key){_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default()(target,key,_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(source,key))}))}}return target}function _createSuper$y(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$y(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var TextPathElement=function(_TextElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(TextPathElement,_TextElement);var _super=_createSuper$y(TextPathElement);function TextPathElement(document,node,captureTextNodes){var _this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,TextPathElement),(_this=_super.call(this,document,node,captureTextNodes)).type="textPath",_this.textWidth=0,_this.textHeight=0,_this.pathLength=-1,_this.glyphInfo=null,_this.letterSpacingCache=[],_this.measuresCache=new _babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48___default.a([["",0]]);var pathElement=_this.getHrefAttribute().getDefinition();return _this.text=_this.getTextFromNode(),_this.dataArray=_this.parsePathData(pathElement),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(TextPathElement,[{key:"getText",value:function getText(){return this.text}},{key:"path",value:function path(ctx){var dataArray=this.dataArray;ctx&&ctx.beginPath(),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(dataArray).call(dataArray,(function(_ref){var type=_ref.type,points=_ref.points;switch(type){case PathParser.LINE_TO:ctx&&ctx.lineTo(points[0],points[1]);break;case PathParser.MOVE_TO:ctx&&ctx.moveTo(points[0],points[1]);break;case PathParser.CURVE_TO:ctx&&ctx.bezierCurveTo(points[0],points[1],points[2],points[3],points[4],points[5]);break;case PathParser.QUAD_TO:ctx&&ctx.quadraticCurveTo(points[0],points[1],points[2],points[3]);break;case PathParser.ARC:var _points=_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default()(points,8),cx=_points[0],cy=_points[1],rx=_points[2],ry=_points[3],theta=_points[4],dTheta=_points[5],psi=_points[6],fs=_points[7],r=rx>ry?rx:ry,scaleX=rx>ry?1:rx/ry,scaleY=rx>ry?ry/rx:1;ctx&&(ctx.translate(cx,cy),ctx.rotate(psi),ctx.scale(scaleX,scaleY),ctx.arc(0,0,r,theta,theta+dTheta,Boolean(1-fs)),ctx.scale(1/scaleX,1/scaleY),ctx.rotate(-psi),ctx.translate(-cx,-cy));break;case PathParser.CLOSE_PATH:ctx&&ctx.closePath()}}))}},{key:"renderChildren",value:function renderChildren(ctx){this.setTextData(ctx),ctx.save();var textDecoration=this.parent.getStyle("text-decoration").getString(),fontSize=this.getFontSize(),glyphInfo=this.glyphInfo,fill=ctx.fillStyle;"underline"===textDecoration&&ctx.beginPath(),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(glyphInfo).call(glyphInfo,(function(glyph,i){var p0=glyph.p0,p1=glyph.p1,rotation=glyph.rotation,partialText=glyph.text;ctx.save(),ctx.translate(p0.x,p0.y),ctx.rotate(rotation),ctx.fillStyle&&ctx.fillText(partialText,0,0),ctx.strokeStyle&&ctx.strokeText(partialText,0,0),ctx.restore(),"underline"===textDecoration&&(0===i&&ctx.moveTo(p0.x,p0.y+fontSize/8),ctx.lineTo(p1.x,p1.y+fontSize/5))})),"underline"===textDecoration&&(ctx.lineWidth=fontSize/20,ctx.strokeStyle=fill,ctx.stroke(),ctx.closePath()),ctx.restore()}},{key:"getLetterSpacingAt",value:function getLetterSpacingAt(){var idx=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this.letterSpacingCache[idx]||0}},{key:"findSegmentToFitChar",value:function findSegmentToFitChar(ctx,anchor,textFullWidth,fullPathWidth,spacesNumber,inputOffset,dy,c,charI){var offset=inputOffset,glyphWidth=this.measureText(ctx,c);" "===c&&"justify"===anchor&&textFullWidth<fullPathWidth&&(glyphWidth+=(fullPathWidth-textFullWidth)/spacesNumber),charI>-1&&(offset+=this.getLetterSpacingAt(charI));var splineStep=this.textHeight/20,p0=this.getEquidistantPointOnPath(offset,splineStep,0),p1=this.getEquidistantPointOnPath(offset+glyphWidth,splineStep,0),segment={p0:p0,p1:p1},rotation=p0&&p1?Math.atan2(p1.y-p0.y,p1.x-p0.x):0;if(dy){var dyX=Math.cos(Math.PI/2+rotation)*dy,dyY=Math.cos(-rotation)*dy;segment.p0=_objectSpread(_objectSpread({},p0),{},{x:p0.x+dyX,y:p0.y+dyY}),segment.p1=_objectSpread(_objectSpread({},p1),{},{x:p1.x+dyX,y:p1.y+dyY})}return{offset:offset+=glyphWidth,segment:segment,rotation:rotation}}},{key:"measureText",value:function measureText(ctx,text){var measuresCache=this.measuresCache,targetText=text||this.getText();if(measuresCache.has(targetText))return measuresCache.get(targetText);var measure=this.measureTargetText(ctx,targetText);return measuresCache.set(targetText,measure),measure}},{key:"setTextData",value:function setTextData(ctx){var _context,_this2=this;if(!this.glyphInfo){var renderText=this.getText(),chars=renderText.split(""),spacesNumber=renderText.split(" ").length-1,dx=_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context=this.parent.getAttribute("dx").split()).call(_context,(function(_){return _.getPixels("x")})),dy=this.parent.getAttribute("dy").getPixels("y"),anchor=this.parent.getStyle("text-anchor").getString("start"),thisSpacing=this.getStyle("letter-spacing"),parentSpacing=this.parent.getStyle("letter-spacing"),letterSpacing=0;thisSpacing.hasValue()&&"inherit"!==thisSpacing.getValue()?thisSpacing.hasValue()&&"initial"!==thisSpacing.getValue()&&"unset"!==thisSpacing.getValue()&&(letterSpacing=thisSpacing.getPixels()):letterSpacing=parentSpacing.getPixels();var letterSpacingCache=[],textLen=renderText.length;this.letterSpacingCache=letterSpacingCache;for(var i=0;i<textLen;i++)letterSpacingCache.push(void 0!==dx[i]?dx[i]:letterSpacing);var dxSum=_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(letterSpacingCache).call(letterSpacingCache,(function(acc,cur,i){return 0===i?0:acc+cur||0}),0),textWidth=this.measureText(ctx),textFullWidth=Math.max(textWidth+dxSum,0);this.textWidth=textWidth,this.textHeight=this.getFontSize(),this.glyphInfo=[];var fullPathWidth=this.getPathLength(),startOffset=this.getStyle("startOffset").getNumber(0)*fullPathWidth,offset=0;"middle"!==anchor&&"center"!==anchor||(offset=-textFullWidth/2),"end"!==anchor&&"right"!==anchor||(offset=-textFullWidth),offset+=startOffset,_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(chars).call(chars,(function(char,i){var _this2$findSegmentToF=_this2.findSegmentToFitChar(ctx,anchor,textFullWidth,fullPathWidth,spacesNumber,offset,dy,char,i),nextOffset=_this2$findSegmentToF.offset,segment=_this2$findSegmentToF.segment,rotation=_this2$findSegmentToF.rotation;offset=nextOffset,segment.p0&&segment.p1&&_this2.glyphInfo.push({text:chars[i],p0:segment.p0,p1:segment.p1,rotation:rotation})}))}}},{key:"parsePathData",value:function parsePathData(path){if(this.pathLength=-1,!path)return[];var pathCommands=[],pathParser=path.pathParser;for(pathParser.reset();!pathParser.isEnd();){var current=pathParser.current,startX=current?current.x:0,startY=current?current.y:0,command=pathParser.next(),nextCommandType=command.type,points=[];switch(command.type){case PathParser.MOVE_TO:this.pathM(pathParser,points);break;case PathParser.LINE_TO:nextCommandType=this.pathL(pathParser,points);break;case PathParser.HORIZ_LINE_TO:nextCommandType=this.pathH(pathParser,points);break;case PathParser.VERT_LINE_TO:nextCommandType=this.pathV(pathParser,points);break;case PathParser.CURVE_TO:this.pathC(pathParser,points);break;case PathParser.SMOOTH_CURVE_TO:nextCommandType=this.pathS(pathParser,points);break;case PathParser.QUAD_TO:this.pathQ(pathParser,points);break;case PathParser.SMOOTH_QUAD_TO:nextCommandType=this.pathT(pathParser,points);break;case PathParser.ARC:points=this.pathA(pathParser);break;case PathParser.CLOSE_PATH:PathElement.pathZ(pathParser)}command.type!==PathParser.CLOSE_PATH?pathCommands.push({type:nextCommandType,points:points,start:{x:startX,y:startY},pathLength:this.calcLength(startX,startY,nextCommandType,points)}):pathCommands.push({type:PathParser.CLOSE_PATH,points:[],pathLength:0})}return pathCommands}},{key:"pathM",value:function pathM(pathParser,points){var _PathElement$pathM$po=PathElement.pathM(pathParser).point,x=_PathElement$pathM$po.x,y=_PathElement$pathM$po.y;points.push(x,y)}},{key:"pathL",value:function pathL(pathParser,points){var _PathElement$pathL$po=PathElement.pathL(pathParser).point,x=_PathElement$pathL$po.x,y=_PathElement$pathL$po.y;return points.push(x,y),PathParser.LINE_TO}},{key:"pathH",value:function pathH(pathParser,points){var _PathElement$pathH$po=PathElement.pathH(pathParser).point,x=_PathElement$pathH$po.x,y=_PathElement$pathH$po.y;return points.push(x,y),PathParser.LINE_TO}},{key:"pathV",value:function pathV(pathParser,points){var _PathElement$pathV$po=PathElement.pathV(pathParser).point,x=_PathElement$pathV$po.x,y=_PathElement$pathV$po.y;return points.push(x,y),PathParser.LINE_TO}},{key:"pathC",value:function pathC(pathParser,points){var _PathElement$pathC=PathElement.pathC(pathParser),point=_PathElement$pathC.point,controlPoint=_PathElement$pathC.controlPoint,currentPoint=_PathElement$pathC.currentPoint;points.push(point.x,point.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y)}},{key:"pathS",value:function pathS(pathParser,points){var _PathElement$pathS=PathElement.pathS(pathParser),point=_PathElement$pathS.point,controlPoint=_PathElement$pathS.controlPoint,currentPoint=_PathElement$pathS.currentPoint;return points.push(point.x,point.y,controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y),PathParser.CURVE_TO}},{key:"pathQ",value:function pathQ(pathParser,points){var _PathElement$pathQ=PathElement.pathQ(pathParser),controlPoint=_PathElement$pathQ.controlPoint,currentPoint=_PathElement$pathQ.currentPoint;points.push(controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y)}},{key:"pathT",value:function pathT(pathParser,points){var _PathElement$pathT=PathElement.pathT(pathParser),controlPoint=_PathElement$pathT.controlPoint,currentPoint=_PathElement$pathT.currentPoint;return points.push(controlPoint.x,controlPoint.y,currentPoint.x,currentPoint.y),PathParser.QUAD_TO}},{key:"pathA",value:function pathA(pathParser){var _PathElement$pathA=PathElement.pathA(pathParser),rX=_PathElement$pathA.rX,rY=_PathElement$pathA.rY,sweepFlag=_PathElement$pathA.sweepFlag,xAxisRotation=_PathElement$pathA.xAxisRotation,centp=_PathElement$pathA.centp,a1=_PathElement$pathA.a1,ad=_PathElement$pathA.ad;return 0===sweepFlag&&ad>0&&(ad-=2*Math.PI),1===sweepFlag&&ad<0&&(ad+=2*Math.PI),[centp.x,centp.y,rX,rY,a1,ad,xAxisRotation,sweepFlag]}},{key:"calcLength",value:function calcLength(x,y,commandType,points){var len=0,p1=null,p2=null,t=0;switch(commandType){case PathParser.LINE_TO:return this.getLineLength(x,y,points[0],points[1]);case PathParser.CURVE_TO:for(len=0,p1=this.getPointOnCubicBezier(0,x,y,points[0],points[1],points[2],points[3],points[4],points[5]),t=.01;t<=1;t+=.01)p2=this.getPointOnCubicBezier(t,x,y,points[0],points[1],points[2],points[3],points[4],points[5]),len+=this.getLineLength(p1.x,p1.y,p2.x,p2.y),p1=p2;return len;case PathParser.QUAD_TO:for(len=0,p1=this.getPointOnQuadraticBezier(0,x,y,points[0],points[1],points[2],points[3]),t=.01;t<=1;t+=.01)p2=this.getPointOnQuadraticBezier(t,x,y,points[0],points[1],points[2],points[3]),len+=this.getLineLength(p1.x,p1.y,p2.x,p2.y),p1=p2;return len;case PathParser.ARC:len=0;var start=points[4],dTheta=points[5],end=points[4]+dTheta,inc=Math.PI/180;if(Math.abs(start-end)<inc&&(inc=Math.abs(start-end)),p1=this.getPointOnEllipticalArc(points[0],points[1],points[2],points[3],start,0),dTheta<0)for(t=start-inc;t>end;t-=inc)p2=this.getPointOnEllipticalArc(points[0],points[1],points[2],points[3],t,0),len+=this.getLineLength(p1.x,p1.y,p2.x,p2.y),p1=p2;else for(t=start+inc;t<end;t+=inc)p2=this.getPointOnEllipticalArc(points[0],points[1],points[2],points[3],t,0),len+=this.getLineLength(p1.x,p1.y,p2.x,p2.y),p1=p2;return p2=this.getPointOnEllipticalArc(points[0],points[1],points[2],points[3],end,0),len+=this.getLineLength(p1.x,p1.y,p2.x,p2.y)}return 0}},{key:"getPointOnLine",value:function getPointOnLine(dist,P1x,P1y,P2x,P2y){var fromX=arguments.length>5&&void 0!==arguments[5]?arguments[5]:P1x,fromY=arguments.length>6&&void 0!==arguments[6]?arguments[6]:P1y,m=(P2y-P1y)/(P2x-P1x+PSEUDO_ZERO),run=Math.sqrt(dist*dist/(1+m*m));P2x<P1x&&(run*=-1);var rise=m*run,pt=null;if(P2x===P1x)pt={x:fromX,y:fromY+rise};else if((fromY-P1y)/(fromX-P1x+PSEUDO_ZERO)===m)pt={x:fromX+run,y:fromY+rise};else{var ix=0,iy=0,len=this.getLineLength(P1x,P1y,P2x,P2y);if(len<PSEUDO_ZERO)return null;var u=(fromX-P1x)*(P2x-P1x)+(fromY-P1y)*(P2y-P1y);ix=P1x+(u/=len*len)*(P2x-P1x),iy=P1y+u*(P2y-P1y);var pRise=this.getLineLength(fromX,fromY,ix,iy),pRun=Math.sqrt(dist*dist-pRise*pRise);run=Math.sqrt(pRun*pRun/(1+m*m)),P2x<P1x&&(run*=-1),pt={x:ix+run,y:iy+(rise=m*run)}}return pt}},{key:"getPointOnPath",value:function getPointOnPath(distance){var fullLen=this.getPathLength(),cumulativePathLength=0,p=null;if(distance<-5e-5||distance-5e-5>fullLen)return null;var _step,_iterator=_createForOfIteratorHelper$1(this.dataArray);try{for(_iterator.s();!(_step=_iterator.n()).done;){var command=_step.value;if(!command||!(command.pathLength<5e-5||cumulativePathLength+command.pathLength+5e-5<distance)){var delta=distance-cumulativePathLength,currentT=0;switch(command.type){case PathParser.LINE_TO:p=this.getPointOnLine(delta,command.start.x,command.start.y,command.points[0],command.points[1],command.start.x,command.start.y);break;case PathParser.ARC:var start=command.points[4],dTheta=command.points[5],end=command.points[4]+dTheta;if(currentT=start+delta/command.pathLength*dTheta,dTheta<0&&currentT<end||dTheta>=0&&currentT>end)break;p=this.getPointOnEllipticalArc(command.points[0],command.points[1],command.points[2],command.points[3],currentT,command.points[6]);break;case PathParser.CURVE_TO:(currentT=delta/command.pathLength)>1&&(currentT=1),p=this.getPointOnCubicBezier(currentT,command.start.x,command.start.y,command.points[0],command.points[1],command.points[2],command.points[3],command.points[4],command.points[5]);break;case PathParser.QUAD_TO:(currentT=delta/command.pathLength)>1&&(currentT=1),p=this.getPointOnQuadraticBezier(currentT,command.start.x,command.start.y,command.points[0],command.points[1],command.points[2],command.points[3])}if(p)return p;break}cumulativePathLength+=command.pathLength}}catch(err){_iterator.e(err)}finally{_iterator.f()}return null}},{key:"getLineLength",value:function getLineLength(x1,y1,x2,y2){return Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1))}},{key:"getPathLength",value:function getPathLength(){var _context2;-1===this.pathLength&&(this.pathLength=_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(_context2=this.dataArray).call(_context2,(function(length,command){return command.pathLength>0?length+command.pathLength:length}),0));return this.pathLength}},{key:"getPointOnCubicBezier",value:function getPointOnCubicBezier(pct,P1x,P1y,P2x,P2y,P3x,P3y,P4x,P4y){return{x:P4x*CB1(pct)+P3x*CB2(pct)+P2x*CB3(pct)+P1x*CB4(pct),y:P4y*CB1(pct)+P3y*CB2(pct)+P2y*CB3(pct)+P1y*CB4(pct)}}},{key:"getPointOnQuadraticBezier",value:function getPointOnQuadraticBezier(pct,P1x,P1y,P2x,P2y,P3x,P3y){return{x:P3x*QB1(pct)+P2x*QB2(pct)+P1x*QB3(pct),y:P3y*QB1(pct)+P2y*QB2(pct)+P1y*QB3(pct)}}},{key:"getPointOnEllipticalArc",value:function getPointOnEllipticalArc(cx,cy,rx,ry,theta,psi){var cosPsi=Math.cos(psi),sinPsi=Math.sin(psi),pt_x=rx*Math.cos(theta),pt_y=ry*Math.sin(theta);return{x:cx+(pt_x*cosPsi-pt_y*sinPsi),y:cy+(pt_x*sinPsi+pt_y*cosPsi)}}},{key:"buildEquidistantCache",value:function buildEquidistantCache(inputStep,inputPrecision){var fullLen=this.getPathLength(),precision=inputPrecision||.25,step=inputStep||fullLen/100;if(!this.equidistantCache||this.equidistantCache.step!==step||this.equidistantCache.precision!==precision){this.equidistantCache={step:step,precision:precision,points:[]};for(var s=0,l=0;l<=fullLen;l+=precision){var p0=this.getPointOnPath(l),p1=this.getPointOnPath(l+precision);p0&&p1&&((s+=this.getLineLength(p0.x,p0.y,p1.x,p1.y))>=step&&(this.equidistantCache.points.push({x:p0.x,y:p0.y,distance:l}),s-=step))}}}},{key:"getEquidistantPointOnPath",value:function getEquidistantPointOnPath(targetDistance,step,precision){if(this.buildEquidistantCache(step,precision),targetDistance<0||targetDistance-this.getPathLength()>5e-5)return null;var idx=Math.round(targetDistance/this.getPathLength()*(this.equidistantCache.points.length-1));return this.equidistantCache.points[idx]||null}}]),TextPathElement}(TextElement);function _createSuper$z(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$z(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var ImageElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(ImageElement,_RenderedElement);var _loadSvg,_loadImage,_super=_createSuper$z(ImageElement);function ImageElement(document,node,captureTextNodes){var _this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,ImageElement),(_this=_super.call(this,document,node,captureTextNodes)).type="image",_this.loaded=!1;var href=_this.getHrefAttribute().getString();if(!href)return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(_this);var isSvg=/\.svg$/.test(href);return document.images.push(_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40___default()(_this)),isSvg?_this.loadSvg(href):_this.loadImage(href),_this.isSvg=isSvg,_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(ImageElement,[{key:"loadImage",value:(_loadImage=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee(href){var image;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,_context.next=3,this.document.createImage(href);case 3:image=_context.sent,this.image=image,_context.next=10;break;case 7:_context.prev=7,_context.t0=_context.catch(0),console.error('Error while loading image "'.concat(href,'":'),_context.t0);case 10:this.loaded=!0;case 11:case"end":return _context.stop()}}),_callee,this,[[0,7]])}))),function loadImage(_x){return _loadImage.apply(this,arguments)})},{key:"loadSvg",value:(_loadSvg=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee2(href){var response,svg;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return _context2.prev=0,_context2.next=3,this.document.fetch(href);case 3:return response=_context2.sent,_context2.next=6,response.text();case 6:svg=_context2.sent,this.image=svg,_context2.next=13;break;case 10:_context2.prev=10,_context2.t0=_context2.catch(0),console.error('Error while loading image "'.concat(href,'":'),_context2.t0);case 13:this.loaded=!0;case 14:case"end":return _context2.stop()}}),_callee2,this,[[0,10]])}))),function loadSvg(_x2){return _loadSvg.apply(this,arguments)})},{key:"renderChildren",value:function renderChildren(ctx){var document=this.document,image=this.image,loaded=this.loaded,x=this.getAttribute("x").getPixels("x"),y=this.getAttribute("y").getPixels("y"),width=this.getStyle("width").getPixels("x"),height=this.getStyle("height").getPixels("y");if(loaded&&image&&width&&height){if(ctx.save(),this.isSvg)document.canvg.forkString(ctx,this.image,{ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0,ignoreClear:!0,offsetX:x,offsetY:y,scaleWidth:width,scaleHeight:height}).render();else{var _image=this.image;ctx.translate(x,y),document.setViewBox({ctx:ctx,aspectRatio:this.getAttribute("preserveAspectRatio").getString(),width:width,desiredWidth:_image.width,height:height,desiredHeight:_image.height}),this.loaded&&(void 0===_image.complete||_image.complete)&&ctx.drawImage(_image,0,0)}ctx.restore()}}},{key:"getBoundingBox",value:function getBoundingBox(){var x=this.getAttribute("x").getPixels("x"),y=this.getAttribute("y").getPixels("y"),width=this.getStyle("width").getPixels("x"),height=this.getStyle("height").getPixels("y");return new BoundingBox(x,y,x+width,y+height)}}]),ImageElement}(RenderedElement);function _createSuper$A(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$A(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var SymbolElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(SymbolElement,_RenderedElement);var _super=_createSuper$A(SymbolElement);function SymbolElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,SymbolElement),(_this=_super.apply(this,arguments)).type="symbol",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(SymbolElement,[{key:"render",value:function render(_){}}]),SymbolElement}(RenderedElement),SVGFontLoader=function(){function SVGFontLoader(document){_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,SVGFontLoader),this.document=document,this.loaded=!1,document.fonts.push(this)}var _load;return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(SVGFontLoader,[{key:"load",value:(_load=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee(fontFamily,url){var _context,document,svgDocument,fonts;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return _context2.prev=0,document=this.document,_context2.next=4,document.canvg.parser.load(url);case 4:svgDocument=_context2.sent,fonts=svgDocument.getElementsByTagName("font"),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(fonts)).call(_context,(function(fontNode){var font=document.createElement(fontNode);document.definitions[fontFamily]=font})),_context2.next=12;break;case 9:_context2.prev=9,_context2.t0=_context2.catch(0),console.error('Error while loading font "'.concat(url,'":'),_context2.t0);case 12:this.loaded=!0;case 13:case"end":return _context2.stop()}}),_callee,this,[[0,9]])}))),function load(_x,_x2){return _load.apply(this,arguments)})}]),SVGFontLoader}();function _createSuper$B(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$B(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var StyleElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(StyleElement,_Element);var _super=_createSuper$B(StyleElement);function StyleElement(document,node,captureTextNodes){var _context,_this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,StyleElement),(_this=_super.call(this,document,node,captureTextNodes)).type="style";var cssDefs=compressSpaces(_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context=_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(node.childNodes)).call(_context,(function(_){return _.data})).join("").replace(/(\/\*([^*]|[\r\n]|(\*+([^*\/]|[\r\n])))*\*+\/)|(^[\s]*\/\/.*)/gm,"").replace(/@import.*;/g,"")).split("}");return _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(cssDefs).call(cssDefs,(function(_){var def=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_);if(def){var cssParts=def.split("{"),cssClasses=cssParts[0].split(","),cssProps=cssParts[1].split(";");_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(cssClasses).call(cssClasses,(function(_){var cssClass=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_);if(cssClass){var props=document.styles[cssClass]||{};if(_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(cssProps).call(cssProps,(function(cssProp){var _context2,_context3,prop=_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default()(cssProp).call(cssProp,":"),name=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context2=cssProp.substr(0,prop)).call(_context2),value=_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context3=cssProp.substr(prop+1,cssProp.length-prop)).call(_context3);name&&value&&(props[name]=new Property(document,name,value))})),document.styles[cssClass]=props,document.stylesSpecificity[cssClass]=getSelectorSpecificity(cssClass),"@font-face"===cssClass){var fontFamily=props["font-family"].getString().replace(/"|'/g,""),srcs=props.src.getString().split(",");_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(srcs).call(srcs,(function(src){if(_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default()(src).call(src,'format("svg")')>0){var url=parseExternalUrl(src);url&&new SVGFontLoader(document).load(fontFamily,url)}}))}}}))}})),_this}return StyleElement}(Element);function _createSuper$C(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$C(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}StyleElement.parseExternalUrl=parseExternalUrl;var UseElement=function(_RenderedElement){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(UseElement,_RenderedElement);var _super=_createSuper$C(UseElement);function UseElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,UseElement),(_this=_super.apply(this,arguments)).type="use",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(UseElement,[{key:"setContext",value:function setContext(ctx){_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36___default()(_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(UseElement.prototype),"setContext",this).call(this,ctx);var xAttr=this.getAttribute("x"),yAttr=this.getAttribute("y");xAttr.hasValue()&&ctx.translate(xAttr.getPixels("x"),0),yAttr.hasValue()&&ctx.translate(0,yAttr.getPixels("y"))}},{key:"path",value:function path(ctx){var element=this.element;element&&element.path(ctx)}},{key:"renderChildren",value:function renderChildren(ctx){var document=this.document,element=this.element;if(element){var tempSvg=element;if("symbol"===element.type&&((tempSvg=new SVGElement(document,null)).attributes.viewBox=new Property(document,"viewBox",element.getAttribute("viewBox").getString()),tempSvg.attributes.preserveAspectRatio=new Property(document,"preserveAspectRatio",element.getAttribute("preserveAspectRatio").getString()),tempSvg.attributes.overflow=new Property(document,"overflow",element.getAttribute("overflow").getString()),tempSvg.children=element.children,element.styles.opacity=new Property(document,"opacity",this.calculateOpacity())),"svg"===tempSvg.type){var widthStyle=this.getStyle("width",!1,!0),heightStyle=this.getStyle("height",!1,!0);widthStyle.hasValue()&&(tempSvg.attributes.width=new Property(document,"width",widthStyle.getString())),heightStyle.hasValue()&&(tempSvg.attributes.height=new Property(document,"height",heightStyle.getString()))}var oldParent=tempSvg.parent;tempSvg.parent=this,tempSvg.render(ctx),tempSvg.parent=oldParent}}},{key:"getBoundingBox",value:function getBoundingBox(ctx){var element=this.element;return element?element.getBoundingBox(ctx):null}},{key:"elementTransform",value:function elementTransform(){var document=this.document,element=this.element;return Transform.fromElement(document,element)}},{key:"element",get:function get(){return this._element||(this._element=this.getHrefAttribute().getDefinition()),this._element}}]),UseElement}(RenderedElement);function _createSuper$D(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$D(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}function imGet(img,x,y,width,_,rgba){return img[y*width*4+4*x+rgba]}function imSet(img,x,y,width,_,rgba,val){img[y*width*4+4*x+rgba]=val}function m(matrix,i,v){return matrix[i]*v}function c(a,m1,m2,m3){return m1+Math.cos(a)*m2+Math.sin(a)*m3}var FeColorMatrixElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FeColorMatrixElement,_Element);var _super=_createSuper$D(FeColorMatrixElement);function FeColorMatrixElement(document,node,captureTextNodes){var _this;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FeColorMatrixElement),(_this=_super.call(this,document,node,captureTextNodes)).type="feColorMatrix";var matrix=toNumbers(_this.getAttribute("values").getString());switch(_this.getAttribute("type").getString("matrix")){case"saturate":var s=matrix[0];matrix=[.213+.787*s,.715-.715*s,.072-.072*s,0,0,.213-.213*s,.715+.285*s,.072-.072*s,0,0,.213-.213*s,.715-.715*s,.072+.928*s,0,0,0,0,0,1,0,0,0,0,0,1];break;case"hueRotate":var a=matrix[0]*Math.PI/180;matrix=[c(a,.213,.787,-.213),c(a,.715,-.715,-.715),c(a,.072,-.072,.928),0,0,c(a,.213,-.213,.143),c(a,.715,.285,.14),c(a,.072,-.072,-.283),0,0,c(a,.213,-.213,-.787),c(a,.715,-.715,.715),c(a,.072,.928,.072),0,0,0,0,0,1,0,0,0,0,0,1];break;case"luminanceToAlpha":matrix=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.2125,.7154,.0721,0,0,0,0,0,0,1]}return _this.matrix=matrix,_this.includeOpacity=_this.getAttribute("includeOpacity").hasValue(),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FeColorMatrixElement,[{key:"apply",value:function apply(ctx,_,__,width,height){for(var includeOpacity=this.includeOpacity,matrix=this.matrix,srcData=ctx.getImageData(0,0,width,height),y=0;y<height;y++)for(var x=0;x<width;x++){var r=imGet(srcData.data,x,y,width,0,0),g=imGet(srcData.data,x,y,width,0,1),b=imGet(srcData.data,x,y,width,0,2),a=imGet(srcData.data,x,y,width,0,3),nr=m(matrix,0,r)+m(matrix,1,g)+m(matrix,2,b)+m(matrix,3,a)+m(matrix,4,1),ng=m(matrix,5,r)+m(matrix,6,g)+m(matrix,7,b)+m(matrix,8,a)+m(matrix,9,1),nb=m(matrix,10,r)+m(matrix,11,g)+m(matrix,12,b)+m(matrix,13,a)+m(matrix,14,1),na=m(matrix,15,r)+m(matrix,16,g)+m(matrix,17,b)+m(matrix,18,a)+m(matrix,19,1);includeOpacity&&(nr=ng=nb=0,na*=a/255),imSet(srcData.data,x,y,width,0,0,nr),imSet(srcData.data,x,y,width,0,1,ng),imSet(srcData.data,x,y,width,0,2,nb),imSet(srcData.data,x,y,width,0,3,na)}ctx.clearRect(0,0,width,height),ctx.putImageData(srcData,0,0)}}]),FeColorMatrixElement}(Element);function _createSuper$E(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$E(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var MaskElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(MaskElement,_Element);var _super=_createSuper$E(MaskElement);function MaskElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,MaskElement),(_this=_super.apply(this,arguments)).type="mask",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(MaskElement,[{key:"apply",value:function apply(ctx,element){var document=this.document,x=this.getAttribute("x").getPixels("x"),y=this.getAttribute("y").getPixels("y"),width=this.getStyle("width").getPixels("x"),height=this.getStyle("height").getPixels("y");if(!width&&!height){var _context,boundingBox=new BoundingBox;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=this.children).call(_context,(function(child){boundingBox.addBoundingBox(child.getBoundingBox(ctx))})),x=Math.floor(boundingBox.x1),y=Math.floor(boundingBox.y1),width=Math.floor(boundingBox.width),height=Math.floor(boundingBox.height)}var ignoredStyles=this.removeStyles(element,MaskElement.ignoreStyles),maskCanvas=document.createCanvas(x+width,y+height),maskCtx=maskCanvas.getContext("2d");document.screen.setDefaults(maskCtx),this.renderChildren(maskCtx),new FeColorMatrixElement(document,{nodeType:1,childNodes:[],attributes:[{nodeName:"type",value:"luminanceToAlpha"},{nodeName:"includeOpacity",value:"true"}]}).apply(maskCtx,0,0,x+width,y+height);var tmpCanvas=document.createCanvas(x+width,y+height),tmpCtx=tmpCanvas.getContext("2d");document.screen.setDefaults(tmpCtx),element.render(tmpCtx),tmpCtx.globalCompositeOperation="destination-in",tmpCtx.fillStyle=maskCtx.createPattern(maskCanvas,"no-repeat"),tmpCtx.fillRect(0,0,x+width,y+height),ctx.fillStyle=tmpCtx.createPattern(tmpCanvas,"no-repeat"),ctx.fillRect(0,0,x+width,y+height),this.restoreStyles(element,ignoredStyles)}},{key:"render",value:function render(_){}}]),MaskElement}(Element);function _createSuper$F(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$F(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}MaskElement.ignoreStyles=["mask","transform","clip-path"];var noop=function noop(){},ClipPathElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(ClipPathElement,_Element);var _super=_createSuper$F(ClipPathElement);function ClipPathElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,ClipPathElement),(_this=_super.apply(this,arguments)).type="clipPath",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(ClipPathElement,[{key:"apply",value:function apply(ctx){var _context,document=this.document,contextProto=_babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50___default()(ctx),beginPath=ctx.beginPath,closePath=ctx.closePath;contextProto&&(contextProto.beginPath=noop,contextProto.closePath=noop),_babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49___default()(beginPath,ctx,[]),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context=this.children).call(_context,(function(child){if(void 0!==child.path){var transform=void 0!==child.elementTransform?child.elementTransform():null;transform||(transform=Transform.fromElement(document,child)),transform&&transform.apply(ctx),child.path(ctx),contextProto&&(contextProto.closePath=closePath),transform&&transform.unapply(ctx)}})),_babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49___default()(closePath,ctx,[]),ctx.clip(),contextProto&&(contextProto.beginPath=beginPath,contextProto.closePath=closePath)}},{key:"render",value:function render(_){}}]),ClipPathElement}(Element);function _createSuper$G(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$G(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var FilterElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FilterElement,_Element);var _super=_createSuper$G(FilterElement);function FilterElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FilterElement),(_this=_super.apply(this,arguments)).type="filter",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FilterElement,[{key:"apply",value:function apply(ctx,element){var document=this.document,children=this.children,boundingBox=element.getBoundingBox(ctx);if(boundingBox){var px=0,py=0;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(children).call(children,(function(child){var efd=child.extraFilterDistance||0;px=Math.max(px,efd),py=Math.max(py,efd)}));var width=Math.floor(boundingBox.width),height=Math.floor(boundingBox.height),tmpCanvasWidth=width+2*px,tmpCanvasHeight=height+2*py;if(!(tmpCanvasWidth<1||tmpCanvasHeight<1)){var x=Math.floor(boundingBox.x),y=Math.floor(boundingBox.y),ignoredStyles=this.removeStyles(element,FilterElement.ignoreStyles),tmpCanvas=document.createCanvas(tmpCanvasWidth,tmpCanvasHeight),tmpCtx=tmpCanvas.getContext("2d");document.screen.setDefaults(tmpCtx),tmpCtx.translate(-x+px,-y+py),element.render(tmpCtx),_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(children).call(children,(function(child){"function"==typeof child.apply&&child.apply(tmpCtx,0,0,tmpCanvasWidth,tmpCanvasHeight)})),ctx.drawImage(tmpCanvas,0,0,tmpCanvasWidth,tmpCanvasHeight,x-px,y-py,tmpCanvasWidth,tmpCanvasHeight),this.restoreStyles(element,ignoredStyles)}}}},{key:"render",value:function render(_){}}]),FilterElement}(Element);function _createSuper$H(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$H(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}FilterElement.ignoreStyles=["filter","transform","clip-path"];var FeDropShadowElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FeDropShadowElement,_Element);var _super=_createSuper$H(FeDropShadowElement);function FeDropShadowElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FeDropShadowElement),(_this=_super.call(this,document,node,captureTextNodes)).type="feDropShadow",_this.addStylesFromStyleDefinition(),_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FeDropShadowElement,[{key:"apply",value:function apply(_,__,___,____,_____){}}]),FeDropShadowElement}(Element);function _createSuper$I(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$I(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var FeMorphologyElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FeMorphologyElement,_Element);var _super=_createSuper$I(FeMorphologyElement);function FeMorphologyElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FeMorphologyElement),(_this=_super.apply(this,arguments)).type="feMorphology",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FeMorphologyElement,[{key:"apply",value:function apply(_,__,___,____,_____){}}]),FeMorphologyElement}(Element);function _createSuper$J(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$J(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var FeCompositeElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FeCompositeElement,_Element);var _super=_createSuper$J(FeCompositeElement);function FeCompositeElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FeCompositeElement),(_this=_super.apply(this,arguments)).type="feComposite",_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FeCompositeElement,[{key:"apply",value:function apply(_,__,___,____,_____){}}]),FeCompositeElement}(Element);function _createSuper$K(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$K(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var FeGaussianBlurElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(FeGaussianBlurElement,_Element);var _super=_createSuper$K(FeGaussianBlurElement);function FeGaussianBlurElement(document,node,captureTextNodes){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,FeGaussianBlurElement),(_this=_super.call(this,document,node,captureTextNodes)).type="feGaussianBlur",_this.blurRadius=Math.floor(_this.getAttribute("stdDeviation").getNumber()),_this.extraFilterDistance=_this.blurRadius,_this}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(FeGaussianBlurElement,[{key:"apply",value:function apply(ctx,x,y,width,height){var document=this.document,blurRadius=this.blurRadius,body=document.window?document.window.document.body:null,canvas=ctx.canvas;canvas.id=document.getUniqueId(),body&&(canvas.style.display="none",body.appendChild(canvas)),Object(stackblur_canvas__WEBPACK_IMPORTED_MODULE_51__.a)(canvas,x,y,width,height,blurRadius),body&&body.removeChild(canvas)}}]),FeGaussianBlurElement}(Element);function _createSuper$L(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$L(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var TitleElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(TitleElement,_Element);var _super=_createSuper$L(TitleElement);function TitleElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,TitleElement),(_this=_super.apply(this,arguments)).type="title",_this}return TitleElement}(Element);function _createSuper$M(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct$M(){if("undefined"==typeof Reflect||!_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a)return!1;if(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default.a.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(Derived);if(hasNativeReflectConstruct){var NewTarget=_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29___default()(this).constructor;result=_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28___default()(this,result)}}var DescElement=function(_Element){_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27___default()(DescElement,_Element);var _super=_createSuper$M(DescElement);function DescElement(){var _this;return _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,DescElement),(_this=_super.apply(this,arguments)).type="desc",_this}return DescElement}(Element),elementTypes={svg:SVGElement,rect:RectElement,circle:CircleElement,ellipse:EllipseElement,line:LineElement,polyline:PolylineElement,polygon:PolygonElement,path:PathElement,pattern:PatternElement,marker:MarkerElement,defs:DefsElement,linearGradient:LinearGradientElement,radialGradient:RadialGradientElement,stop:StopElement,animate:AnimateElement,animateColor:AnimateColorElement,animateTransform:AnimateTransformElement,font:FontElement,"font-face":FontFaceElement,"missing-glyph":MissingGlyphElement,glyph:GlyphElement,text:TextElement,tspan:TSpanElement,tref:TRefElement,a:AElement,textPath:TextPathElement,image:ImageElement,g:GElement,symbol:SymbolElement,style:StyleElement,use:UseElement,mask:MaskElement,clipPath:ClipPathElement,filter:FilterElement,feDropShadow:FeDropShadowElement,feMorphology:FeMorphologyElement,feComposite:FeCompositeElement,feColorMatrix:FeColorMatrixElement,feGaussianBlur:FeGaussianBlurElement,title:TitleElement,desc:DescElement};function ownKeys$1(object,enumerableOnly){var keys=_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default()(object);if(_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default.a){var symbols=_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default()(object);enumerableOnly&&(symbols=_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default()(symbols).call(symbols,(function(sym){return _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _createImage(){return(_createImage=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee(src){var anonymousCrossOrigin,image,_args=arguments;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee$(_context7){for(;;)switch(_context7.prev=_context7.next){case 0:return anonymousCrossOrigin=_args.length>1&&void 0!==_args[1]&&_args[1],image=document.createElement("img"),anonymousCrossOrigin&&(image.crossOrigin="Anonymous"),_context7.abrupt("return",new _babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default.a((function(resolve,reject){image.onload=function(){resolve(image)},image.onerror=function(){reject()},image.src=src})));case 4:case"end":return _context7.stop()}}),_callee)})))).apply(this,arguments)}var Document=function(){function Document(canvg){var _context,_context2,_ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$rootEmSize=_ref.rootEmSize,rootEmSize=void 0===_ref$rootEmSize?12:_ref$rootEmSize,_ref$emSize=_ref.emSize,emSize=void 0===_ref$emSize?12:_ref$emSize,_ref$createCanvas=_ref.createCanvas,createCanvas=void 0===_ref$createCanvas?Document.createCanvas:_ref$createCanvas,_ref$createImage=_ref.createImage,createImage=void 0===_ref$createImage?Document.createImage:_ref$createImage,anonymousCrossOrigin=_ref.anonymousCrossOrigin;_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Document),this.canvg=canvg,this.definitions={},this.styles={},this.stylesSpecificity={},this.images=[],this.fonts=[],this.emSizeStack=[],this.uniqueId=0,this.screen=canvg.screen,this.rootEmSize=rootEmSize,this.emSize=emSize,this.createCanvas=createCanvas,this.createImage=this.bindCreateImage(createImage,anonymousCrossOrigin),this.screen.wait(_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context=this.isImagesLoaded).call(_context,this)),this.screen.wait(_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context2=this.isFontsLoaded).call(_context2,this))}return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Document,[{key:"bindCreateImage",value:function bindCreateImage(createImage,anonymousCrossOrigin){return"boolean"==typeof anonymousCrossOrigin?function(source,forceAnonymousCrossOrigin){return createImage(source,"boolean"==typeof forceAnonymousCrossOrigin?forceAnonymousCrossOrigin:anonymousCrossOrigin)}:createImage}},{key:"popEmSize",value:function popEmSize(){this.emSizeStack.pop()}},{key:"getUniqueId",value:function getUniqueId(){return"canvg".concat(++this.uniqueId)}},{key:"isImagesLoaded",value:function isImagesLoaded(){var _context3;return _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context3=this.images).call(_context3,(function(_){return _.loaded}))}},{key:"isFontsLoaded",value:function isFontsLoaded(){var _context4;return _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context4=this.fonts).call(_context4,(function(_){return _.loaded}))}},{key:"createDocumentElement",value:function createDocumentElement(document){var documentElement=this.createElement(document.documentElement);return documentElement.root=!0,documentElement.addStylesFromStyleDefinition(),this.documentElement=documentElement,documentElement}},{key:"createElement",value:function createElement(node){var elementType=node.nodeName.replace(/^[^:]+:/,""),ElementType=Document.elementTypes[elementType];return void 0!==ElementType?new ElementType(this,node):new UnknownElement(this,node)}},{key:"createTextNode",value:function createTextNode(node){return new TextNode(this,node)}},{key:"setViewBox",value:function setViewBox(config){this.screen.setViewBox(function _objectSpread$1(target){for(var i=1;i<arguments.length;i++){var _context5,source=null!=arguments[i]?arguments[i]:{};if(i%2)_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context5=ownKeys$1(Object(source),!0)).call(_context5,(function(key){_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14___default()(target,key,source[key])}));else if(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default.a)_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default()(target,_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default()(source));else{var _context6;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context6=ownKeys$1(Object(source))).call(_context6,(function(key){_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default()(target,key,_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(source,key))}))}}return target}({document:this},config))}},{key:"window",get:function get(){return this.screen.window}},{key:"fetch",get:function get(){return this.screen.fetch}},{key:"ctx",get:function get(){return this.screen.ctx}},{key:"emSize",get:function get(){var emSizeStack=this.emSizeStack;return emSizeStack[emSizeStack.length-1]},set:function set(value){this.emSizeStack.push(value)}}]),Document}();function ownKeys$2(object,enumerableOnly){var keys=_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default()(object);if(_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default.a){var symbols=_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default()(object);enumerableOnly&&(symbols=_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default()(symbols).call(symbols,(function(sym){return _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread$2(target){for(var i=1;i<arguments.length;i++){var _context3,source=null!=arguments[i]?arguments[i]:{};if(i%2)_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context3=ownKeys$2(Object(source),!0)).call(_context3,(function(key){_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14___default()(target,key,source[key])}));else if(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default.a)_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default()(target,_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default()(source));else{var _context4;_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4=ownKeys$2(Object(source))).call(_context4,(function(key){_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default()(target,key,_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(source,key))}))}}return target}Document.createCanvas=function createCanvas(width,height){var canvas=document.createElement("canvas");return canvas.width=width,canvas.height=height,canvas},Document.createImage=function createImage(_x){return _createImage.apply(this,arguments)},Document.elementTypes=elementTypes;var Canvg=function(){function Canvg(ctx,svg){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15___default()(this,Canvg),this.parser=new Parser(options),this.screen=new Screen(ctx,options),this.options=options;var document=new Document(this,options),documentElement=document.createDocumentElement(svg);this.document=document,this.documentElement=documentElement}var _from,_render;return _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16___default()(Canvg,[{key:"fork",value:function fork(ctx,svg){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Canvg.from(ctx,svg,_objectSpread$2(_objectSpread$2({},this.options),options))}},{key:"forkString",value:function forkString(ctx,svg){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Canvg.fromString(ctx,svg,_objectSpread$2(_objectSpread$2({},this.options),options))}},{key:"ready",value:function ready(){return this.screen.ready()}},{key:"isReady",value:function isReady(){return this.screen.isReady()}},{key:"render",value:(_render=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee(){var options,_args=arguments;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return options=_args.length>0&&void 0!==_args[0]?_args[0]:{},this.start(_objectSpread$2({enableRedraw:!0,ignoreAnimation:!0,ignoreMouse:!0},options)),_context.next=4,this.ready();case 4:this.stop();case 5:case"end":return _context.stop()}}),_callee,this)}))),function render(){return _render.apply(this,arguments)})},{key:"start",value:function start(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},documentElement=this.documentElement,screen=this.screen,baseOptions=this.options;screen.start(documentElement,_objectSpread$2(_objectSpread$2({enableRedraw:!0},baseOptions),options))}},{key:"stop",value:function stop(){this.screen.stop()}},{key:"resize",value:function resize(width){var height=arguments.length>1&&void 0!==arguments[1]?arguments[1]:width,preserveAspectRatio=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.documentElement.resize(width,height,preserveAspectRatio)}}],[{key:"from",value:(_from=_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee2(ctx,svg){var options,parser,svgDocument,_args2=arguments;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return options=_args2.length>2&&void 0!==_args2[2]?_args2[2]:{},parser=new Parser(options),_context2.next=4,parser.parse(svg);case 4:return svgDocument=_context2.sent,_context2.abrupt("return",new Canvg(ctx,svgDocument,options));case 6:case"end":return _context2.stop()}}),_callee2)}))),function from(_x,_x2){return _from.apply(this,arguments)})},{key:"fromString",value:function fromString(ctx,svg){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},parser=new Parser(options),svgDocument=parser.parseFromString(svg);return new Canvg(ctx,svgDocument,options)}}]),Canvg}();var index=Object.freeze({__proto__:null,offscreen:function offscreen(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},DOMParserFallback=_ref.DOMParser,preset={window:null,ignoreAnimation:!0,ignoreMouse:!0,DOMParser:DOMParserFallback,createCanvas:function createCanvas(width,height){return new OffscreenCanvas(width,height)},createImage:function createImage(url){return _babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13___default()(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.mark((function _callee(){var response,blob,img;return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,fetch(url);case 2:return response=_context.sent,_context.next=5,response.blob();case 5:return blob=_context.sent,_context.next=8,createImageBitmap(blob);case 8:return img=_context.sent,_context.abrupt("return",img);case 10:case"end":return _context.stop()}}),_callee)})))()}};return"undefined"==typeof DOMParser&&void 0!==DOMParserFallback||_babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39___default()(preset,"DOMParser"),preset},node:function node(_ref){var DOMParser=_ref.DOMParser,canvas=_ref.canvas;return{window:null,ignoreAnimation:!0,ignoreMouse:!0,DOMParser:DOMParser,fetch:_ref.fetch,createCanvas:canvas.createCanvas,createImage:canvas.loadImage}}});__webpack_exports__.default=Canvg}.call(this,__webpack_require__(474))},3092:function(module,exports,__webpack_require__){"use strict";var global=__webpack_require__(3094),getOwnPropertyDescriptor=__webpack_require__(3111).f,isForced=__webpack_require__(3179),path=__webpack_require__(3093),bind=__webpack_require__(3119),createNonEnumerableProperty=__webpack_require__(3103),has=__webpack_require__(3102),wrapConstructor=function(NativeConstructor){var Wrapper=function(a,b,c){if(this instanceof NativeConstructor){switch(arguments.length){case 0:return new NativeConstructor;case 1:return new NativeConstructor(a);case 2:return new NativeConstructor(a,b)}return new NativeConstructor(a,b,c)}return NativeConstructor.apply(this,arguments)};return Wrapper.prototype=NativeConstructor.prototype,Wrapper};module.exports=function(options,source){var USE_NATIVE,VIRTUAL_PROTOTYPE,key,sourceProperty,targetProperty,nativeProperty,resultProperty,descriptor,TARGET=options.target,GLOBAL=options.global,STATIC=options.stat,PROTO=options.proto,nativeSource=GLOBAL?global:STATIC?global[TARGET]:(global[TARGET]||{}).prototype,target=GLOBAL?path:path[TARGET]||(path[TARGET]={}),targetPrototype=target.prototype;for(key in source)USE_NATIVE=!isForced(GLOBAL?key:TARGET+(STATIC?".":"#")+key,options.forced)&&nativeSource&&has(nativeSource,key),targetProperty=target[key],USE_NATIVE&&(nativeProperty=options.noTargetGet?(descriptor=getOwnPropertyDescriptor(nativeSource,key))&&descriptor.value:nativeSource[key]),sourceProperty=USE_NATIVE&&nativeProperty?nativeProperty:source[key],USE_NATIVE&&typeof targetProperty==typeof sourceProperty||(resultProperty=options.bind&&USE_NATIVE?bind(sourceProperty,global):options.wrap&&USE_NATIVE?wrapConstructor(sourceProperty):PROTO&&"function"==typeof sourceProperty?bind(Function.call,sourceProperty):sourceProperty,(options.sham||sourceProperty&&sourceProperty.sham||targetProperty&&targetProperty.sham)&&createNonEnumerableProperty(resultProperty,"sham",!0),target[key]=resultProperty,PROTO&&(has(path,VIRTUAL_PROTOTYPE=TARGET+"Prototype")||createNonEnumerableProperty(path,VIRTUAL_PROTOTYPE,{}),path[VIRTUAL_PROTOTYPE][key]=sourceProperty,options.real&&targetPrototype&&!targetPrototype[key]&&createNonEnumerableProperty(targetPrototype,key,sourceProperty)))}},3093:function(module,exports){module.exports={}},3094:function(module,exports,__webpack_require__){(function(global){var check=function(it){return it&&it.Math==Math&&it};module.exports=check("object"==typeof globalThis&&globalThis)||check("object"==typeof window&&window)||check("object"==typeof self&&self)||check("object"==typeof global&&global)||function(){return this}()||Function("return this")()}).call(this,__webpack_require__(20))},3095:function(module,exports){module.exports=function(exec){try{return!!exec()}catch(error){return!0}}},3096:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),shared=__webpack_require__(3148),has=__webpack_require__(3102),uid=__webpack_require__(3134),NATIVE_SYMBOL=__webpack_require__(3150),USE_SYMBOL_AS_UID=__webpack_require__(3181),WellKnownSymbolsStore=shared("wks"),Symbol=global.Symbol,createWellKnownSymbol=USE_SYMBOL_AS_UID?Symbol:Symbol&&Symbol.withoutSetter||uid;module.exports=function(name){return has(WellKnownSymbolsStore,name)||(NATIVE_SYMBOL&&has(Symbol,name)?WellKnownSymbolsStore[name]=Symbol[name]:WellKnownSymbolsStore[name]=createWellKnownSymbol("Symbol."+name)),WellKnownSymbolsStore[name]}},3097:function(module,exports,__webpack_require__){var path=__webpack_require__(3093),has=__webpack_require__(3102),wrappedWellKnownSymbolModule=__webpack_require__(3164),defineProperty=__webpack_require__(3104).f;module.exports=function(NAME){var Symbol=path.Symbol||(path.Symbol={});has(Symbol,NAME)||defineProperty(Symbol,NAME,{value:wrappedWellKnownSymbolModule.f(NAME)})}},3098:function(module,exports){module.exports=function(it){return"object"==typeof it?null!==it:"function"==typeof it}},3099:function(module,exports,__webpack_require__){var isObject=__webpack_require__(3098);module.exports=function(it){if(!isObject(it))throw TypeError(String(it)+" is not an object");return it}},3100:function(module,exports,__webpack_require__){var path=__webpack_require__(3093);module.exports=function(CONSTRUCTOR){return path[CONSTRUCTOR+"Prototype"]}},3101:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095);module.exports=!fails((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},3102:function(module,exports){var hasOwnProperty={}.hasOwnProperty;module.exports=function(it,key){return hasOwnProperty.call(it,key)}},3103:function(module,exports,__webpack_require__){var DESCRIPTORS=__webpack_require__(3101),definePropertyModule=__webpack_require__(3104),createPropertyDescriptor=__webpack_require__(3117);module.exports=DESCRIPTORS?function(object,key,value){return definePropertyModule.f(object,key,createPropertyDescriptor(1,value))}:function(object,key,value){return object[key]=value,object}},3104:function(module,exports,__webpack_require__){var DESCRIPTORS=__webpack_require__(3101),IE8_DOM_DEFINE=__webpack_require__(3178),anObject=__webpack_require__(3099),toPrimitive=__webpack_require__(3133),nativeDefineProperty=Object.defineProperty;exports.f=DESCRIPTORS?nativeDefineProperty:function defineProperty(O,P,Attributes){if(anObject(O),P=toPrimitive(P,!0),anObject(Attributes),IE8_DOM_DEFINE)try{return nativeDefineProperty(O,P,Attributes)}catch(error){}if("get"in Attributes||"set"in Attributes)throw TypeError("Accessors not supported");return"value"in Attributes&&(O[P]=Attributes.value),O}},3105:function(module,exports){module.exports=function(it){if("function"!=typeof it)throw TypeError(String(it)+" is not a function");return it}},3106:function(module,exports,__webpack_require__){var path=__webpack_require__(3093),global=__webpack_require__(3094),aFunction=function(variable){return"function"==typeof variable?variable:void 0};module.exports=function(namespace,method){return arguments.length<2?aFunction(path[namespace])||aFunction(global[namespace]):path[namespace]&&path[namespace][method]||global[namespace]&&global[namespace][method]}},3107:function(module,exports,__webpack_require__){var IndexedObject=__webpack_require__(3145),requireObjectCoercible=__webpack_require__(3118);module.exports=function(it){return IndexedObject(requireObjectCoercible(it))}},3108:function(module,exports,__webpack_require__){var toInteger=__webpack_require__(3147),min=Math.min;module.exports=function(argument){return argument>0?min(toInteger(argument),9007199254740991):0}},3109:function(module,exports,__webpack_require__){var requireObjectCoercible=__webpack_require__(3118);module.exports=function(argument){return Object(requireObjectCoercible(argument))}},3110:function(module,exports,__webpack_require__){var DESCRIPTORS=__webpack_require__(3101),fails=__webpack_require__(3095),has=__webpack_require__(3102),defineProperty=Object.defineProperty,cache={},thrower=function(it){throw it};module.exports=function(METHOD_NAME,options){if(has(cache,METHOD_NAME))return cache[METHOD_NAME];options||(options={});var method=[][METHOD_NAME],ACCESSORS=!!has(options,"ACCESSORS")&&options.ACCESSORS,argument0=has(options,0)?options[0]:thrower,argument1=has(options,1)?options[1]:void 0;return cache[METHOD_NAME]=!!method&&!fails((function(){if(ACCESSORS&&!DESCRIPTORS)return!0;var O={length:-1};ACCESSORS?defineProperty(O,1,{enumerable:!0,get:thrower}):O[1]=1,method.call(O,argument0,argument1)}))}},3111:function(module,exports,__webpack_require__){var DESCRIPTORS=__webpack_require__(3101),propertyIsEnumerableModule=__webpack_require__(3177),createPropertyDescriptor=__webpack_require__(3117),toIndexedObject=__webpack_require__(3107),toPrimitive=__webpack_require__(3133),has=__webpack_require__(3102),IE8_DOM_DEFINE=__webpack_require__(3178),nativeGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;exports.f=DESCRIPTORS?nativeGetOwnPropertyDescriptor:function getOwnPropertyDescriptor(O,P){if(O=toIndexedObject(O),P=toPrimitive(P,!0),IE8_DOM_DEFINE)try{return nativeGetOwnPropertyDescriptor(O,P)}catch(error){}if(has(O,P))return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O,P),O[P])}},3112:function(module,exports,__webpack_require__){__webpack_require__(3188);var DOMIterables=__webpack_require__(3306),global=__webpack_require__(3094),classof=__webpack_require__(3125),createNonEnumerableProperty=__webpack_require__(3103),Iterators=__webpack_require__(3115),TO_STRING_TAG=__webpack_require__(3096)("toStringTag");for(var COLLECTION_NAME in DOMIterables){var Collection=global[COLLECTION_NAME],CollectionPrototype=Collection&&Collection.prototype;CollectionPrototype&&classof(CollectionPrototype)!==TO_STRING_TAG&&createNonEnumerableProperty(CollectionPrototype,TO_STRING_TAG,COLLECTION_NAME),Iterators[COLLECTION_NAME]=Iterators.Array}},3113:function(module,exports){module.exports=!0},3114:function(module,exports,__webpack_require__){var bind=__webpack_require__(3119),IndexedObject=__webpack_require__(3145),toObject=__webpack_require__(3109),toLength=__webpack_require__(3108),arraySpeciesCreate=__webpack_require__(3183),push=[].push,createMethod=function(TYPE){var IS_MAP=1==TYPE,IS_FILTER=2==TYPE,IS_SOME=3==TYPE,IS_EVERY=4==TYPE,IS_FIND_INDEX=6==TYPE,NO_HOLES=5==TYPE||IS_FIND_INDEX;return function($this,callbackfn,that,specificCreate){for(var value,result,O=toObject($this),self=IndexedObject(O),boundFunction=bind(callbackfn,that,3),length=toLength(self.length),index=0,create=specificCreate||arraySpeciesCreate,target=IS_MAP?create($this,length):IS_FILTER?create($this,0):void 0;length>index;index++)if((NO_HOLES||index in self)&&(result=boundFunction(value=self[index],index,O),TYPE))if(IS_MAP)target[index]=result;else if(result)switch(TYPE){case 3:return!0;case 5:return value;case 6:return index;case 2:push.call(target,value)}else if(IS_EVERY)return!1;return IS_FIND_INDEX?-1:IS_SOME||IS_EVERY?IS_EVERY:target}};module.exports={forEach:createMethod(0),map:createMethod(1),filter:createMethod(2),some:createMethod(3),every:createMethod(4),find:createMethod(5),findIndex:createMethod(6)}},3115:function(module,exports){module.exports={}},3116:function(module,exports,__webpack_require__){"use strict";var charAt=__webpack_require__(3307).charAt,InternalStateModule=__webpack_require__(3121),defineIterator=__webpack_require__(3153),setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor("String Iterator");defineIterator(String,"String",(function(iterated){setInternalState(this,{type:"String Iterator",string:String(iterated),index:0})}),(function next(){var point,state=getInternalState(this),string=state.string,index=state.index;return index>=string.length?{value:void 0,done:!0}:(point=charAt(string,index),state.index+=point.length,{value:point,done:!1})}))},3117:function(module,exports){module.exports=function(bitmap,value){return{enumerable:!(1&bitmap),configurable:!(2&bitmap),writable:!(4&bitmap),value:value}}},3118:function(module,exports){module.exports=function(it){if(null==it)throw TypeError("Can't call method on "+it);return it}},3119:function(module,exports,__webpack_require__){var aFunction=__webpack_require__(3105);module.exports=function(fn,that,length){if(aFunction(fn),void 0===that)return fn;switch(length){case 0:return function(){return fn.call(that)};case 1:return function(a){return fn.call(that,a)};case 2:return function(a,b){return fn.call(that,a,b)};case 3:return function(a,b,c){return fn.call(that,a,b,c)}}return function(){return fn.apply(that,arguments)}}},3120:function(module,exports,__webpack_require__){var classof=__webpack_require__(3128);module.exports=Array.isArray||function isArray(arg){return"Array"==classof(arg)}},3121:function(module,exports,__webpack_require__){var set,get,has,NATIVE_WEAK_MAP=__webpack_require__(3302),global=__webpack_require__(3094),isObject=__webpack_require__(3098),createNonEnumerableProperty=__webpack_require__(3103),objectHas=__webpack_require__(3102),shared=__webpack_require__(3149),sharedKey=__webpack_require__(3138),hiddenKeys=__webpack_require__(3129),WeakMap=global.WeakMap;if(NATIVE_WEAK_MAP){var store=shared.state||(shared.state=new WeakMap),wmget=store.get,wmhas=store.has,wmset=store.set;set=function(it,metadata){return metadata.facade=it,wmset.call(store,it,metadata),metadata},get=function(it){return wmget.call(store,it)||{}},has=function(it){return wmhas.call(store,it)}}else{var STATE=sharedKey("state");hiddenKeys[STATE]=!0,set=function(it,metadata){return metadata.facade=it,createNonEnumerableProperty(it,STATE,metadata),metadata},get=function(it){return objectHas(it,STATE)?it[STATE]:{}},has=function(it){return objectHas(it,STATE)}}module.exports={set:set,get:get,has:has,enforce:function(it){return has(it)?get(it):set(it,{})},getterFor:function(TYPE){return function(it){var state;if(!isObject(it)||(state=get(it)).type!==TYPE)throw TypeError("Incompatible receiver, "+TYPE+" required");return state}}}},3122:function(module,exports,__webpack_require__){var has=__webpack_require__(3102),toObject=__webpack_require__(3109),sharedKey=__webpack_require__(3138),CORRECT_PROTOTYPE_GETTER=__webpack_require__(3154),IE_PROTO=sharedKey("IE_PROTO"),ObjectPrototype=Object.prototype;module.exports=CORRECT_PROTOTYPE_GETTER?Object.getPrototypeOf:function(O){return O=toObject(O),has(O,IE_PROTO)?O[IE_PROTO]:"function"==typeof O.constructor&&O instanceof O.constructor?O.constructor.prototype:O instanceof Object?ObjectPrototype:null}},3123:function(module,exports,__webpack_require__){var activeXDocument,anObject=__webpack_require__(3099),defineProperties=__webpack_require__(3191),enumBugKeys=__webpack_require__(3158),hiddenKeys=__webpack_require__(3129),html=__webpack_require__(3193),documentCreateElement=__webpack_require__(3146),sharedKey=__webpack_require__(3138),IE_PROTO=sharedKey("IE_PROTO"),EmptyConstructor=function(){},scriptTag=function(content){return"<script>"+content+"<\/script>"},NullProtoObject=function(){try{activeXDocument=document.domain&&new ActiveXObject("htmlfile")}catch(error){}var iframeDocument,iframe;NullProtoObject=activeXDocument?function(activeXDocument){activeXDocument.write(scriptTag("")),activeXDocument.close();var temp=activeXDocument.parentWindow.Object;return activeXDocument=null,temp}(activeXDocument):((iframe=documentCreateElement("iframe")).style.display="none",html.appendChild(iframe),iframe.src=String("javascript:"),(iframeDocument=iframe.contentWindow.document).open(),iframeDocument.write(scriptTag("document.F=Object")),iframeDocument.close(),iframeDocument.F);for(var length=enumBugKeys.length;length--;)delete NullProtoObject.prototype[enumBugKeys[length]];return NullProtoObject()};hiddenKeys[IE_PROTO]=!0,module.exports=Object.create||function create(O,Properties){var result;return null!==O?(EmptyConstructor.prototype=anObject(O),result=new EmptyConstructor,EmptyConstructor.prototype=null,result[IE_PROTO]=O):result=NullProtoObject(),void 0===Properties?result:defineProperties(result,Properties)}},3124:function(module,exports,__webpack_require__){var TO_STRING_TAG_SUPPORT=__webpack_require__(3159),defineProperty=__webpack_require__(3104).f,createNonEnumerableProperty=__webpack_require__(3103),has=__webpack_require__(3102),toString=__webpack_require__(3304),TO_STRING_TAG=__webpack_require__(3096)("toStringTag");module.exports=function(it,TAG,STATIC,SET_METHOD){if(it){var target=STATIC?it:it.prototype;has(target,TO_STRING_TAG)||defineProperty(target,TO_STRING_TAG,{configurable:!0,value:TAG}),SET_METHOD&&!TO_STRING_TAG_SUPPORT&&createNonEnumerableProperty(target,"toString",toString)}}},3125:function(module,exports,__webpack_require__){var TO_STRING_TAG_SUPPORT=__webpack_require__(3159),classofRaw=__webpack_require__(3128),TO_STRING_TAG=__webpack_require__(3096)("toStringTag"),CORRECT_ARGUMENTS="Arguments"==classofRaw(function(){return arguments}());module.exports=TO_STRING_TAG_SUPPORT?classofRaw:function(it){var O,tag,result;return void 0===it?"Undefined":null===it?"Null":"string"==typeof(tag=function(it,key){try{return it[key]}catch(error){}}(O=Object(it),TO_STRING_TAG))?tag:CORRECT_ARGUMENTS?classofRaw(O):"Object"==(result=classofRaw(O))&&"function"==typeof O.callee?"Arguments":result}},3126:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099),isArrayIteratorMethod=__webpack_require__(3204),toLength=__webpack_require__(3108),bind=__webpack_require__(3119),getIteratorMethod=__webpack_require__(3139),iteratorClose=__webpack_require__(3203),Result=function(stopped,result){this.stopped=stopped,this.result=result};module.exports=function(iterable,unboundFunction,options){var iterator,iterFn,index,length,result,next,step,that=options&&options.that,AS_ENTRIES=!(!options||!options.AS_ENTRIES),IS_ITERATOR=!(!options||!options.IS_ITERATOR),INTERRUPTED=!(!options||!options.INTERRUPTED),fn=bind(unboundFunction,that,1+AS_ENTRIES+INTERRUPTED),stop=function(condition){return iterator&&iteratorClose(iterator),new Result(!0,condition)},callFn=function(value){return AS_ENTRIES?(anObject(value),INTERRUPTED?fn(value[0],value[1],stop):fn(value[0],value[1])):INTERRUPTED?fn(value,stop):fn(value)};if(IS_ITERATOR)iterator=iterable;else{if("function"!=typeof(iterFn=getIteratorMethod(iterable)))throw TypeError("Target is not iterable");if(isArrayIteratorMethod(iterFn)){for(index=0,length=toLength(iterable.length);length>index;index++)if((result=callFn(iterable[index]))&&result instanceof Result)return result;return new Result(!1)}iterator=iterFn.call(iterable)}for(next=iterator.next;!(step=next.call(iterator)).done;){try{result=callFn(step.value)}catch(error){throw iteratorClose(iterator),error}if("object"==typeof result&&result&&result instanceof Result)return result}return new Result(!1)}},3128:function(module,exports){var toString={}.toString;module.exports=function(it){return toString.call(it).slice(8,-1)}},3129:function(module,exports){module.exports={}},3130:function(module,exports,__webpack_require__){var createNonEnumerableProperty=__webpack_require__(3103);module.exports=function(target,key,value,options){options&&options.enumerable?target[key]=value:createNonEnumerableProperty(target,key,value)}},3131:function(module,exports,__webpack_require__){"use strict";var fails=__webpack_require__(3095);module.exports=function(METHOD_NAME,argument){var method=[][METHOD_NAME];return!!method&&fails((function(){method.call(null,argument||function(){throw 1},1)}))}},3132:function(module,exports,__webpack_require__){"use strict";var aFunction=__webpack_require__(3105),PromiseCapability=function(C){var resolve,reject;this.promise=new C((function($$resolve,$$reject){if(void 0!==resolve||void 0!==reject)throw TypeError("Bad Promise constructor");resolve=$$resolve,reject=$$reject})),this.resolve=aFunction(resolve),this.reject=aFunction(reject)};module.exports.f=function(C){return new PromiseCapability(C)}},3133:function(module,exports,__webpack_require__){var isObject=__webpack_require__(3098);module.exports=function(input,PREFERRED_STRING){if(!isObject(input))return input;var fn,val;if(PREFERRED_STRING&&"function"==typeof(fn=input.toString)&&!isObject(val=fn.call(input)))return val;if("function"==typeof(fn=input.valueOf)&&!isObject(val=fn.call(input)))return val;if(!PREFERRED_STRING&&"function"==typeof(fn=input.toString)&&!isObject(val=fn.call(input)))return val;throw TypeError("Can't convert object to primitive value")}},3134:function(module,exports){var id=0,postfix=Math.random();module.exports=function(key){return"Symbol("+String(void 0===key?"":key)+")_"+(++id+postfix).toString(36)}},3135:function(module,exports){module.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},3136:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095),wellKnownSymbol=__webpack_require__(3096),V8_VERSION=__webpack_require__(3137),SPECIES=wellKnownSymbol("species");module.exports=function(METHOD_NAME){return V8_VERSION>=51||!fails((function(){var array=[];return(array.constructor={})[SPECIES]=function(){return{foo:1}},1!==array[METHOD_NAME](Boolean).foo}))}},3137:function(module,exports,__webpack_require__){var match,version,global=__webpack_require__(3094),userAgent=__webpack_require__(3184),process=global.process,versions=process&&process.versions,v8=versions&&versions.v8;v8?version=(match=v8.split("."))[0]+match[1]:userAgent&&(!(match=userAgent.match(/Edge\/(\d+)/))||match[1]>=74)&&(match=userAgent.match(/Chrome\/(\d+)/))&&(version=match[1]),module.exports=version&&+version},3138:function(module,exports,__webpack_require__){var shared=__webpack_require__(3148),uid=__webpack_require__(3134),keys=shared("keys");module.exports=function(key){return keys[key]||(keys[key]=uid(key))}},3139:function(module,exports,__webpack_require__){var classof=__webpack_require__(3125),Iterators=__webpack_require__(3115),ITERATOR=__webpack_require__(3096)("iterator");module.exports=function(it){if(null!=it)return it[ITERATOR]||it["@@iterator"]||Iterators[classof(it)]}},3140:function(module,exports,__webpack_require__){"use strict";var toPrimitive=__webpack_require__(3133),definePropertyModule=__webpack_require__(3104),createPropertyDescriptor=__webpack_require__(3117);module.exports=function(object,key,value){var propertyKey=toPrimitive(key);propertyKey in object?definePropertyModule.f(object,propertyKey,createPropertyDescriptor(0,value)):object[propertyKey]=value}},3141:function(module,exports,__webpack_require__){var classof=__webpack_require__(3128),global=__webpack_require__(3094);module.exports="process"==classof(global.process)},3142:function(module,exports){module.exports=function(exec){try{return{error:!1,value:exec()}}catch(error){return{error:!0,value:error}}}},3145:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095),classof=__webpack_require__(3128),split="".split;module.exports=fails((function(){return!Object("z").propertyIsEnumerable(0)}))?function(it){return"String"==classof(it)?split.call(it,""):Object(it)}:Object},3146:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),isObject=__webpack_require__(3098),document=global.document,EXISTS=isObject(document)&&isObject(document.createElement);module.exports=function(it){return EXISTS?document.createElement(it):{}}},3147:function(module,exports){var ceil=Math.ceil,floor=Math.floor;module.exports=function(argument){return isNaN(argument=+argument)?0:(argument>0?floor:ceil)(argument)}},3148:function(module,exports,__webpack_require__){var IS_PURE=__webpack_require__(3113),store=__webpack_require__(3149);(module.exports=function(key,value){return store[key]||(store[key]=void 0!==value?value:{})})("versions",[]).push({version:"3.7.0",mode:IS_PURE?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},3149:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),setGlobal=__webpack_require__(3285),store=global["__core-js_shared__"]||setGlobal("__core-js_shared__",{});module.exports=store},3150:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095);module.exports=!!Object.getOwnPropertySymbols&&!fails((function(){return!String(Symbol())}))},3151:function(module,exports,__webpack_require__){var requireObjectCoercible=__webpack_require__(3118),whitespace="["+__webpack_require__(3135)+"]",ltrim=RegExp("^"+whitespace+whitespace+"*"),rtrim=RegExp(whitespace+whitespace+"*$"),createMethod=function(TYPE){return function($this){var string=String(requireObjectCoercible($this));return 1&TYPE&&(string=string.replace(ltrim,"")),2&TYPE&&(string=string.replace(rtrim,"")),string}};module.exports={start:createMethod(1),end:createMethod(2),trim:createMethod(3)}},3152:function(module,exports){module.exports=function(){}},3153:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),createIteratorConstructor=__webpack_require__(3303),getPrototypeOf=__webpack_require__(3122),setPrototypeOf=__webpack_require__(3160),setToStringTag=__webpack_require__(3124),createNonEnumerableProperty=__webpack_require__(3103),redefine=__webpack_require__(3130),wellKnownSymbol=__webpack_require__(3096),IS_PURE=__webpack_require__(3113),Iterators=__webpack_require__(3115),IteratorsCore=__webpack_require__(3190),IteratorPrototype=IteratorsCore.IteratorPrototype,BUGGY_SAFARI_ITERATORS=IteratorsCore.BUGGY_SAFARI_ITERATORS,ITERATOR=wellKnownSymbol("iterator"),returnThis=function(){return this};module.exports=function(Iterable,NAME,IteratorConstructor,next,DEFAULT,IS_SET,FORCED){createIteratorConstructor(IteratorConstructor,NAME,next);var CurrentIteratorPrototype,methods,KEY,getIterationMethod=function(KIND){if(KIND===DEFAULT&&defaultIterator)return defaultIterator;if(!BUGGY_SAFARI_ITERATORS&&KIND in IterablePrototype)return IterablePrototype[KIND];switch(KIND){case"keys":return function keys(){return new IteratorConstructor(this,KIND)};case"values":return function values(){return new IteratorConstructor(this,KIND)};case"entries":return function entries(){return new IteratorConstructor(this,KIND)}}return function(){return new IteratorConstructor(this)}},TO_STRING_TAG=NAME+" Iterator",INCORRECT_VALUES_NAME=!1,IterablePrototype=Iterable.prototype,nativeIterator=IterablePrototype[ITERATOR]||IterablePrototype["@@iterator"]||DEFAULT&&IterablePrototype[DEFAULT],defaultIterator=!BUGGY_SAFARI_ITERATORS&&nativeIterator||getIterationMethod(DEFAULT),anyNativeIterator="Array"==NAME&&IterablePrototype.entries||nativeIterator;if(anyNativeIterator&&(CurrentIteratorPrototype=getPrototypeOf(anyNativeIterator.call(new Iterable)),IteratorPrototype!==Object.prototype&&CurrentIteratorPrototype.next&&(IS_PURE||getPrototypeOf(CurrentIteratorPrototype)===IteratorPrototype||(setPrototypeOf?setPrototypeOf(CurrentIteratorPrototype,IteratorPrototype):"function"!=typeof CurrentIteratorPrototype[ITERATOR]&&createNonEnumerableProperty(CurrentIteratorPrototype,ITERATOR,returnThis)),setToStringTag(CurrentIteratorPrototype,TO_STRING_TAG,!0,!0),IS_PURE&&(Iterators[TO_STRING_TAG]=returnThis))),"values"==DEFAULT&&nativeIterator&&"values"!==nativeIterator.name&&(INCORRECT_VALUES_NAME=!0,defaultIterator=function values(){return nativeIterator.call(this)}),IS_PURE&&!FORCED||IterablePrototype[ITERATOR]===defaultIterator||createNonEnumerableProperty(IterablePrototype,ITERATOR,defaultIterator),Iterators[NAME]=defaultIterator,DEFAULT)if(methods={values:getIterationMethod("values"),keys:IS_SET?defaultIterator:getIterationMethod("keys"),entries:getIterationMethod("entries")},FORCED)for(KEY in methods)(BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME||!(KEY in IterablePrototype))&&redefine(IterablePrototype,KEY,methods[KEY]);else $({target:NAME,proto:!0,forced:BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME},methods);return methods}},3154:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095);module.exports=!fails((function(){function F(){}return F.prototype.constructor=null,Object.getPrototypeOf(new F)!==F.prototype}))},3155:function(module,exports,__webpack_require__){var internalObjectKeys=__webpack_require__(3192),enumBugKeys=__webpack_require__(3158);module.exports=Object.keys||function keys(O){return internalObjectKeys(O,enumBugKeys)}},3156:function(module,exports,__webpack_require__){var toIndexedObject=__webpack_require__(3107),toLength=__webpack_require__(3108),toAbsoluteIndex=__webpack_require__(3157),createMethod=function(IS_INCLUDES){return function($this,el,fromIndex){var value,O=toIndexedObject($this),length=toLength(O.length),index=toAbsoluteIndex(fromIndex,length);if(IS_INCLUDES&&el!=el){for(;length>index;)if((value=O[index++])!=value)return!0}else for(;length>index;index++)if((IS_INCLUDES||index in O)&&O[index]===el)return IS_INCLUDES||index||0;return!IS_INCLUDES&&-1}};module.exports={includes:createMethod(!0),indexOf:createMethod(!1)}},3157:function(module,exports,__webpack_require__){var toInteger=__webpack_require__(3147),max=Math.max,min=Math.min;module.exports=function(index,length){var integer=toInteger(index);return integer<0?max(integer+length,0):min(integer,length)}},3158:function(module,exports){module.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},3159:function(module,exports,__webpack_require__){var test={};test[__webpack_require__(3096)("toStringTag")]="z",module.exports="[object z]"===String(test)},3160:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099),aPossiblePrototype=__webpack_require__(3305);module.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var setter,CORRECT_SETTER=!1,test={};try{(setter=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(test,[]),CORRECT_SETTER=test instanceof Array}catch(error){}return function setPrototypeOf(O,proto){return anObject(O),aPossiblePrototype(proto),CORRECT_SETTER?setter.call(O,proto):O.__proto__=proto,O}}():void 0)},3161:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3311)},3162:function(module,exports){},3163:function(module,exports,__webpack_require__){var internalObjectKeys=__webpack_require__(3192),hiddenKeys=__webpack_require__(3158).concat("length","prototype");exports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){return internalObjectKeys(O,hiddenKeys)}},3164:function(module,exports,__webpack_require__){var wellKnownSymbol=__webpack_require__(3096);exports.f=wellKnownSymbol},3165:function(module,exports){module.exports=function(it,Constructor,name){if(!(it instanceof Constructor))throw TypeError("Incorrect "+(name?name+" ":"")+"invocation");return it}},3177:function(module,exports,__webpack_require__){"use strict";var nativePropertyIsEnumerable={}.propertyIsEnumerable,getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor,NASHORN_BUG=getOwnPropertyDescriptor&&!nativePropertyIsEnumerable.call({1:2},1);exports.f=NASHORN_BUG?function propertyIsEnumerable(V){var descriptor=getOwnPropertyDescriptor(this,V);return!!descriptor&&descriptor.enumerable}:nativePropertyIsEnumerable},3178:function(module,exports,__webpack_require__){var DESCRIPTORS=__webpack_require__(3101),fails=__webpack_require__(3095),createElement=__webpack_require__(3146);module.exports=!DESCRIPTORS&&!fails((function(){return 7!=Object.defineProperty(createElement("div"),"a",{get:function(){return 7}}).a}))},3179:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095),replacement=/#|\.prototype\./,isForced=function(feature,detection){var value=data[normalize(feature)];return value==POLYFILL||value!=NATIVE&&("function"==typeof detection?fails(detection):!!detection)},normalize=isForced.normalize=function(string){return String(string).replace(replacement,".").toLowerCase()},data=isForced.data={},NATIVE=isForced.NATIVE="N",POLYFILL=isForced.POLYFILL="P";module.exports=isForced},3180:function(module,exports,__webpack_require__){var isRegExp=__webpack_require__(3284);module.exports=function(it){if(isRegExp(it))throw TypeError("The method doesn't accept regular expressions");return it}},3181:function(module,exports,__webpack_require__){var NATIVE_SYMBOL=__webpack_require__(3150);module.exports=NATIVE_SYMBOL&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3182:function(module,exports,__webpack_require__){var MATCH=__webpack_require__(3096)("match");module.exports=function(METHOD_NAME){var regexp=/./;try{"/./"[METHOD_NAME](regexp)}catch(error1){try{return regexp[MATCH]=!1,"/./"[METHOD_NAME](regexp)}catch(error2){}}return!1}},3183:function(module,exports,__webpack_require__){var isObject=__webpack_require__(3098),isArray=__webpack_require__(3120),SPECIES=__webpack_require__(3096)("species");module.exports=function(originalArray,length){var C;return isArray(originalArray)&&("function"!=typeof(C=originalArray.constructor)||C!==Array&&!isArray(C.prototype)?isObject(C)&&null===(C=C[SPECIES])&&(C=void 0):C=void 0),new(void 0===C?Array:C)(0===length?0:length)}},3184:function(module,exports,__webpack_require__){var getBuiltIn=__webpack_require__(3106);module.exports=getBuiltIn("navigator","userAgent")||""},3185:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3298)},3186:function(module,exports,__webpack_require__){__webpack_require__(3299);var path=__webpack_require__(3093);module.exports=path.Array.isArray},3187:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3301)},3188:function(module,exports,__webpack_require__){"use strict";var toIndexedObject=__webpack_require__(3107),addToUnscopables=__webpack_require__(3152),Iterators=__webpack_require__(3115),InternalStateModule=__webpack_require__(3121),defineIterator=__webpack_require__(3153),setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor("Array Iterator");module.exports=defineIterator(Array,"Array",(function(iterated,kind){setInternalState(this,{type:"Array Iterator",target:toIndexedObject(iterated),index:0,kind:kind})}),(function(){var state=getInternalState(this),target=state.target,kind=state.kind,index=state.index++;return!target||index>=target.length?(state.target=void 0,{value:void 0,done:!0}):"keys"==kind?{value:index,done:!1}:"values"==kind?{value:target[index],done:!1}:{value:[index,target[index]],done:!1}}),"values"),Iterators.Arguments=Iterators.Array,addToUnscopables("keys"),addToUnscopables("values"),addToUnscopables("entries")},3189:function(module,exports,__webpack_require__){var store=__webpack_require__(3149),functionToString=Function.toString;"function"!=typeof store.inspectSource&&(store.inspectSource=function(it){return functionToString.call(it)}),module.exports=store.inspectSource},3190:function(module,exports,__webpack_require__){"use strict";var IteratorPrototype,PrototypeOfArrayIteratorPrototype,arrayIterator,getPrototypeOf=__webpack_require__(3122),createNonEnumerableProperty=__webpack_require__(3103),has=__webpack_require__(3102),wellKnownSymbol=__webpack_require__(3096),IS_PURE=__webpack_require__(3113),ITERATOR=wellKnownSymbol("iterator"),BUGGY_SAFARI_ITERATORS=!1;[].keys&&("next"in(arrayIterator=[].keys())?(PrototypeOfArrayIteratorPrototype=getPrototypeOf(getPrototypeOf(arrayIterator)))!==Object.prototype&&(IteratorPrototype=PrototypeOfArrayIteratorPrototype):BUGGY_SAFARI_ITERATORS=!0),null==IteratorPrototype&&(IteratorPrototype={}),IS_PURE||has(IteratorPrototype,ITERATOR)||createNonEnumerableProperty(IteratorPrototype,ITERATOR,(function(){return this})),module.exports={IteratorPrototype:IteratorPrototype,BUGGY_SAFARI_ITERATORS:BUGGY_SAFARI_ITERATORS}},3191:function(module,exports,__webpack_require__){var DESCRIPTORS=__webpack_require__(3101),definePropertyModule=__webpack_require__(3104),anObject=__webpack_require__(3099),objectKeys=__webpack_require__(3155);module.exports=DESCRIPTORS?Object.defineProperties:function defineProperties(O,Properties){anObject(O);for(var key,keys=objectKeys(Properties),length=keys.length,index=0;length>index;)definePropertyModule.f(O,key=keys[index++],Properties[key]);return O}},3192:function(module,exports,__webpack_require__){var has=__webpack_require__(3102),toIndexedObject=__webpack_require__(3107),indexOf=__webpack_require__(3156).indexOf,hiddenKeys=__webpack_require__(3129);module.exports=function(object,names){var key,O=toIndexedObject(object),i=0,result=[];for(key in O)!has(hiddenKeys,key)&&has(O,key)&&result.push(key);for(;names.length>i;)has(O,key=names[i++])&&(~indexOf(result,key)||result.push(key));return result}},3193:function(module,exports,__webpack_require__){var getBuiltIn=__webpack_require__(3106);module.exports=getBuiltIn("document","documentElement")},3194:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3309)},3195:function(module,exports,__webpack_require__){__webpack_require__(3196),__webpack_require__(3162),__webpack_require__(3197),__webpack_require__(3313),__webpack_require__(3314),__webpack_require__(3315),__webpack_require__(3316),__webpack_require__(3199),__webpack_require__(3317),__webpack_require__(3318),__webpack_require__(3319),__webpack_require__(3320),__webpack_require__(3321),__webpack_require__(3322),__webpack_require__(3323),__webpack_require__(3324),__webpack_require__(3325),__webpack_require__(3326),__webpack_require__(3327),__webpack_require__(3328);var path=__webpack_require__(3093);module.exports=path.Symbol},3196:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),fails=__webpack_require__(3095),isArray=__webpack_require__(3120),isObject=__webpack_require__(3098),toObject=__webpack_require__(3109),toLength=__webpack_require__(3108),createProperty=__webpack_require__(3140),arraySpeciesCreate=__webpack_require__(3183),arrayMethodHasSpeciesSupport=__webpack_require__(3136),wellKnownSymbol=__webpack_require__(3096),V8_VERSION=__webpack_require__(3137),IS_CONCAT_SPREADABLE=wellKnownSymbol("isConcatSpreadable"),IS_CONCAT_SPREADABLE_SUPPORT=V8_VERSION>=51||!fails((function(){var array=[];return array[IS_CONCAT_SPREADABLE]=!1,array.concat()[0]!==array})),SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("concat"),isConcatSpreadable=function(O){if(!isObject(O))return!1;var spreadable=O[IS_CONCAT_SPREADABLE];return void 0!==spreadable?!!spreadable:isArray(O)};$({target:"Array",proto:!0,forced:!IS_CONCAT_SPREADABLE_SUPPORT||!SPECIES_SUPPORT},{concat:function concat(arg){var i,k,length,len,E,O=toObject(this),A=arraySpeciesCreate(O,0),n=0;for(i=-1,length=arguments.length;i<length;i++)if(isConcatSpreadable(E=-1===i?O:arguments[i])){if(n+(len=toLength(E.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(k=0;k<len;k++,n++)k in E&&createProperty(A,n,E[k])}else{if(n>=9007199254740991)throw TypeError("Maximum allowed index exceeded");createProperty(A,n++,E)}return A.length=n,A}})},3197:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),global=__webpack_require__(3094),getBuiltIn=__webpack_require__(3106),IS_PURE=__webpack_require__(3113),DESCRIPTORS=__webpack_require__(3101),NATIVE_SYMBOL=__webpack_require__(3150),USE_SYMBOL_AS_UID=__webpack_require__(3181),fails=__webpack_require__(3095),has=__webpack_require__(3102),isArray=__webpack_require__(3120),isObject=__webpack_require__(3098),anObject=__webpack_require__(3099),toObject=__webpack_require__(3109),toIndexedObject=__webpack_require__(3107),toPrimitive=__webpack_require__(3133),createPropertyDescriptor=__webpack_require__(3117),nativeObjectCreate=__webpack_require__(3123),objectKeys=__webpack_require__(3155),getOwnPropertyNamesModule=__webpack_require__(3163),getOwnPropertyNamesExternal=__webpack_require__(3312),getOwnPropertySymbolsModule=__webpack_require__(3198),getOwnPropertyDescriptorModule=__webpack_require__(3111),definePropertyModule=__webpack_require__(3104),propertyIsEnumerableModule=__webpack_require__(3177),createNonEnumerableProperty=__webpack_require__(3103),redefine=__webpack_require__(3130),shared=__webpack_require__(3148),sharedKey=__webpack_require__(3138),hiddenKeys=__webpack_require__(3129),uid=__webpack_require__(3134),wellKnownSymbol=__webpack_require__(3096),wrappedWellKnownSymbolModule=__webpack_require__(3164),defineWellKnownSymbol=__webpack_require__(3097),setToStringTag=__webpack_require__(3124),InternalStateModule=__webpack_require__(3121),$forEach=__webpack_require__(3114).forEach,HIDDEN=sharedKey("hidden"),TO_PRIMITIVE=wellKnownSymbol("toPrimitive"),setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor("Symbol"),ObjectPrototype=Object.prototype,$Symbol=global.Symbol,$stringify=getBuiltIn("JSON","stringify"),nativeGetOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f,nativeDefineProperty=definePropertyModule.f,nativeGetOwnPropertyNames=getOwnPropertyNamesExternal.f,nativePropertyIsEnumerable=propertyIsEnumerableModule.f,AllSymbols=shared("symbols"),ObjectPrototypeSymbols=shared("op-symbols"),StringToSymbolRegistry=shared("string-to-symbol-registry"),SymbolToStringRegistry=shared("symbol-to-string-registry"),WellKnownSymbolsStore=shared("wks"),QObject=global.QObject,USE_SETTER=!QObject||!QObject.prototype||!QObject.prototype.findChild,setSymbolDescriptor=DESCRIPTORS&&fails((function(){return 7!=nativeObjectCreate(nativeDefineProperty({},"a",{get:function(){return nativeDefineProperty(this,"a",{value:7}).a}})).a}))?function(O,P,Attributes){var ObjectPrototypeDescriptor=nativeGetOwnPropertyDescriptor(ObjectPrototype,P);ObjectPrototypeDescriptor&&delete ObjectPrototype[P],nativeDefineProperty(O,P,Attributes),ObjectPrototypeDescriptor&&O!==ObjectPrototype&&nativeDefineProperty(ObjectPrototype,P,ObjectPrototypeDescriptor)}:nativeDefineProperty,wrap=function(tag,description){var symbol=AllSymbols[tag]=nativeObjectCreate($Symbol.prototype);return setInternalState(symbol,{type:"Symbol",tag:tag,description:description}),DESCRIPTORS||(symbol.description=description),symbol},isSymbol=USE_SYMBOL_AS_UID?function(it){return"symbol"==typeof it}:function(it){return Object(it)instanceof $Symbol},$defineProperty=function defineProperty(O,P,Attributes){O===ObjectPrototype&&$defineProperty(ObjectPrototypeSymbols,P,Attributes),anObject(O);var key=toPrimitive(P,!0);return anObject(Attributes),has(AllSymbols,key)?(Attributes.enumerable?(has(O,HIDDEN)&&O[HIDDEN][key]&&(O[HIDDEN][key]=!1),Attributes=nativeObjectCreate(Attributes,{enumerable:createPropertyDescriptor(0,!1)})):(has(O,HIDDEN)||nativeDefineProperty(O,HIDDEN,createPropertyDescriptor(1,{})),O[HIDDEN][key]=!0),setSymbolDescriptor(O,key,Attributes)):nativeDefineProperty(O,key,Attributes)},$defineProperties=function defineProperties(O,Properties){anObject(O);var properties=toIndexedObject(Properties),keys=objectKeys(properties).concat($getOwnPropertySymbols(properties));return $forEach(keys,(function(key){DESCRIPTORS&&!$propertyIsEnumerable.call(properties,key)||$defineProperty(O,key,properties[key])})),O},$propertyIsEnumerable=function propertyIsEnumerable(V){var P=toPrimitive(V,!0),enumerable=nativePropertyIsEnumerable.call(this,P);return!(this===ObjectPrototype&&has(AllSymbols,P)&&!has(ObjectPrototypeSymbols,P))&&(!(enumerable||!has(this,P)||!has(AllSymbols,P)||has(this,HIDDEN)&&this[HIDDEN][P])||enumerable)},$getOwnPropertyDescriptor=function getOwnPropertyDescriptor(O,P){var it=toIndexedObject(O),key=toPrimitive(P,!0);if(it!==ObjectPrototype||!has(AllSymbols,key)||has(ObjectPrototypeSymbols,key)){var descriptor=nativeGetOwnPropertyDescriptor(it,key);return!descriptor||!has(AllSymbols,key)||has(it,HIDDEN)&&it[HIDDEN][key]||(descriptor.enumerable=!0),descriptor}},$getOwnPropertyNames=function getOwnPropertyNames(O){var names=nativeGetOwnPropertyNames(toIndexedObject(O)),result=[];return $forEach(names,(function(key){has(AllSymbols,key)||has(hiddenKeys,key)||result.push(key)})),result},$getOwnPropertySymbols=function getOwnPropertySymbols(O){var IS_OBJECT_PROTOTYPE=O===ObjectPrototype,names=nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE?ObjectPrototypeSymbols:toIndexedObject(O)),result=[];return $forEach(names,(function(key){!has(AllSymbols,key)||IS_OBJECT_PROTOTYPE&&!has(ObjectPrototype,key)||result.push(AllSymbols[key])})),result};(NATIVE_SYMBOL||(redefine(($Symbol=function Symbol(){if(this instanceof $Symbol)throw TypeError("Symbol is not a constructor");var description=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,tag=uid(description),setter=function(value){this===ObjectPrototype&&setter.call(ObjectPrototypeSymbols,value),has(this,HIDDEN)&&has(this[HIDDEN],tag)&&(this[HIDDEN][tag]=!1),setSymbolDescriptor(this,tag,createPropertyDescriptor(1,value))};return DESCRIPTORS&&USE_SETTER&&setSymbolDescriptor(ObjectPrototype,tag,{configurable:!0,set:setter}),wrap(tag,description)}).prototype,"toString",(function toString(){return getInternalState(this).tag})),redefine($Symbol,"withoutSetter",(function(description){return wrap(uid(description),description)})),propertyIsEnumerableModule.f=$propertyIsEnumerable,definePropertyModule.f=$defineProperty,getOwnPropertyDescriptorModule.f=$getOwnPropertyDescriptor,getOwnPropertyNamesModule.f=getOwnPropertyNamesExternal.f=$getOwnPropertyNames,getOwnPropertySymbolsModule.f=$getOwnPropertySymbols,wrappedWellKnownSymbolModule.f=function(name){return wrap(wellKnownSymbol(name),name)},DESCRIPTORS&&(nativeDefineProperty($Symbol.prototype,"description",{configurable:!0,get:function description(){return getInternalState(this).description}}),IS_PURE||redefine(ObjectPrototype,"propertyIsEnumerable",$propertyIsEnumerable,{unsafe:!0}))),$({global:!0,wrap:!0,forced:!NATIVE_SYMBOL,sham:!NATIVE_SYMBOL},{Symbol:$Symbol}),$forEach(objectKeys(WellKnownSymbolsStore),(function(name){defineWellKnownSymbol(name)})),$({target:"Symbol",stat:!0,forced:!NATIVE_SYMBOL},{for:function(key){var string=String(key);if(has(StringToSymbolRegistry,string))return StringToSymbolRegistry[string];var symbol=$Symbol(string);return StringToSymbolRegistry[string]=symbol,SymbolToStringRegistry[symbol]=string,symbol},keyFor:function keyFor(sym){if(!isSymbol(sym))throw TypeError(sym+" is not a symbol");if(has(SymbolToStringRegistry,sym))return SymbolToStringRegistry[sym]},useSetter:function(){USE_SETTER=!0},useSimple:function(){USE_SETTER=!1}}),$({target:"Object",stat:!0,forced:!NATIVE_SYMBOL,sham:!DESCRIPTORS},{create:function create(O,Properties){return void 0===Properties?nativeObjectCreate(O):$defineProperties(nativeObjectCreate(O),Properties)},defineProperty:$defineProperty,defineProperties:$defineProperties,getOwnPropertyDescriptor:$getOwnPropertyDescriptor}),$({target:"Object",stat:!0,forced:!NATIVE_SYMBOL},{getOwnPropertyNames:$getOwnPropertyNames,getOwnPropertySymbols:$getOwnPropertySymbols}),$({target:"Object",stat:!0,forced:fails((function(){getOwnPropertySymbolsModule.f(1)}))},{getOwnPropertySymbols:function getOwnPropertySymbols(it){return getOwnPropertySymbolsModule.f(toObject(it))}}),$stringify)&&$({target:"JSON",stat:!0,forced:!NATIVE_SYMBOL||fails((function(){var symbol=$Symbol();return"[null]"!=$stringify([symbol])||"{}"!=$stringify({a:symbol})||"{}"!=$stringify(Object(symbol))}))},{stringify:function stringify(it,replacer,space){for(var $replacer,args=[it],index=1;arguments.length>index;)args.push(arguments[index++]);if($replacer=replacer,(isObject(replacer)||void 0!==it)&&!isSymbol(it))return isArray(replacer)||(replacer=function(key,value){if("function"==typeof $replacer&&(value=$replacer.call(this,key,value)),!isSymbol(value))return value}),args[1]=replacer,$stringify.apply(null,args)}});$Symbol.prototype[TO_PRIMITIVE]||createNonEnumerableProperty($Symbol.prototype,TO_PRIMITIVE,$Symbol.prototype.valueOf),setToStringTag($Symbol,"Symbol"),hiddenKeys[HIDDEN]=!0},3198:function(module,exports){exports.f=Object.getOwnPropertySymbols},3199:function(module,exports,__webpack_require__){__webpack_require__(3097)("iterator")},3200:function(module,exports,__webpack_require__){var _Array$from=__webpack_require__(3201),_sliceInstanceProperty=__webpack_require__(3338),arrayLikeToArray=__webpack_require__(3207);module.exports=function _unsupportedIterableToArray(o,minLen){var _context;if(o){if("string"==typeof o)return arrayLikeToArray(o,minLen);var n=_sliceInstanceProperty(_context=Object.prototype.toString.call(o)).call(_context,8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?_Array$from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?arrayLikeToArray(o,minLen):void 0}}},3201:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3334)},3202:function(module,exports,__webpack_require__){__webpack_require__(3116),__webpack_require__(3335);var path=__webpack_require__(3093);module.exports=path.Array.from},3203:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099);module.exports=function(iterator){var returnMethod=iterator.return;if(void 0!==returnMethod)return anObject(returnMethod.call(iterator)).value}},3204:function(module,exports,__webpack_require__){var wellKnownSymbol=__webpack_require__(3096),Iterators=__webpack_require__(3115),ITERATOR=wellKnownSymbol("iterator"),ArrayPrototype=Array.prototype;module.exports=function(it){return void 0!==it&&(Iterators.Array===it||ArrayPrototype[ITERATOR]===it)}},3205:function(module,exports,__webpack_require__){var ITERATOR=__webpack_require__(3096)("iterator"),SAFE_CLOSING=!1;try{var called=0,iteratorWithReturn={next:function(){return{done:!!called++}},return:function(){SAFE_CLOSING=!0}};iteratorWithReturn[ITERATOR]=function(){return this},Array.from(iteratorWithReturn,(function(){throw 2}))}catch(error){}module.exports=function(exec,SKIP_CLOSING){if(!SKIP_CLOSING&&!SAFE_CLOSING)return!1;var ITERATION_SUPPORT=!1;try{var object={};object[ITERATOR]=function(){return{next:function(){return{done:ITERATION_SUPPORT=!0}}}},exec(object)}catch(error){}return ITERATION_SUPPORT}},3206:function(module,exports,__webpack_require__){var slice=__webpack_require__(3340),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.slice;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.slice?slice:own}},3207:function(module,exports){module.exports=function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}},3208:function(module,exports,__webpack_require__){__webpack_require__(3345);var Object=__webpack_require__(3093).Object,defineProperty=module.exports=function defineProperty(it,key,desc){return Object.defineProperty(it,key,desc)};Object.defineProperty.sham&&(defineProperty.sham=!0)},3209:function(module,exports,__webpack_require__){__webpack_require__(3363);var Object=__webpack_require__(3093).Object,getOwnPropertyDescriptor=module.exports=function getOwnPropertyDescriptor(it,key){return Object.getOwnPropertyDescriptor(it,key)};Object.getOwnPropertyDescriptor.sham&&(getOwnPropertyDescriptor.sham=!0)},3210:function(module,exports,__webpack_require__){__webpack_require__(3211),__webpack_require__(3162),__webpack_require__(3380),__webpack_require__(3219),__webpack_require__(3220),__webpack_require__(3383),__webpack_require__(3116),__webpack_require__(3112);var path=__webpack_require__(3093);module.exports=path.Promise},3211:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),getPrototypeOf=__webpack_require__(3122),setPrototypeOf=__webpack_require__(3160),create=__webpack_require__(3123),createNonEnumerableProperty=__webpack_require__(3103),createPropertyDescriptor=__webpack_require__(3117),iterate=__webpack_require__(3126),$AggregateError=function AggregateError(errors,message){var that=this;if(!(that instanceof $AggregateError))return new $AggregateError(errors,message);setPrototypeOf&&(that=setPrototypeOf(new Error(void 0),getPrototypeOf(that))),void 0!==message&&createNonEnumerableProperty(that,"message",String(message));var errorsArray=[];return iterate(errors,errorsArray.push,{that:errorsArray}),createNonEnumerableProperty(that,"errors",errorsArray),that};$AggregateError.prototype=create(Error.prototype,{constructor:createPropertyDescriptor(5,$AggregateError),message:createPropertyDescriptor(5,""),name:createPropertyDescriptor(5,"AggregateError")}),$({global:!0},{AggregateError:$AggregateError})},3212:function(module,exports,__webpack_require__){var global=__webpack_require__(3094);module.exports=global.Promise},3213:function(module,exports,__webpack_require__){var redefine=__webpack_require__(3130);module.exports=function(target,src,options){for(var key in src)options&&options.unsafe&&target[key]?target[key]=src[key]:redefine(target,key,src[key],options);return target}},3214:function(module,exports,__webpack_require__){"use strict";var getBuiltIn=__webpack_require__(3106),definePropertyModule=__webpack_require__(3104),wellKnownSymbol=__webpack_require__(3096),DESCRIPTORS=__webpack_require__(3101),SPECIES=wellKnownSymbol("species");module.exports=function(CONSTRUCTOR_NAME){var Constructor=getBuiltIn(CONSTRUCTOR_NAME),defineProperty=definePropertyModule.f;DESCRIPTORS&&Constructor&&!Constructor[SPECIES]&&defineProperty(Constructor,SPECIES,{configurable:!0,get:function(){return this}})}},3215:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099),aFunction=__webpack_require__(3105),SPECIES=__webpack_require__(3096)("species");module.exports=function(O,defaultConstructor){var S,C=anObject(O).constructor;return void 0===C||null==(S=anObject(C)[SPECIES])?defaultConstructor:aFunction(S)}},3216:function(module,exports,__webpack_require__){var defer,channel,port,global=__webpack_require__(3094),fails=__webpack_require__(3095),bind=__webpack_require__(3119),html=__webpack_require__(3193),createElement=__webpack_require__(3146),IS_IOS=__webpack_require__(3217),IS_NODE=__webpack_require__(3141),location=global.location,set=global.setImmediate,clear=global.clearImmediate,process=global.process,MessageChannel=global.MessageChannel,Dispatch=global.Dispatch,counter=0,queue={},run=function(id){if(queue.hasOwnProperty(id)){var fn=queue[id];delete queue[id],fn()}},runner=function(id){return function(){run(id)}},listener=function(event){run(event.data)},post=function(id){global.postMessage(id+"",location.protocol+"//"+location.host)};set&&clear||(set=function setImmediate(fn){for(var args=[],i=1;arguments.length>i;)args.push(arguments[i++]);return queue[++counter]=function(){("function"==typeof fn?fn:Function(fn)).apply(void 0,args)},defer(counter),counter},clear=function clearImmediate(id){delete queue[id]},IS_NODE?defer=function(id){process.nextTick(runner(id))}:Dispatch&&Dispatch.now?defer=function(id){Dispatch.now(runner(id))}:MessageChannel&&!IS_IOS?(port=(channel=new MessageChannel).port2,channel.port1.onmessage=listener,defer=bind(port.postMessage,port,1)):global.addEventListener&&"function"==typeof postMessage&&!global.importScripts&&location&&"file:"!==location.protocol&&!fails(post)?(defer=post,global.addEventListener("message",listener,!1)):defer="onreadystatechange"in createElement("script")?function(id){html.appendChild(createElement("script")).onreadystatechange=function(){html.removeChild(this),run(id)}}:function(id){setTimeout(runner(id),0)}),module.exports={set:set,clear:clear}},3217:function(module,exports,__webpack_require__){var userAgent=__webpack_require__(3184);module.exports=/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)},3218:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099),isObject=__webpack_require__(3098),newPromiseCapability=__webpack_require__(3132);module.exports=function(C,x){if(anObject(C),isObject(x)&&x.constructor===C)return x;var promiseCapability=newPromiseCapability.f(C);return(0,promiseCapability.resolve)(x),promiseCapability.promise}},3219:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),aFunction=__webpack_require__(3105),newPromiseCapabilityModule=__webpack_require__(3132),perform=__webpack_require__(3142),iterate=__webpack_require__(3126);$({target:"Promise",stat:!0},{allSettled:function allSettled(iterable){var C=this,capability=newPromiseCapabilityModule.f(C),resolve=capability.resolve,reject=capability.reject,result=perform((function(){var promiseResolve=aFunction(C.resolve),values=[],counter=0,remaining=1;iterate(iterable,(function(promise){var index=counter++,alreadyCalled=!1;values.push(void 0),remaining++,promiseResolve.call(C,promise).then((function(value){alreadyCalled||(alreadyCalled=!0,values[index]={status:"fulfilled",value:value},--remaining||resolve(values))}),(function(error){alreadyCalled||(alreadyCalled=!0,values[index]={status:"rejected",reason:error},--remaining||resolve(values))}))})),--remaining||resolve(values)}));return result.error&&reject(result.value),capability.promise}})},3220:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),aFunction=__webpack_require__(3105),getBuiltIn=__webpack_require__(3106),newPromiseCapabilityModule=__webpack_require__(3132),perform=__webpack_require__(3142),iterate=__webpack_require__(3126);$({target:"Promise",stat:!0},{any:function any(iterable){var C=this,capability=newPromiseCapabilityModule.f(C),resolve=capability.resolve,reject=capability.reject,result=perform((function(){var promiseResolve=aFunction(C.resolve),errors=[],counter=0,remaining=1,alreadyResolved=!1;iterate(iterable,(function(promise){var index=counter++,alreadyRejected=!1;errors.push(void 0),remaining++,promiseResolve.call(C,promise).then((function(value){alreadyRejected||alreadyResolved||(alreadyResolved=!0,resolve(value))}),(function(error){alreadyRejected||alreadyResolved||(alreadyRejected=!0,errors[index]=error,--remaining||reject(new(getBuiltIn("AggregateError"))(errors,"No one promise resolved")))}))})),--remaining||reject(new(getBuiltIn("AggregateError"))(errors,"No one promise resolved"))}));return result.error&&reject(result.value),capability.promise}})},3221:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3389)},3222:function(module,exports,__webpack_require__){"use strict";var aFunction=__webpack_require__(3105),isObject=__webpack_require__(3098),slice=[].slice,factories={},construct=function(C,argsLength,args){if(!(argsLength in factories)){for(var list=[],i=0;i<argsLength;i++)list[i]="a["+i+"]";factories[argsLength]=Function("C,a","return new C("+list.join(",")+")")}return factories[argsLength](C,args)};module.exports=Function.bind||function bind(that){var fn=aFunction(this),partArgs=slice.call(arguments,1),boundFunction=function bound(){var args=partArgs.concat(slice.call(arguments));return this instanceof boundFunction?construct(fn,args.length,args):fn.apply(that,args)};return isObject(fn.prototype)&&(boundFunction.prototype=fn.prototype),boundFunction}},3223:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3437)},3224:function(module,exports){module.exports=function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}},3225:function(module,exports,__webpack_require__){var _Object$getPrototypeOf=__webpack_require__(3445),_Object$setPrototypeOf=__webpack_require__(3223);function _getPrototypeOf(o){return module.exports=_getPrototypeOf=_Object$setPrototypeOf?_Object$getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||_Object$getPrototypeOf(o)},_getPrototypeOf(o)}module.exports=_getPrototypeOf},3226:function(module,exports,__webpack_require__){var hiddenKeys=__webpack_require__(3129),isObject=__webpack_require__(3098),has=__webpack_require__(3102),defineProperty=__webpack_require__(3104).f,uid=__webpack_require__(3134),FREEZING=__webpack_require__(3518),METADATA=uid("meta"),id=0,isExtensible=Object.isExtensible||function(){return!0},setMetadata=function(it){defineProperty(it,METADATA,{value:{objectID:"O"+ ++id,weakData:{}}})},meta=module.exports={REQUIRED:!1,fastKey:function(it,create){if(!isObject(it))return"symbol"==typeof it?it:("string"==typeof it?"S":"P")+it;if(!has(it,METADATA)){if(!isExtensible(it))return"F";if(!create)return"E";setMetadata(it)}return it[METADATA].objectID},getWeakData:function(it,create){if(!has(it,METADATA)){if(!isExtensible(it))return!0;if(!create)return!1;setMetadata(it)}return it[METADATA].weakData},onFreeze:function(it){return FREEZING&&meta.REQUIRED&&isExtensible(it)&&!has(it,METADATA)&&setMetadata(it),it}};hiddenKeys[METADATA]=!0},3279:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3280)},3280:function(module,exports,__webpack_require__){var parent=__webpack_require__(3281);module.exports=parent},3281:function(module,exports,__webpack_require__){var startsWith=__webpack_require__(3282),StringPrototype=String.prototype;module.exports=function(it){var own=it.startsWith;return"string"==typeof it||it===StringPrototype||it instanceof String&&own===StringPrototype.startsWith?startsWith:own}},3282:function(module,exports,__webpack_require__){__webpack_require__(3283);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("String").startsWith},3283:function(module,exports,__webpack_require__){"use strict";var descriptor,$=__webpack_require__(3092),getOwnPropertyDescriptor=__webpack_require__(3111).f,toLength=__webpack_require__(3108),notARegExp=__webpack_require__(3180),requireObjectCoercible=__webpack_require__(3118),correctIsRegExpLogic=__webpack_require__(3182),IS_PURE=__webpack_require__(3113),nativeStartsWith="".startsWith,min=Math.min,CORRECT_IS_REGEXP_LOGIC=correctIsRegExpLogic("startsWith");$({target:"String",proto:!0,forced:!!(IS_PURE||CORRECT_IS_REGEXP_LOGIC||(descriptor=getOwnPropertyDescriptor(String.prototype,"startsWith"),!descriptor||descriptor.writable))&&!CORRECT_IS_REGEXP_LOGIC},{startsWith:function startsWith(searchString){var that=String(requireObjectCoercible(this));notARegExp(searchString);var index=toLength(min(arguments.length>1?arguments[1]:void 0,that.length)),search=String(searchString);return nativeStartsWith?nativeStartsWith.call(that,search,index):that.slice(index,index+search.length)===search}})},3284:function(module,exports,__webpack_require__){var isObject=__webpack_require__(3098),classof=__webpack_require__(3128),MATCH=__webpack_require__(3096)("match");module.exports=function(it){var isRegExp;return isObject(it)&&(void 0!==(isRegExp=it[MATCH])?!!isRegExp:"RegExp"==classof(it))}},3285:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),createNonEnumerableProperty=__webpack_require__(3103);module.exports=function(key,value){try{createNonEnumerableProperty(global,key,value)}catch(error){global[key]=value}return value}},3286:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3287)},3287:function(module,exports,__webpack_require__){var parent=__webpack_require__(3288);module.exports=parent},3288:function(module,exports,__webpack_require__){__webpack_require__(3289);var path=__webpack_require__(3093);module.exports=path.parseFloat},3289:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),parseFloatImplementation=__webpack_require__(3290);$({global:!0,forced:parseFloat!=parseFloatImplementation},{parseFloat:parseFloatImplementation})},3290:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),trim=__webpack_require__(3151).trim,whitespaces=__webpack_require__(3135),$parseFloat=global.parseFloat,FORCED=1/$parseFloat(whitespaces+"-0")!=-1/0;module.exports=FORCED?function parseFloat(string){var trimmedString=trim(String(string)),result=$parseFloat(trimmedString);return 0===result&&"-"==trimmedString.charAt(0)?-0:result}:$parseFloat},3291:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3292)},3292:function(module,exports,__webpack_require__){var parent=__webpack_require__(3293);module.exports=parent},3293:function(module,exports,__webpack_require__){var map=__webpack_require__(3294),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.map;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.map?map:own}},3294:function(module,exports,__webpack_require__){__webpack_require__(3295);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").map},3295:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$map=__webpack_require__(3114).map,arrayMethodHasSpeciesSupport=__webpack_require__(3136),arrayMethodUsesToLength=__webpack_require__(3110),HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("map"),USES_TO_LENGTH=arrayMethodUsesToLength("map");$({target:"Array",proto:!0,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{map:function map(callbackfn){return $map(this,callbackfn,arguments.length>1?arguments[1]:void 0)}})},3296:function(module,exports,__webpack_require__){var arrayWithHoles=__webpack_require__(3297),iterableToArrayLimit=__webpack_require__(3300),unsupportedIterableToArray=__webpack_require__(3200),nonIterableRest=__webpack_require__(3342);module.exports=function _slicedToArray(arr,i){return arrayWithHoles(arr)||iterableToArrayLimit(arr,i)||unsupportedIterableToArray(arr,i)||nonIterableRest()}},3297:function(module,exports,__webpack_require__){var _Array$isArray=__webpack_require__(3185);module.exports=function _arrayWithHoles(arr){if(_Array$isArray(arr))return arr}},3298:function(module,exports,__webpack_require__){var parent=__webpack_require__(3186);module.exports=parent},3299:function(module,exports,__webpack_require__){__webpack_require__(3092)({target:"Array",stat:!0},{isArray:__webpack_require__(3120)})},3300:function(module,exports,__webpack_require__){var _getIterator=__webpack_require__(3187),_isIterable=__webpack_require__(3194),_Symbol=__webpack_require__(3161);module.exports=function _iterableToArrayLimit(arr,i){if(void 0!==_Symbol&&_isIterable(Object(arr))){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=_getIterator(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}},3301:function(module,exports,__webpack_require__){__webpack_require__(3112),__webpack_require__(3116);var getIterator=__webpack_require__(3308);module.exports=getIterator},3302:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),inspectSource=__webpack_require__(3189),WeakMap=global.WeakMap;module.exports="function"==typeof WeakMap&&/native code/.test(inspectSource(WeakMap))},3303:function(module,exports,__webpack_require__){"use strict";var IteratorPrototype=__webpack_require__(3190).IteratorPrototype,create=__webpack_require__(3123),createPropertyDescriptor=__webpack_require__(3117),setToStringTag=__webpack_require__(3124),Iterators=__webpack_require__(3115),returnThis=function(){return this};module.exports=function(IteratorConstructor,NAME,next){var TO_STRING_TAG=NAME+" Iterator";return IteratorConstructor.prototype=create(IteratorPrototype,{next:createPropertyDescriptor(1,next)}),setToStringTag(IteratorConstructor,TO_STRING_TAG,!1,!0),Iterators[TO_STRING_TAG]=returnThis,IteratorConstructor}},3304:function(module,exports,__webpack_require__){"use strict";var TO_STRING_TAG_SUPPORT=__webpack_require__(3159),classof=__webpack_require__(3125);module.exports=TO_STRING_TAG_SUPPORT?{}.toString:function toString(){return"[object "+classof(this)+"]"}},3305:function(module,exports,__webpack_require__){var isObject=__webpack_require__(3098);module.exports=function(it){if(!isObject(it)&&null!==it)throw TypeError("Can't set "+String(it)+" as a prototype");return it}},3306:function(module,exports){module.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},3307:function(module,exports,__webpack_require__){var toInteger=__webpack_require__(3147),requireObjectCoercible=__webpack_require__(3118),createMethod=function(CONVERT_TO_STRING){return function($this,pos){var first,second,S=String(requireObjectCoercible($this)),position=toInteger(pos),size=S.length;return position<0||position>=size?CONVERT_TO_STRING?"":void 0:(first=S.charCodeAt(position))<55296||first>56319||position+1===size||(second=S.charCodeAt(position+1))<56320||second>57343?CONVERT_TO_STRING?S.charAt(position):first:CONVERT_TO_STRING?S.slice(position,position+2):second-56320+(first-55296<<10)+65536}};module.exports={codeAt:createMethod(!1),charAt:createMethod(!0)}},3308:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099),getIteratorMethod=__webpack_require__(3139);module.exports=function(it){var iteratorMethod=getIteratorMethod(it);if("function"!=typeof iteratorMethod)throw TypeError(String(it)+" is not iterable");return anObject(iteratorMethod.call(it))}},3309:function(module,exports,__webpack_require__){__webpack_require__(3112),__webpack_require__(3116);var isIterable=__webpack_require__(3310);module.exports=isIterable},3310:function(module,exports,__webpack_require__){var classof=__webpack_require__(3125),wellKnownSymbol=__webpack_require__(3096),Iterators=__webpack_require__(3115),ITERATOR=wellKnownSymbol("iterator");module.exports=function(it){var O=Object(it);return void 0!==O[ITERATOR]||"@@iterator"in O||Iterators.hasOwnProperty(classof(O))}},3311:function(module,exports,__webpack_require__){var parent=__webpack_require__(3195);__webpack_require__(3329),__webpack_require__(3330),__webpack_require__(3331),__webpack_require__(3332),__webpack_require__(3333),module.exports=parent},3312:function(module,exports,__webpack_require__){var toIndexedObject=__webpack_require__(3107),nativeGetOwnPropertyNames=__webpack_require__(3163).f,toString={}.toString,windowNames="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];module.exports.f=function getOwnPropertyNames(it){return windowNames&&"[object Window]"==toString.call(it)?function(it){try{return nativeGetOwnPropertyNames(it)}catch(error){return windowNames.slice()}}(it):nativeGetOwnPropertyNames(toIndexedObject(it))}},3313:function(module,exports,__webpack_require__){__webpack_require__(3097)("asyncIterator")},3314:function(module,exports){},3315:function(module,exports,__webpack_require__){__webpack_require__(3097)("hasInstance")},3316:function(module,exports,__webpack_require__){__webpack_require__(3097)("isConcatSpreadable")},3317:function(module,exports,__webpack_require__){__webpack_require__(3097)("match")},3318:function(module,exports,__webpack_require__){__webpack_require__(3097)("matchAll")},3319:function(module,exports,__webpack_require__){__webpack_require__(3097)("replace")},3320:function(module,exports,__webpack_require__){__webpack_require__(3097)("search")},3321:function(module,exports,__webpack_require__){__webpack_require__(3097)("species")},3322:function(module,exports,__webpack_require__){__webpack_require__(3097)("split")},3323:function(module,exports,__webpack_require__){__webpack_require__(3097)("toPrimitive")},3324:function(module,exports,__webpack_require__){__webpack_require__(3097)("toStringTag")},3325:function(module,exports,__webpack_require__){__webpack_require__(3097)("unscopables")},3326:function(module,exports,__webpack_require__){var global=__webpack_require__(3094);__webpack_require__(3124)(global.JSON,"JSON",!0)},3327:function(module,exports){},3328:function(module,exports){},3329:function(module,exports,__webpack_require__){__webpack_require__(3097)("asyncDispose")},3330:function(module,exports,__webpack_require__){__webpack_require__(3097)("dispose")},3331:function(module,exports,__webpack_require__){__webpack_require__(3097)("observable")},3332:function(module,exports,__webpack_require__){__webpack_require__(3097)("patternMatch")},3333:function(module,exports,__webpack_require__){__webpack_require__(3097)("replaceAll")},3334:function(module,exports,__webpack_require__){var parent=__webpack_require__(3202);module.exports=parent},3335:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),from=__webpack_require__(3336);$({target:"Array",stat:!0,forced:!__webpack_require__(3205)((function(iterable){Array.from(iterable)}))},{from:from})},3336:function(module,exports,__webpack_require__){"use strict";var bind=__webpack_require__(3119),toObject=__webpack_require__(3109),callWithSafeIterationClosing=__webpack_require__(3337),isArrayIteratorMethod=__webpack_require__(3204),toLength=__webpack_require__(3108),createProperty=__webpack_require__(3140),getIteratorMethod=__webpack_require__(3139);module.exports=function from(arrayLike){var length,result,step,iterator,next,value,O=toObject(arrayLike),C="function"==typeof this?this:Array,argumentsLength=arguments.length,mapfn=argumentsLength>1?arguments[1]:void 0,mapping=void 0!==mapfn,iteratorMethod=getIteratorMethod(O),index=0;if(mapping&&(mapfn=bind(mapfn,argumentsLength>2?arguments[2]:void 0,2)),null==iteratorMethod||C==Array&&isArrayIteratorMethod(iteratorMethod))for(result=new C(length=toLength(O.length));length>index;index++)value=mapping?mapfn(O[index],index):O[index],createProperty(result,index,value);else for(next=(iterator=iteratorMethod.call(O)).next,result=new C;!(step=next.call(iterator)).done;index++)value=mapping?callWithSafeIterationClosing(iterator,mapfn,[step.value,index],!0):step.value,createProperty(result,index,value);return result.length=index,result}},3337:function(module,exports,__webpack_require__){var anObject=__webpack_require__(3099),iteratorClose=__webpack_require__(3203);module.exports=function(iterator,fn,value,ENTRIES){try{return ENTRIES?fn(anObject(value)[0],value[1]):fn(value)}catch(error){throw iteratorClose(iterator),error}}},3338:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3339)},3339:function(module,exports,__webpack_require__){var parent=__webpack_require__(3206);module.exports=parent},3340:function(module,exports,__webpack_require__){__webpack_require__(3341);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").slice},3341:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),isObject=__webpack_require__(3098),isArray=__webpack_require__(3120),toAbsoluteIndex=__webpack_require__(3157),toLength=__webpack_require__(3108),toIndexedObject=__webpack_require__(3107),createProperty=__webpack_require__(3140),wellKnownSymbol=__webpack_require__(3096),arrayMethodHasSpeciesSupport=__webpack_require__(3136),arrayMethodUsesToLength=__webpack_require__(3110),HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("slice"),USES_TO_LENGTH=arrayMethodUsesToLength("slice",{ACCESSORS:!0,0:0,1:2}),SPECIES=wellKnownSymbol("species"),nativeSlice=[].slice,max=Math.max;$({target:"Array",proto:!0,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{slice:function slice(start,end){var Constructor,result,n,O=toIndexedObject(this),length=toLength(O.length),k=toAbsoluteIndex(start,length),fin=toAbsoluteIndex(void 0===end?length:end,length);if(isArray(O)&&("function"!=typeof(Constructor=O.constructor)||Constructor!==Array&&!isArray(Constructor.prototype)?isObject(Constructor)&&null===(Constructor=Constructor[SPECIES])&&(Constructor=void 0):Constructor=void 0,Constructor===Array||void 0===Constructor))return nativeSlice.call(O,k,fin);for(result=new(void 0===Constructor?Array:Constructor)(max(fin-k,0)),n=0;k<fin;k++,n++)k in O&&createProperty(result,n,O[k]);return result.length=n,result}})},3342:function(module,exports){module.exports=function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},3343:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3344)},3344:function(module,exports,__webpack_require__){var parent=__webpack_require__(3208);module.exports=parent},3345:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),DESCRIPTORS=__webpack_require__(3101);$({target:"Object",stat:!0,forced:!DESCRIPTORS,sham:!DESCRIPTORS},{defineProperty:__webpack_require__(3104).f})},3346:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3347)},3347:function(module,exports,__webpack_require__){var parent=__webpack_require__(3348);module.exports=parent},3348:function(module,exports,__webpack_require__){__webpack_require__(3349);var Object=__webpack_require__(3093).Object,defineProperties=module.exports=function defineProperties(T,D){return Object.defineProperties(T,D)};Object.defineProperties.sham&&(defineProperties.sham=!0)},3349:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),DESCRIPTORS=__webpack_require__(3101);$({target:"Object",stat:!0,forced:!DESCRIPTORS,sham:!DESCRIPTORS},{defineProperties:__webpack_require__(3191)})},3350:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3351)},3351:function(module,exports,__webpack_require__){var parent=__webpack_require__(3352);module.exports=parent},3352:function(module,exports,__webpack_require__){__webpack_require__(3353);var path=__webpack_require__(3093);module.exports=path.Object.getOwnPropertyDescriptors},3353:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),DESCRIPTORS=__webpack_require__(3101),ownKeys=__webpack_require__(3354),toIndexedObject=__webpack_require__(3107),getOwnPropertyDescriptorModule=__webpack_require__(3111),createProperty=__webpack_require__(3140);$({target:"Object",stat:!0,sham:!DESCRIPTORS},{getOwnPropertyDescriptors:function getOwnPropertyDescriptors(object){for(var key,descriptor,O=toIndexedObject(object),getOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f,keys=ownKeys(O),result={},index=0;keys.length>index;)void 0!==(descriptor=getOwnPropertyDescriptor(O,key=keys[index++]))&&createProperty(result,key,descriptor);return result}})},3354:function(module,exports,__webpack_require__){var getBuiltIn=__webpack_require__(3106),getOwnPropertyNamesModule=__webpack_require__(3163),getOwnPropertySymbolsModule=__webpack_require__(3198),anObject=__webpack_require__(3099);module.exports=getBuiltIn("Reflect","ownKeys")||function ownKeys(it){var keys=getOwnPropertyNamesModule.f(anObject(it)),getOwnPropertySymbols=getOwnPropertySymbolsModule.f;return getOwnPropertySymbols?keys.concat(getOwnPropertySymbols(it)):keys}},3355:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3356)},3356:function(module,exports,__webpack_require__){__webpack_require__(3112);var forEach=__webpack_require__(3357),classof=__webpack_require__(3125),ArrayPrototype=Array.prototype,DOMIterables={DOMTokenList:!0,NodeList:!0};module.exports=function(it){var own=it.forEach;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.forEach||DOMIterables.hasOwnProperty(classof(it))?forEach:own}},3357:function(module,exports,__webpack_require__){var parent=__webpack_require__(3358);module.exports=parent},3358:function(module,exports,__webpack_require__){__webpack_require__(3359);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").forEach},3359:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),forEach=__webpack_require__(3360);$({target:"Array",proto:!0,forced:[].forEach!=forEach},{forEach:forEach})},3360:function(module,exports,__webpack_require__){"use strict";var $forEach=__webpack_require__(3114).forEach,arrayMethodIsStrict=__webpack_require__(3131),arrayMethodUsesToLength=__webpack_require__(3110),STRICT_METHOD=arrayMethodIsStrict("forEach"),USES_TO_LENGTH=arrayMethodUsesToLength("forEach");module.exports=STRICT_METHOD&&USES_TO_LENGTH?[].forEach:function forEach(callbackfn){return $forEach(this,callbackfn,arguments.length>1?arguments[1]:void 0)}},3361:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3362)},3362:function(module,exports,__webpack_require__){var parent=__webpack_require__(3209);module.exports=parent},3363:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),fails=__webpack_require__(3095),toIndexedObject=__webpack_require__(3107),nativeGetOwnPropertyDescriptor=__webpack_require__(3111).f,DESCRIPTORS=__webpack_require__(3101),FAILS_ON_PRIMITIVES=fails((function(){nativeGetOwnPropertyDescriptor(1)}));$({target:"Object",stat:!0,forced:!DESCRIPTORS||FAILS_ON_PRIMITIVES,sham:!DESCRIPTORS},{getOwnPropertyDescriptor:function getOwnPropertyDescriptor(it,key){return nativeGetOwnPropertyDescriptor(toIndexedObject(it),key)}})},3364:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3365)},3365:function(module,exports,__webpack_require__){var parent=__webpack_require__(3366);module.exports=parent},3366:function(module,exports,__webpack_require__){var filter=__webpack_require__(3367),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.filter;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.filter?filter:own}},3367:function(module,exports,__webpack_require__){__webpack_require__(3368);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").filter},3368:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$filter=__webpack_require__(3114).filter,arrayMethodHasSpeciesSupport=__webpack_require__(3136),arrayMethodUsesToLength=__webpack_require__(3110),HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("filter"),USES_TO_LENGTH=arrayMethodUsesToLength("filter");$({target:"Array",proto:!0,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{filter:function filter(callbackfn){return $filter(this,callbackfn,arguments.length>1?arguments[1]:void 0)}})},3369:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3370)},3370:function(module,exports,__webpack_require__){var parent=__webpack_require__(3371);module.exports=parent},3371:function(module,exports,__webpack_require__){__webpack_require__(3197);var path=__webpack_require__(3093);module.exports=path.Object.getOwnPropertySymbols},3372:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3373)},3373:function(module,exports,__webpack_require__){var parent=__webpack_require__(3374);module.exports=parent},3374:function(module,exports,__webpack_require__){__webpack_require__(3375);var path=__webpack_require__(3093);module.exports=path.Object.keys},3375:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),toObject=__webpack_require__(3109),nativeKeys=__webpack_require__(3155);$({target:"Object",stat:!0,forced:__webpack_require__(3095)((function(){nativeKeys(1)}))},{keys:function keys(it){return nativeKeys(toObject(it))}})},3376:function(module,exports,__webpack_require__){module.exports=__webpack_require__(691)},3377:function(module,exports,__webpack_require__){var _Promise=__webpack_require__(3378);function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):_Promise.resolve(value).then(_next,_throw)}module.exports=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new _Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}},3378:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3379)},3379:function(module,exports,__webpack_require__){var parent=__webpack_require__(3210);__webpack_require__(3384),__webpack_require__(3385),__webpack_require__(3386),__webpack_require__(3387),module.exports=parent},3380:function(module,exports,__webpack_require__){"use strict";var Internal,OwnPromiseCapability,PromiseWrapper,nativeThen,$=__webpack_require__(3092),IS_PURE=__webpack_require__(3113),global=__webpack_require__(3094),getBuiltIn=__webpack_require__(3106),NativePromise=__webpack_require__(3212),redefine=__webpack_require__(3130),redefineAll=__webpack_require__(3213),setToStringTag=__webpack_require__(3124),setSpecies=__webpack_require__(3214),isObject=__webpack_require__(3098),aFunction=__webpack_require__(3105),anInstance=__webpack_require__(3165),inspectSource=__webpack_require__(3189),iterate=__webpack_require__(3126),checkCorrectnessOfIteration=__webpack_require__(3205),speciesConstructor=__webpack_require__(3215),task=__webpack_require__(3216).set,microtask=__webpack_require__(3381),promiseResolve=__webpack_require__(3218),hostReportErrors=__webpack_require__(3382),newPromiseCapabilityModule=__webpack_require__(3132),perform=__webpack_require__(3142),InternalStateModule=__webpack_require__(3121),isForced=__webpack_require__(3179),wellKnownSymbol=__webpack_require__(3096),IS_NODE=__webpack_require__(3141),V8_VERSION=__webpack_require__(3137),SPECIES=wellKnownSymbol("species"),PROMISE="Promise",getInternalState=InternalStateModule.get,setInternalState=InternalStateModule.set,getInternalPromiseState=InternalStateModule.getterFor(PROMISE),PromiseConstructor=NativePromise,TypeError=global.TypeError,document=global.document,process=global.process,$fetch=getBuiltIn("fetch"),newPromiseCapability=newPromiseCapabilityModule.f,newGenericPromiseCapability=newPromiseCapability,DISPATCH_EVENT=!!(document&&document.createEvent&&global.dispatchEvent),NATIVE_REJECTION_EVENT="function"==typeof PromiseRejectionEvent,FORCED=isForced(PROMISE,(function(){if(!(inspectSource(PromiseConstructor)!==String(PromiseConstructor))){if(66===V8_VERSION)return!0;if(!IS_NODE&&!NATIVE_REJECTION_EVENT)return!0}if(IS_PURE&&!PromiseConstructor.prototype.finally)return!0;if(V8_VERSION>=51&&/native code/.test(PromiseConstructor))return!1;var promise=PromiseConstructor.resolve(1),FakePromise=function(exec){exec((function(){}),(function(){}))};return(promise.constructor={})[SPECIES]=FakePromise,!(promise.then((function(){}))instanceof FakePromise)})),INCORRECT_ITERATION=FORCED||!checkCorrectnessOfIteration((function(iterable){PromiseConstructor.all(iterable).catch((function(){}))})),isThenable=function(it){var then;return!(!isObject(it)||"function"!=typeof(then=it.then))&&then},notify=function(state,isReject){if(!state.notified){state.notified=!0;var chain=state.reactions;microtask((function(){for(var value=state.value,ok=1==state.state,index=0;chain.length>index;){var result,then,exited,reaction=chain[index++],handler=ok?reaction.ok:reaction.fail,resolve=reaction.resolve,reject=reaction.reject,domain=reaction.domain;try{handler?(ok||(2===state.rejection&&onHandleUnhandled(state),state.rejection=1),!0===handler?result=value:(domain&&domain.enter(),result=handler(value),domain&&(domain.exit(),exited=!0)),result===reaction.promise?reject(TypeError("Promise-chain cycle")):(then=isThenable(result))?then.call(result,resolve,reject):resolve(result)):reject(value)}catch(error){domain&&!exited&&domain.exit(),reject(error)}}state.reactions=[],state.notified=!1,isReject&&!state.rejection&&onUnhandled(state)}))}},dispatchEvent=function(name,promise,reason){var event,handler;DISPATCH_EVENT?((event=document.createEvent("Event")).promise=promise,event.reason=reason,event.initEvent(name,!1,!0),global.dispatchEvent(event)):event={promise:promise,reason:reason},!NATIVE_REJECTION_EVENT&&(handler=global["on"+name])?handler(event):"unhandledrejection"===name&&hostReportErrors("Unhandled promise rejection",reason)},onUnhandled=function(state){task.call(global,(function(){var result,promise=state.facade,value=state.value;if(isUnhandled(state)&&(result=perform((function(){IS_NODE?process.emit("unhandledRejection",value,promise):dispatchEvent("unhandledrejection",promise,value)})),state.rejection=IS_NODE||isUnhandled(state)?2:1,result.error))throw result.value}))},isUnhandled=function(state){return 1!==state.rejection&&!state.parent},onHandleUnhandled=function(state){task.call(global,(function(){var promise=state.facade;IS_NODE?process.emit("rejectionHandled",promise):dispatchEvent("rejectionhandled",promise,state.value)}))},bind=function(fn,state,unwrap){return function(value){fn(state,value,unwrap)}},internalReject=function(state,value,unwrap){state.done||(state.done=!0,unwrap&&(state=unwrap),state.value=value,state.state=2,notify(state,!0))},internalResolve=function(state,value,unwrap){if(!state.done){state.done=!0,unwrap&&(state=unwrap);try{if(state.facade===value)throw TypeError("Promise can't be resolved itself");var then=isThenable(value);then?microtask((function(){var wrapper={done:!1};try{then.call(value,bind(internalResolve,wrapper,state),bind(internalReject,wrapper,state))}catch(error){internalReject(wrapper,error,state)}})):(state.value=value,state.state=1,notify(state,!1))}catch(error){internalReject({done:!1},error,state)}}};FORCED&&(PromiseConstructor=function Promise(executor){anInstance(this,PromiseConstructor,PROMISE),aFunction(executor),Internal.call(this);var state=getInternalState(this);try{executor(bind(internalResolve,state),bind(internalReject,state))}catch(error){internalReject(state,error)}},(Internal=function Promise(executor){setInternalState(this,{type:PROMISE,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=redefineAll(PromiseConstructor.prototype,{then:function then(onFulfilled,onRejected){var state=getInternalPromiseState(this),reaction=newPromiseCapability(speciesConstructor(this,PromiseConstructor));return reaction.ok="function"!=typeof onFulfilled||onFulfilled,reaction.fail="function"==typeof onRejected&&onRejected,reaction.domain=IS_NODE?process.domain:void 0,state.parent=!0,state.reactions.push(reaction),0!=state.state&&notify(state,!1),reaction.promise},catch:function(onRejected){return this.then(void 0,onRejected)}}),OwnPromiseCapability=function(){var promise=new Internal,state=getInternalState(promise);this.promise=promise,this.resolve=bind(internalResolve,state),this.reject=bind(internalReject,state)},newPromiseCapabilityModule.f=newPromiseCapability=function(C){return C===PromiseConstructor||C===PromiseWrapper?new OwnPromiseCapability(C):newGenericPromiseCapability(C)},IS_PURE||"function"!=typeof NativePromise||(nativeThen=NativePromise.prototype.then,redefine(NativePromise.prototype,"then",(function then(onFulfilled,onRejected){var that=this;return new PromiseConstructor((function(resolve,reject){nativeThen.call(that,resolve,reject)})).then(onFulfilled,onRejected)}),{unsafe:!0}),"function"==typeof $fetch&&$({global:!0,enumerable:!0,forced:!0},{fetch:function fetch(input){return promiseResolve(PromiseConstructor,$fetch.apply(global,arguments))}}))),$({global:!0,wrap:!0,forced:FORCED},{Promise:PromiseConstructor}),setToStringTag(PromiseConstructor,PROMISE,!1,!0),setSpecies(PROMISE),PromiseWrapper=getBuiltIn(PROMISE),$({target:PROMISE,stat:!0,forced:FORCED},{reject:function reject(r){var capability=newPromiseCapability(this);return capability.reject.call(void 0,r),capability.promise}}),$({target:PROMISE,stat:!0,forced:IS_PURE||FORCED},{resolve:function resolve(x){return promiseResolve(IS_PURE&&this===PromiseWrapper?PromiseConstructor:this,x)}}),$({target:PROMISE,stat:!0,forced:INCORRECT_ITERATION},{all:function all(iterable){var C=this,capability=newPromiseCapability(C),resolve=capability.resolve,reject=capability.reject,result=perform((function(){var $promiseResolve=aFunction(C.resolve),values=[],counter=0,remaining=1;iterate(iterable,(function(promise){var index=counter++,alreadyCalled=!1;values.push(void 0),remaining++,$promiseResolve.call(C,promise).then((function(value){alreadyCalled||(alreadyCalled=!0,values[index]=value,--remaining||resolve(values))}),reject)})),--remaining||resolve(values)}));return result.error&&reject(result.value),capability.promise},race:function race(iterable){var C=this,capability=newPromiseCapability(C),reject=capability.reject,result=perform((function(){var $promiseResolve=aFunction(C.resolve);iterate(iterable,(function(promise){$promiseResolve.call(C,promise).then(capability.resolve,reject)}))}));return result.error&&reject(result.value),capability.promise}})},3381:function(module,exports,__webpack_require__){var flush,head,last,notify,toggle,node,promise,then,global=__webpack_require__(3094),getOwnPropertyDescriptor=__webpack_require__(3111).f,macrotask=__webpack_require__(3216).set,IS_IOS=__webpack_require__(3217),IS_NODE=__webpack_require__(3141),MutationObserver=global.MutationObserver||global.WebKitMutationObserver,document=global.document,process=global.process,Promise=global.Promise,queueMicrotaskDescriptor=getOwnPropertyDescriptor(global,"queueMicrotask"),queueMicrotask=queueMicrotaskDescriptor&&queueMicrotaskDescriptor.value;queueMicrotask||(flush=function(){var parent,fn;for(IS_NODE&&(parent=process.domain)&&parent.exit();head;){fn=head.fn,head=head.next;try{fn()}catch(error){throw head?notify():last=void 0,error}}last=void 0,parent&&parent.enter()},!IS_IOS&&!IS_NODE&&MutationObserver&&document?(toggle=!0,node=document.createTextNode(""),new MutationObserver(flush).observe(node,{characterData:!0}),notify=function(){node.data=toggle=!toggle}):Promise&&Promise.resolve?(promise=Promise.resolve(void 0),then=promise.then,notify=function(){then.call(promise,flush)}):notify=IS_NODE?function(){process.nextTick(flush)}:function(){macrotask.call(global,flush)}),module.exports=queueMicrotask||function(fn){var task={fn:fn,next:void 0};last&&(last.next=task),head||(head=task,notify()),last=task}},3382:function(module,exports,__webpack_require__){var global=__webpack_require__(3094);module.exports=function(a,b){var console=global.console;console&&console.error&&(1===arguments.length?console.error(a):console.error(a,b))}},3383:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),IS_PURE=__webpack_require__(3113),NativePromise=__webpack_require__(3212),fails=__webpack_require__(3095),getBuiltIn=__webpack_require__(3106),speciesConstructor=__webpack_require__(3215),promiseResolve=__webpack_require__(3218),redefine=__webpack_require__(3130);$({target:"Promise",proto:!0,real:!0,forced:!!NativePromise&&fails((function(){NativePromise.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(onFinally){var C=speciesConstructor(this,getBuiltIn("Promise")),isFunction="function"==typeof onFinally;return this.then(isFunction?function(x){return promiseResolve(C,onFinally()).then((function(){return x}))}:onFinally,isFunction?function(e){return promiseResolve(C,onFinally()).then((function(){throw e}))}:onFinally)}}),IS_PURE||"function"!=typeof NativePromise||NativePromise.prototype.finally||redefine(NativePromise.prototype,"finally",getBuiltIn("Promise").prototype.finally)},3384:function(module,exports,__webpack_require__){__webpack_require__(3211)},3385:function(module,exports,__webpack_require__){__webpack_require__(3219)},3386:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),newPromiseCapabilityModule=__webpack_require__(3132),perform=__webpack_require__(3142);$({target:"Promise",stat:!0},{try:function(callbackfn){var promiseCapability=newPromiseCapabilityModule.f(this),result=perform(callbackfn);return(result.error?promiseCapability.reject:promiseCapability.resolve)(result.value),promiseCapability.promise}})},3387:function(module,exports,__webpack_require__){__webpack_require__(3220)},3388:function(module,exports,__webpack_require__){var _Object$defineProperty=__webpack_require__(3221);module.exports=function _defineProperty(obj,key,value){return key in obj?_Object$defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}},3389:function(module,exports,__webpack_require__){var parent=__webpack_require__(3208);module.exports=parent},3390:function(module,exports){module.exports=function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}},3391:function(module,exports,__webpack_require__){var _Object$defineProperty=__webpack_require__(3221);function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),_Object$defineProperty(target,descriptor.key,descriptor)}}module.exports=function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}},3392:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3393)},3393:function(module,exports,__webpack_require__){var parent=__webpack_require__(3394);module.exports=parent},3394:function(module,exports,__webpack_require__){var concat=__webpack_require__(3395),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.concat;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.concat?concat:own}},3395:function(module,exports,__webpack_require__){__webpack_require__(3196);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").concat},3396:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3397)},3397:function(module,exports,__webpack_require__){var parent=__webpack_require__(3398);module.exports=parent},3398:function(module,exports,__webpack_require__){var reduce=__webpack_require__(3399),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.reduce;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.reduce?reduce:own}},3399:function(module,exports,__webpack_require__){__webpack_require__(3400);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").reduce},3400:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$reduce=__webpack_require__(3401).left,arrayMethodIsStrict=__webpack_require__(3131),arrayMethodUsesToLength=__webpack_require__(3110),CHROME_VERSION=__webpack_require__(3137),IS_NODE=__webpack_require__(3141),STRICT_METHOD=arrayMethodIsStrict("reduce"),USES_TO_LENGTH=arrayMethodUsesToLength("reduce",{1:0});$({target:"Array",proto:!0,forced:!STRICT_METHOD||!USES_TO_LENGTH||!IS_NODE&&CHROME_VERSION>79&&CHROME_VERSION<83},{reduce:function reduce(callbackfn){return $reduce(this,callbackfn,arguments.length,arguments.length>1?arguments[1]:void 0)}})},3401:function(module,exports,__webpack_require__){var aFunction=__webpack_require__(3105),toObject=__webpack_require__(3109),IndexedObject=__webpack_require__(3145),toLength=__webpack_require__(3108),createMethod=function(IS_RIGHT){return function(that,callbackfn,argumentsLength,memo){aFunction(callbackfn);var O=toObject(that),self=IndexedObject(O),length=toLength(O.length),index=IS_RIGHT?length-1:0,i=IS_RIGHT?-1:1;if(argumentsLength<2)for(;;){if(index in self){memo=self[index],index+=i;break}if(index+=i,IS_RIGHT?index<0:length<=index)throw TypeError("Reduce of empty array with no initial value")}for(;IS_RIGHT?index>=0:length>index;index+=i)index in self&&(memo=callbackfn(memo,self[index],index,O));return memo}};module.exports={left:createMethod(!1),right:createMethod(!0)}},3402:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3403)},3403:function(module,exports,__webpack_require__){var parent=__webpack_require__(3404);module.exports=parent},3404:function(module,exports,__webpack_require__){__webpack_require__(3405);var path=__webpack_require__(3093);module.exports=path.Date.now},3405:function(module,exports,__webpack_require__){__webpack_require__(3092)({target:"Date",stat:!0},{now:function now(){return(new Date).getTime()}})},3406:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3407)},3407:function(module,exports,__webpack_require__){var parent=__webpack_require__(3408);module.exports=parent},3408:function(module,exports,__webpack_require__){var every=__webpack_require__(3409),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.every;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.every?every:own}},3409:function(module,exports,__webpack_require__){__webpack_require__(3410);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").every},3410:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$every=__webpack_require__(3114).every,arrayMethodIsStrict=__webpack_require__(3131),arrayMethodUsesToLength=__webpack_require__(3110),STRICT_METHOD=arrayMethodIsStrict("every"),USES_TO_LENGTH=arrayMethodUsesToLength("every");$({target:"Array",proto:!0,forced:!STRICT_METHOD||!USES_TO_LENGTH},{every:function every(callbackfn){return $every(this,callbackfn,arguments.length>1?arguments[1]:void 0)}})},3411:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3412)},3412:function(module,exports,__webpack_require__){var parent=__webpack_require__(3210);module.exports=parent},3413:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3414)},3414:function(module,exports,__webpack_require__){var parent=__webpack_require__(3415);module.exports=parent},3415:function(module,exports,__webpack_require__){var bind=__webpack_require__(3416),FunctionPrototype=Function.prototype;module.exports=function(it){var own=it.bind;return it===FunctionPrototype||it instanceof Function&&own===FunctionPrototype.bind?bind:own}},3416:function(module,exports,__webpack_require__){__webpack_require__(3417);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Function").bind},3417:function(module,exports,__webpack_require__){__webpack_require__(3092)({target:"Function",proto:!0},{bind:__webpack_require__(3222)})},3418:function(module,exports,__webpack_require__){(function(global){for(var now=__webpack_require__(3419),root="undefined"==typeof window?global:window,vendors=["moz","webkit"],suffix="AnimationFrame",raf=root["request"+suffix],caf=root["cancel"+suffix]||root["cancelRequest"+suffix],i=0;!raf&&i<vendors.length;i++)raf=root[vendors[i]+"Request"+suffix],caf=root[vendors[i]+"Cancel"+suffix]||root[vendors[i]+"CancelRequest"+suffix];if(!raf||!caf){var last=0,id=0,queue=[];raf=function(callback){if(0===queue.length){var _now=now(),next=Math.max(0,16.666666666666668-(_now-last));last=next+_now,setTimeout((function(){var cp=queue.slice(0);queue.length=0;for(var i=0;i<cp.length;i++)if(!cp[i].cancelled)try{cp[i].callback(last)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(next))}return queue.push({handle:++id,callback:callback,cancelled:!1}),id},caf=function(handle){for(var i=0;i<queue.length;i++)queue[i].handle===handle&&(queue[i].cancelled=!0)}}module.exports=function(fn){return raf.call(root,fn)},module.exports.cancel=function(){caf.apply(root,arguments)},module.exports.polyfill=function(object){object||(object=root),object.requestAnimationFrame=raf,object.cancelAnimationFrame=caf}}).call(this,__webpack_require__(20))},3419:function(module,exports,__webpack_require__){(function(process){(function(){var getNanoSeconds,hrtime,loadTime,moduleLoadTime,nodeLoadTime,upTime;"undefined"!=typeof performance&&null!==performance&&performance.now?module.exports=function(){return performance.now()}:null!=process&&process.hrtime?(module.exports=function(){return(getNanoSeconds()-nodeLoadTime)/1e6},hrtime=process.hrtime,moduleLoadTime=(getNanoSeconds=function(){var hr;return 1e9*(hr=hrtime())[0]+hr[1]})(),upTime=1e9*process.uptime(),nodeLoadTime=moduleLoadTime-upTime):Date.now?(module.exports=function(){return Date.now()-loadTime},loadTime=Date.now()):(module.exports=function(){return(new Date).getTime()-loadTime},loadTime=(new Date).getTime())}).call(this)}).call(this,__webpack_require__(474))},3420:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3421)},3421:function(module,exports,__webpack_require__){var parent=__webpack_require__(3422);module.exports=parent},3422:function(module,exports,__webpack_require__){var trim=__webpack_require__(3423),StringPrototype=String.prototype;module.exports=function(it){var own=it.trim;return"string"==typeof it||it===StringPrototype||it instanceof String&&own===StringPrototype.trim?trim:own}},3423:function(module,exports,__webpack_require__){__webpack_require__(3424);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("String").trim},3424:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$trim=__webpack_require__(3151).trim;$({target:"String",proto:!0,forced:__webpack_require__(3425)("trim")},{trim:function trim(){return $trim(this)}})},3425:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095),whitespaces=__webpack_require__(3135);module.exports=function(METHOD_NAME){return fails((function(){return!!whitespaces[METHOD_NAME]()||"​᠎"!="​᠎"[METHOD_NAME]()||whitespaces[METHOD_NAME].name!==METHOD_NAME}))}},3426:function(module,exports){module.exports=function(color_string){this.ok=!1,this.alpha=1,"#"==color_string.charAt(0)&&(color_string=color_string.substr(1,6)),color_string=(color_string=color_string.replace(/ /g,"")).toLowerCase();var simple_colors={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dodgerblue:"1e90ff",feldspar:"d19275",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslateblue:"8470ff",lightslategray:"778899",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370d8",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"d87093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"ff0000",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",violetred:"d02090",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"};color_string=simple_colors[color_string]||color_string;for(var color_defs=[{re:/^rgba\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3}),\s*((?:\d?\.)?\d)\)$/,example:["rgba(123, 234, 45, 0.8)","rgba(255,234,245,1.0)"],process:function(bits){return[parseInt(bits[1]),parseInt(bits[2]),parseInt(bits[3]),parseFloat(bits[4])]}},{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,example:["rgb(123, 234, 45)","rgb(255,234,245)"],process:function(bits){return[parseInt(bits[1]),parseInt(bits[2]),parseInt(bits[3])]}},{re:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,example:["#00ff00","336699"],process:function(bits){return[parseInt(bits[1],16),parseInt(bits[2],16),parseInt(bits[3],16)]}},{re:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,example:["#fb0","f0f"],process:function(bits){return[parseInt(bits[1]+bits[1],16),parseInt(bits[2]+bits[2],16),parseInt(bits[3]+bits[3],16)]}}],i=0;i<color_defs.length;i++){var re=color_defs[i].re,processor=color_defs[i].process,bits=re.exec(color_string);if(bits){var channels=processor(bits);this.r=channels[0],this.g=channels[1],this.b=channels[2],channels.length>3&&(this.alpha=channels[3]),this.ok=!0}}this.r=this.r<0||isNaN(this.r)?0:this.r>255?255:this.r,this.g=this.g<0||isNaN(this.g)?0:this.g>255?255:this.g,this.b=this.b<0||isNaN(this.b)?0:this.b>255?255:this.b,this.alpha=this.alpha<0?0:this.alpha>1||isNaN(this.alpha)?1:this.alpha,this.toRGB=function(){return"rgb("+this.r+", "+this.g+", "+this.b+")"},this.toRGBA=function(){return"rgba("+this.r+", "+this.g+", "+this.b+", "+this.alpha+")"},this.toHex=function(){var r=this.r.toString(16),g=this.g.toString(16),b=this.b.toString(16);return 1==r.length&&(r="0"+r),1==g.length&&(g="0"+g),1==b.length&&(b="0"+b),"#"+r+g+b},this.getHelpXML=function(){for(var examples=new Array,i=0;i<color_defs.length;i++)for(var example=color_defs[i].example,j=0;j<example.length;j++)examples[examples.length]=example[j];for(var sc in simple_colors)examples[examples.length]=sc;var xml=document.createElement("ul");xml.setAttribute("id","rgbcolor-examples");for(i=0;i<examples.length;i++)try{var list_item=document.createElement("li"),list_color=new RGBColor(examples[i]),example_div=document.createElement("div");example_div.style.cssText="margin: 3px; border: 1px solid black; background:"+list_color.toHex()+"; color:"+list_color.toHex(),example_div.appendChild(document.createTextNode("test"));var list_item_value=document.createTextNode(" "+examples[i]+" -> "+list_color.toRGB()+" -> "+list_color.toHex());list_item.appendChild(example_div),list_item.appendChild(list_item_value),xml.appendChild(list_item)}catch(e){}return xml}}},3427:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3428)},3428:function(module,exports,__webpack_require__){var parent=__webpack_require__(3429);module.exports=parent},3429:function(module,exports,__webpack_require__){__webpack_require__(3430);var path=__webpack_require__(3093);module.exports=path.Reflect.construct},3430:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),getBuiltIn=__webpack_require__(3106),aFunction=__webpack_require__(3105),anObject=__webpack_require__(3099),isObject=__webpack_require__(3098),create=__webpack_require__(3123),bind=__webpack_require__(3222),fails=__webpack_require__(3095),nativeConstruct=getBuiltIn("Reflect","construct"),NEW_TARGET_BUG=fails((function(){function F(){}return!(nativeConstruct((function(){}),[],F)instanceof F)})),ARGS_BUG=!fails((function(){nativeConstruct((function(){}))})),FORCED=NEW_TARGET_BUG||ARGS_BUG;$({target:"Reflect",stat:!0,forced:FORCED,sham:FORCED},{construct:function construct(Target,args){aFunction(Target),anObject(args);var newTarget=arguments.length<3?Target:aFunction(arguments[2]);if(ARGS_BUG&&!NEW_TARGET_BUG)return nativeConstruct(Target,args,newTarget);if(Target==newTarget){switch(args.length){case 0:return new Target;case 1:return new Target(args[0]);case 2:return new Target(args[0],args[1]);case 3:return new Target(args[0],args[1],args[2]);case 4:return new Target(args[0],args[1],args[2],args[3])}var $args=[null];return $args.push.apply($args,args),new(bind.apply(Target,$args))}var proto=newTarget.prototype,instance=create(isObject(proto)?proto:Object.prototype),result=Function.apply.call(Target,instance,args);return isObject(result)?result:instance}})},3431:function(module,exports,__webpack_require__){var _Object$create=__webpack_require__(3432),setPrototypeOf=__webpack_require__(3436);module.exports=function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=_Object$create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&setPrototypeOf(subClass,superClass)}},3432:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3433)},3433:function(module,exports,__webpack_require__){var parent=__webpack_require__(3434);module.exports=parent},3434:function(module,exports,__webpack_require__){__webpack_require__(3435);var Object=__webpack_require__(3093).Object;module.exports=function create(P,D){return Object.create(P,D)}},3435:function(module,exports,__webpack_require__){__webpack_require__(3092)({target:"Object",stat:!0,sham:!__webpack_require__(3101)},{create:__webpack_require__(3123)})},3436:function(module,exports,__webpack_require__){var _Object$setPrototypeOf=__webpack_require__(3223);function _setPrototypeOf(o,p){return module.exports=_setPrototypeOf=_Object$setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}module.exports=_setPrototypeOf},3437:function(module,exports,__webpack_require__){var parent=__webpack_require__(3438);module.exports=parent},3438:function(module,exports,__webpack_require__){__webpack_require__(3439);var path=__webpack_require__(3093);module.exports=path.Object.setPrototypeOf},3439:function(module,exports,__webpack_require__){__webpack_require__(3092)({target:"Object",stat:!0},{setPrototypeOf:__webpack_require__(3160)})},3440:function(module,exports,__webpack_require__){var _typeof=__webpack_require__(3441),assertThisInitialized=__webpack_require__(3224);module.exports=function _possibleConstructorReturn(self,call){return!call||"object"!==_typeof(call)&&"function"!=typeof call?assertThisInitialized(self):call}},3441:function(module,exports,__webpack_require__){var _Symbol$iterator=__webpack_require__(3442),_Symbol=__webpack_require__(3161);function _typeof(obj){return module.exports=_typeof="function"==typeof _Symbol&&"symbol"==typeof _Symbol$iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof _Symbol&&obj.constructor===_Symbol&&obj!==_Symbol.prototype?"symbol":typeof obj},_typeof(obj)}module.exports=_typeof},3442:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3443)},3443:function(module,exports,__webpack_require__){var parent=__webpack_require__(3444);module.exports=parent},3444:function(module,exports,__webpack_require__){__webpack_require__(3199),__webpack_require__(3116),__webpack_require__(3112);var WrappedWellKnownSymbolModule=__webpack_require__(3164);module.exports=WrappedWellKnownSymbolModule.f("iterator")},3445:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3446)},3446:function(module,exports,__webpack_require__){var parent=__webpack_require__(3447);module.exports=parent},3447:function(module,exports,__webpack_require__){__webpack_require__(3448);var path=__webpack_require__(3093);module.exports=path.Object.getPrototypeOf},3448:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),fails=__webpack_require__(3095),toObject=__webpack_require__(3109),nativeGetPrototypeOf=__webpack_require__(3122),CORRECT_PROTOTYPE_GETTER=__webpack_require__(3154);$({target:"Object",stat:!0,forced:fails((function(){nativeGetPrototypeOf(1)})),sham:!CORRECT_PROTOTYPE_GETTER},{getPrototypeOf:function getPrototypeOf(it){return nativeGetPrototypeOf(toObject(it))}})},3449:function(module,exports,__webpack_require__){var arrayWithoutHoles=__webpack_require__(3450),iterableToArray=__webpack_require__(3451),unsupportedIterableToArray=__webpack_require__(3200),nonIterableSpread=__webpack_require__(3452);module.exports=function _toConsumableArray(arr){return arrayWithoutHoles(arr)||iterableToArray(arr)||unsupportedIterableToArray(arr)||nonIterableSpread()}},3450:function(module,exports,__webpack_require__){var _Array$isArray=__webpack_require__(3185),arrayLikeToArray=__webpack_require__(3207);module.exports=function _arrayWithoutHoles(arr){if(_Array$isArray(arr))return arrayLikeToArray(arr)}},3451:function(module,exports,__webpack_require__){var _Array$from=__webpack_require__(3201),_isIterable=__webpack_require__(3194),_Symbol=__webpack_require__(3161);module.exports=function _iterableToArray(iter){if(void 0!==_Symbol&&_isIterable(Object(iter)))return _Array$from(iter)}},3452:function(module,exports){module.exports=function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},3453:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3454)},3454:function(module,exports,__webpack_require__){var parent=__webpack_require__(3455);module.exports=parent},3455:function(module,exports,__webpack_require__){var some=__webpack_require__(3456),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.some;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.some?some:own}},3456:function(module,exports,__webpack_require__){__webpack_require__(3457);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").some},3457:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$some=__webpack_require__(3114).some,arrayMethodIsStrict=__webpack_require__(3131),arrayMethodUsesToLength=__webpack_require__(3110),STRICT_METHOD=arrayMethodIsStrict("some"),USES_TO_LENGTH=arrayMethodUsesToLength("some");$({target:"Array",proto:!0,forced:!STRICT_METHOD||!USES_TO_LENGTH},{some:function some(callbackfn){return $some(this,callbackfn,arguments.length>1?arguments[1]:void 0)}})},3458:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3459)},3459:function(module,exports,__webpack_require__){var parent=__webpack_require__(3460);module.exports=parent},3460:function(module,exports,__webpack_require__){var arrayIncludes=__webpack_require__(3461),stringIncludes=__webpack_require__(3463),ArrayPrototype=Array.prototype,StringPrototype=String.prototype;module.exports=function(it){var own=it.includes;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.includes?arrayIncludes:"string"==typeof it||it===StringPrototype||it instanceof String&&own===StringPrototype.includes?stringIncludes:own}},3461:function(module,exports,__webpack_require__){__webpack_require__(3462);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").includes},3462:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$includes=__webpack_require__(3156).includes,addToUnscopables=__webpack_require__(3152);$({target:"Array",proto:!0,forced:!__webpack_require__(3110)("indexOf",{ACCESSORS:!0,1:0})},{includes:function includes(el){return $includes(this,el,arguments.length>1?arguments[1]:void 0)}}),addToUnscopables("includes")},3463:function(module,exports,__webpack_require__){__webpack_require__(3464);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("String").includes},3464:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),notARegExp=__webpack_require__(3180),requireObjectCoercible=__webpack_require__(3118);$({target:"String",proto:!0,forced:!__webpack_require__(3182)("includes")},{includes:function includes(searchString){return!!~String(requireObjectCoercible(this)).indexOf(notARegExp(searchString),arguments.length>1?arguments[1]:void 0)}})},3465:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3466)},3466:function(module,exports,__webpack_require__){var parent=__webpack_require__(3202);module.exports=parent},3467:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3468)},3468:function(module,exports,__webpack_require__){var parent=__webpack_require__(3469);module.exports=parent},3469:function(module,exports,__webpack_require__){var reverse=__webpack_require__(3470),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.reverse;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.reverse?reverse:own}},3470:function(module,exports,__webpack_require__){__webpack_require__(3471);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").reverse},3471:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),isArray=__webpack_require__(3120),nativeReverse=[].reverse,test=[1,2];$({target:"Array",proto:!0,forced:String(test)===String(test.reverse())},{reverse:function reverse(){return isArray(this)&&(this.length=this.length),nativeReverse.call(this)}})},3472:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3473)},3473:function(module,exports,__webpack_require__){var parent=__webpack_require__(3474);module.exports=parent},3474:function(module,exports,__webpack_require__){var indexOf=__webpack_require__(3475),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.indexOf;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.indexOf?indexOf:own}},3475:function(module,exports,__webpack_require__){__webpack_require__(3476);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").indexOf},3476:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),$indexOf=__webpack_require__(3156).indexOf,arrayMethodIsStrict=__webpack_require__(3131),arrayMethodUsesToLength=__webpack_require__(3110),nativeIndexOf=[].indexOf,NEGATIVE_ZERO=!!nativeIndexOf&&1/[1].indexOf(1,-0)<0,STRICT_METHOD=arrayMethodIsStrict("indexOf"),USES_TO_LENGTH=arrayMethodUsesToLength("indexOf",{ACCESSORS:!0,1:0});$({target:"Array",proto:!0,forced:NEGATIVE_ZERO||!STRICT_METHOD||!USES_TO_LENGTH},{indexOf:function indexOf(searchElement){return NEGATIVE_ZERO?nativeIndexOf.apply(this,arguments)||0:$indexOf(this,searchElement,arguments.length>1?arguments[1]:void 0)}})},3477:function(module,exports,__webpack_require__){var _Object$getOwnPropertyDescriptor=__webpack_require__(3478),_Reflect$get=__webpack_require__(3480),superPropBase=__webpack_require__(3484);function _get(target,property,receiver){return"undefined"!=typeof Reflect&&_Reflect$get?module.exports=_get=_Reflect$get:module.exports=_get=function _get(target,property,receiver){var base=superPropBase(target,property);if(base){var desc=_Object$getOwnPropertyDescriptor(base,property);return desc.get?desc.get.call(receiver):desc.value}},_get(target,property,receiver||target)}module.exports=_get},3478:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3479)},3479:function(module,exports,__webpack_require__){var parent=__webpack_require__(3209);module.exports=parent},3480:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3481)},3481:function(module,exports,__webpack_require__){var parent=__webpack_require__(3482);module.exports=parent},3482:function(module,exports,__webpack_require__){__webpack_require__(3483);var path=__webpack_require__(3093);module.exports=path.Reflect.get},3483:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),isObject=__webpack_require__(3098),anObject=__webpack_require__(3099),has=__webpack_require__(3102),getOwnPropertyDescriptorModule=__webpack_require__(3111),getPrototypeOf=__webpack_require__(3122);$({target:"Reflect",stat:!0},{get:function get(target,propertyKey){var descriptor,prototype,receiver=arguments.length<3?target:arguments[2];return anObject(target)===receiver?target[propertyKey]:(descriptor=getOwnPropertyDescriptorModule.f(target,propertyKey))?has(descriptor,"value")?descriptor.value:void 0===descriptor.get?void 0:descriptor.get.call(receiver):isObject(prototype=getPrototypeOf(target))?get(prototype,propertyKey,receiver):void 0}})},3484:function(module,exports,__webpack_require__){var getPrototypeOf=__webpack_require__(3225);module.exports=function _superPropBase(object,property){for(;!Object.prototype.hasOwnProperty.call(object,property)&&null!==(object=getPrototypeOf(object)););return object}},3485:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3486)},3486:function(module,exports,__webpack_require__){var parent=__webpack_require__(3487);module.exports=parent},3487:function(module,exports,__webpack_require__){var fill=__webpack_require__(3488),ArrayPrototype=Array.prototype;module.exports=function(it){var own=it.fill;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.fill?fill:own}},3488:function(module,exports,__webpack_require__){__webpack_require__(3489);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").fill},3489:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),fill=__webpack_require__(3490),addToUnscopables=__webpack_require__(3152);$({target:"Array",proto:!0},{fill:fill}),addToUnscopables("fill")},3490:function(module,exports,__webpack_require__){"use strict";var toObject=__webpack_require__(3109),toAbsoluteIndex=__webpack_require__(3157),toLength=__webpack_require__(3108);module.exports=function fill(value){for(var O=toObject(this),length=toLength(O.length),argumentsLength=arguments.length,index=toAbsoluteIndex(argumentsLength>1?arguments[1]:void 0,length),end=argumentsLength>2?arguments[2]:void 0,endPos=void 0===end?length:toAbsoluteIndex(end,length);endPos>index;)O[index++]=value;return O}},3491:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return f}));var t=function(r,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var e in r)r.hasOwnProperty(e)&&(t[e]=r[e])})(r,e)};function r(r,e){function i(){this.constructor=r}t(r,e),r.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}function i(t,r){var e=t[0],i=t[1];return[e*Math.cos(r)-i*Math.sin(r),e*Math.sin(r)+i*Math.cos(r)]}function a(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];for(var e=0;e<t.length;e++)if("number"!=typeof t[e])throw new Error("assertNumbers arguments["+e+"] is not a number. "+typeof t[e]+" == typeof "+t[e]);return!0}var n=Math.PI;function o(t,r,e){t.lArcFlag=0===t.lArcFlag?0:1,t.sweepFlag=0===t.sweepFlag?0:1;var a=t.rX,o=t.rY,s=t.x,u=t.y;a=Math.abs(t.rX),o=Math.abs(t.rY);var h=i([(r-s)/2,(e-u)/2],-t.xRot/180*n),c=h[0],y=h[1],p=Math.pow(c,2)/Math.pow(a,2)+Math.pow(y,2)/Math.pow(o,2);1<p&&(a*=Math.sqrt(p),o*=Math.sqrt(p)),t.rX=a,t.rY=o;var m=Math.pow(a,2)*Math.pow(y,2)+Math.pow(o,2)*Math.pow(c,2),O=(t.lArcFlag!==t.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(a,2)*Math.pow(o,2)-m)/m)),T=a*y/o*O,v=-o*c/a*O,l=i([T,v],t.xRot/180*n);t.cX=l[0]+(r+s)/2,t.cY=l[1]+(e+u)/2,t.phi1=Math.atan2((y-v)/o,(c-T)/a),t.phi2=Math.atan2((-y-v)/o,(-c-T)/a),0===t.sweepFlag&&t.phi2>t.phi1&&(t.phi2-=2*n),1===t.sweepFlag&&t.phi2<t.phi1&&(t.phi2+=2*n),t.phi1*=180/n,t.phi2*=180/n}function s(t,r,e){a(t,r,e);var i=t*t+r*r-e*e;if(0>i)return[];if(0===i)return[[t*e/(t*t+r*r),r*e/(t*t+r*r)]];var n=Math.sqrt(i);return[[(t*e+r*n)/(t*t+r*r),(r*e-t*n)/(t*t+r*r)],[(t*e-r*n)/(t*t+r*r),(r*e+t*n)/(t*t+r*r)]]}var u,h=Math.PI/180;function c(t,r,e){return(1-e)*t+e*r}function y(t,r,e,i){return t+Math.cos(i/180*n)*r+Math.sin(i/180*n)*e}function p(t,r,e,i){var a=r-t,n=e-r,o=3*a+3*(i-e)-6*n,s=6*(n-a),u=3*a;return Math.abs(o)<1e-6?[-u/s]:function(t,r,e){void 0===e&&(e=1e-6);var i=t*t/4-r;if(i<-e)return[];if(i<=e)return[-t/2];var a=Math.sqrt(i);return[-t/2-a,-t/2+a]}(s/o,u/o,1e-6)}function m(t,r,e,i,a){var n=1-a;return t*(n*n*n)+r*(3*n*n*a)+e*(3*n*a*a)+i*(a*a*a)}!function(t){function r(){return u((function(t,r,e){return t.relative&&(void 0!==t.x1&&(t.x1+=r),void 0!==t.y1&&(t.y1+=e),void 0!==t.x2&&(t.x2+=r),void 0!==t.y2&&(t.y2+=e),void 0!==t.x&&(t.x+=r),void 0!==t.y&&(t.y+=e),t.relative=!1),t}))}function e(){var t=NaN,r=NaN,e=NaN,i=NaN;return u((function(a,n,o){return a.type&f.SMOOTH_CURVE_TO&&(a.type=f.CURVE_TO,t=isNaN(t)?n:t,r=isNaN(r)?o:r,a.x1=a.relative?n-t:2*n-t,a.y1=a.relative?o-r:2*o-r),a.type&f.CURVE_TO?(t=a.relative?n+a.x2:a.x2,r=a.relative?o+a.y2:a.y2):(t=NaN,r=NaN),a.type&f.SMOOTH_QUAD_TO&&(a.type=f.QUAD_TO,e=isNaN(e)?n:e,i=isNaN(i)?o:i,a.x1=a.relative?n-e:2*n-e,a.y1=a.relative?o-i:2*o-i),a.type&f.QUAD_TO?(e=a.relative?n+a.x1:a.x1,i=a.relative?o+a.y1:a.y1):(e=NaN,i=NaN),a}))}function n(){var t=NaN,r=NaN;return u((function(e,i,a){if(e.type&f.SMOOTH_QUAD_TO&&(e.type=f.QUAD_TO,t=isNaN(t)?i:t,r=isNaN(r)?a:r,e.x1=e.relative?i-t:2*i-t,e.y1=e.relative?a-r:2*a-r),e.type&f.QUAD_TO){t=e.relative?i+e.x1:e.x1,r=e.relative?a+e.y1:e.y1;var n=e.x1,o=e.y1;e.type=f.CURVE_TO,e.x1=((e.relative?0:i)+2*n)/3,e.y1=((e.relative?0:a)+2*o)/3,e.x2=(e.x+2*n)/3,e.y2=(e.y+2*o)/3}else t=NaN,r=NaN;return e}))}function u(t){var r=0,e=0,i=NaN,a=NaN;return function(n){if(isNaN(i)&&!(n.type&f.MOVE_TO))throw new Error("path must start with moveto");var o=t(n,r,e,i,a);return n.type&f.CLOSE_PATH&&(r=i,e=a),void 0!==n.x&&(r=n.relative?r+n.x:n.x),void 0!==n.y&&(e=n.relative?e+n.y:n.y),n.type&f.MOVE_TO&&(i=r,a=e),o}}function O(t,r,e,i,n,o){return a(t,r,e,i,n,o),u((function(a,s,u,h){var c=a.x1,y=a.x2,p=a.relative&&!isNaN(h),m=void 0!==a.x?a.x:p?0:s,O=void 0!==a.y?a.y:p?0:u;function T(t){return t*t}a.type&f.HORIZ_LINE_TO&&0!==r&&(a.type=f.LINE_TO,a.y=a.relative?0:u),a.type&f.VERT_LINE_TO&&0!==e&&(a.type=f.LINE_TO,a.x=a.relative?0:s),void 0!==a.x&&(a.x=a.x*t+O*e+(p?0:n)),void 0!==a.y&&(a.y=m*r+a.y*i+(p?0:o)),void 0!==a.x1&&(a.x1=a.x1*t+a.y1*e+(p?0:n)),void 0!==a.y1&&(a.y1=c*r+a.y1*i+(p?0:o)),void 0!==a.x2&&(a.x2=a.x2*t+a.y2*e+(p?0:n)),void 0!==a.y2&&(a.y2=y*r+a.y2*i+(p?0:o));var v=t*i-r*e;if(void 0!==a.xRot&&(1!==t||0!==r||0!==e||1!==i))if(0===v)delete a.rX,delete a.rY,delete a.xRot,delete a.lArcFlag,delete a.sweepFlag,a.type=f.LINE_TO;else{var l=a.xRot*Math.PI/180,_=Math.sin(l),N=Math.cos(l),x=1/T(a.rX),d=1/T(a.rY),A=T(N)*x+T(_)*d,E=2*_*N*(x-d),C=T(_)*x+T(N)*d,M=A*i*i-E*r*i+C*r*r,R=E*(t*i+r*e)-2*(A*e*i+C*t*r),g=A*e*e-E*t*e+C*t*t,I=(Math.atan2(R,M-g)+Math.PI)%Math.PI/2,S=Math.sin(I),L=Math.cos(I);a.rX=Math.abs(v)/Math.sqrt(M*T(L)+R*S*L+g*T(S)),a.rY=Math.abs(v)/Math.sqrt(M*T(S)-R*S*L+g*T(L)),a.xRot=180*I/Math.PI}return void 0!==a.sweepFlag&&0>v&&(a.sweepFlag=+!a.sweepFlag),a}))}t.ROUND=function(t){function r(r){return Math.round(r*t)/t}return void 0===t&&(t=1e13),a(t),function(t){return void 0!==t.x1&&(t.x1=r(t.x1)),void 0!==t.y1&&(t.y1=r(t.y1)),void 0!==t.x2&&(t.x2=r(t.x2)),void 0!==t.y2&&(t.y2=r(t.y2)),void 0!==t.x&&(t.x=r(t.x)),void 0!==t.y&&(t.y=r(t.y)),void 0!==t.rX&&(t.rX=r(t.rX)),void 0!==t.rY&&(t.rY=r(t.rY)),t}},t.TO_ABS=r,t.TO_REL=function(){return u((function(t,r,e){return t.relative||(void 0!==t.x1&&(t.x1-=r),void 0!==t.y1&&(t.y1-=e),void 0!==t.x2&&(t.x2-=r),void 0!==t.y2&&(t.y2-=e),void 0!==t.x&&(t.x-=r),void 0!==t.y&&(t.y-=e),t.relative=!0),t}))},t.NORMALIZE_HVZ=function(t,r,e){return void 0===t&&(t=!0),void 0===r&&(r=!0),void 0===e&&(e=!0),u((function(i,a,n,o,s){if(isNaN(o)&&!(i.type&f.MOVE_TO))throw new Error("path must start with moveto");return r&&i.type&f.HORIZ_LINE_TO&&(i.type=f.LINE_TO,i.y=i.relative?0:n),e&&i.type&f.VERT_LINE_TO&&(i.type=f.LINE_TO,i.x=i.relative?0:a),t&&i.type&f.CLOSE_PATH&&(i.type=f.LINE_TO,i.x=i.relative?o-a:o,i.y=i.relative?s-n:s),i.type&f.ARC&&(0===i.rX||0===i.rY)&&(i.type=f.LINE_TO,delete i.rX,delete i.rY,delete i.xRot,delete i.lArcFlag,delete i.sweepFlag),i}))},t.NORMALIZE_ST=e,t.QT_TO_C=n,t.INFO=u,t.SANITIZE=function(t){void 0===t&&(t=0),a(t);var r=NaN,e=NaN,i=NaN,n=NaN;return u((function(a,o,s,u,h){var c=Math.abs,y=!1,p=0,m=0;if(a.type&f.SMOOTH_CURVE_TO&&(p=isNaN(r)?0:o-r,m=isNaN(e)?0:s-e),a.type&(f.CURVE_TO|f.SMOOTH_CURVE_TO)?(r=a.relative?o+a.x2:a.x2,e=a.relative?s+a.y2:a.y2):(r=NaN,e=NaN),a.type&f.SMOOTH_QUAD_TO?(i=isNaN(i)?o:2*o-i,n=isNaN(n)?s:2*s-n):a.type&f.QUAD_TO?(i=a.relative?o+a.x1:a.x1,n=a.relative?s+a.y1:a.y2):(i=NaN,n=NaN),a.type&f.LINE_COMMANDS||a.type&f.ARC&&(0===a.rX||0===a.rY||!a.lArcFlag)||a.type&f.CURVE_TO||a.type&f.SMOOTH_CURVE_TO||a.type&f.QUAD_TO||a.type&f.SMOOTH_QUAD_TO){var O=void 0===a.x?0:a.relative?a.x:a.x-o,T=void 0===a.y?0:a.relative?a.y:a.y-s;p=isNaN(i)?void 0===a.x1?p:a.relative?a.x:a.x1-o:i-o,m=isNaN(n)?void 0===a.y1?m:a.relative?a.y:a.y1-s:n-s;var v=void 0===a.x2?0:a.relative?a.x:a.x2-o,l=void 0===a.y2?0:a.relative?a.y:a.y2-s;c(O)<=t&&c(T)<=t&&c(p)<=t&&c(m)<=t&&c(v)<=t&&c(l)<=t&&(y=!0)}return a.type&f.CLOSE_PATH&&c(o-u)<=t&&c(s-h)<=t&&(y=!0),y?[]:a}))},t.MATRIX=O,t.ROTATE=function(t,r,e){void 0===r&&(r=0),void 0===e&&(e=0),a(t,r,e);var i=Math.sin(t),n=Math.cos(t);return O(n,i,-i,n,r-r*n+e*i,e-r*i-e*n)},t.TRANSLATE=function(t,r){return void 0===r&&(r=0),a(t,r),O(1,0,0,1,t,r)},t.SCALE=function(t,r){return void 0===r&&(r=t),a(t,r),O(t,0,0,r,0,0)},t.SKEW_X=function(t){return a(t),O(1,0,Math.atan(t),1,0,0)},t.SKEW_Y=function(t){return a(t),O(1,Math.atan(t),0,1,0,0)},t.X_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),a(t),O(-1,0,0,1,t,0)},t.Y_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),a(t),O(1,0,0,-1,0,t)},t.A_TO_C=function(){return u((function(t,r,e){return f.ARC===t.type?function(t,r,e){var a,n,s,u;t.cX||o(t,r,e);for(var y=Math.min(t.phi1,t.phi2),p=Math.max(t.phi1,t.phi2)-y,m=Math.ceil(p/90),O=new Array(m),T=r,v=e,l=0;l<m;l++){var _=c(t.phi1,t.phi2,l/m),N=c(t.phi1,t.phi2,(l+1)/m),x=N-_,d=4/3*Math.tan(x*h/4),A=[Math.cos(_*h)-d*Math.sin(_*h),Math.sin(_*h)+d*Math.cos(_*h)],E=A[0],C=A[1],M=[Math.cos(N*h),Math.sin(N*h)],R=M[0],g=M[1],I=[R+d*Math.sin(N*h),g-d*Math.cos(N*h)],S=I[0],L=I[1];O[l]={relative:t.relative,type:f.CURVE_TO};var H=function(r,e){var a=i([r*t.rX,e*t.rY],t.xRot),n=a[0],o=a[1];return[t.cX+n,t.cY+o]};a=H(E,C),O[l].x1=a[0],O[l].y1=a[1],n=H(S,L),O[l].x2=n[0],O[l].y2=n[1],s=H(R,g),O[l].x=s[0],O[l].y=s[1],t.relative&&(O[l].x1-=T,O[l].y1-=v,O[l].x2-=T,O[l].y2-=v,O[l].x-=T,O[l].y-=v),T=(u=[O[l].x,O[l].y])[0],v=u[1]}return O}(t,t.relative?0:r,t.relative?0:e):t}))},t.ANNOTATE_ARCS=function(){return u((function(t,r,e){return t.relative&&(r=0,e=0),f.ARC===t.type&&o(t,r,e),t}))},t.CLONE=function T(){return function(t){var r={};for(var e in t)r[e]=t[e];return r}},t.CALCULATE_BOUNDS=function(){var i=r(),a=n(),h=e(),c=u((function(r,e,n){var u=h(a(i(function(t){var r={};for(var e in t)r[e]=t[e];return r}(r))));function O(t){t>c.maxX&&(c.maxX=t),t<c.minX&&(c.minX=t)}function T(t){t>c.maxY&&(c.maxY=t),t<c.minY&&(c.minY=t)}if(u.type&f.DRAWING_COMMANDS&&(O(e),T(n)),u.type&f.HORIZ_LINE_TO&&O(u.x),u.type&f.VERT_LINE_TO&&T(u.y),u.type&f.LINE_TO&&(O(u.x),T(u.y)),u.type&f.CURVE_TO){O(u.x),T(u.y);for(var v=0,l=p(e,u.x1,u.x2,u.x);v<l.length;v++)0<(w=l[v])&&1>w&&O(m(e,u.x1,u.x2,u.x,w));for(var _=0,N=p(n,u.y1,u.y2,u.y);_<N.length;_++)0<(w=N[_])&&1>w&&T(m(n,u.y1,u.y2,u.y,w))}if(u.type&f.ARC){O(u.x),T(u.y),o(u,e,n);for(var x=u.xRot/180*Math.PI,d=Math.cos(x)*u.rX,A=Math.sin(x)*u.rX,E=-Math.sin(x)*u.rY,C=Math.cos(x)*u.rY,M=u.phi1<u.phi2?[u.phi1,u.phi2]:-180>u.phi2?[u.phi2+360,u.phi1+360]:[u.phi2,u.phi1],R=M[0],g=M[1],I=function(t){var r=t[0],e=t[1],i=180*Math.atan2(e,r)/Math.PI;return i<R?i+360:i},S=0,L=s(E,-d,0).map(I);S<L.length;S++)(w=L[S])>R&&w<g&&O(y(u.cX,d,E,w));for(var H=0,U=s(C,-A,0).map(I);H<U.length;H++){var w;(w=U[H])>R&&w<g&&T(y(u.cY,A,C,w))}}return r}));return c.minX=1/0,c.maxX=-1/0,c.minY=1/0,c.maxY=-1/0,c}}(u||(u={}));var O,T=function(){function t(){}return t.prototype.round=function(t){return this.transform(u.ROUND(t))},t.prototype.toAbs=function(){return this.transform(u.TO_ABS())},t.prototype.toRel=function(){return this.transform(u.TO_REL())},t.prototype.normalizeHVZ=function(t,r,e){return this.transform(u.NORMALIZE_HVZ(t,r,e))},t.prototype.normalizeST=function(){return this.transform(u.NORMALIZE_ST())},t.prototype.qtToC=function(){return this.transform(u.QT_TO_C())},t.prototype.aToC=function(){return this.transform(u.A_TO_C())},t.prototype.sanitize=function(t){return this.transform(u.SANITIZE(t))},t.prototype.translate=function(t,r){return this.transform(u.TRANSLATE(t,r))},t.prototype.scale=function(t,r){return this.transform(u.SCALE(t,r))},t.prototype.rotate=function(t,r,e){return this.transform(u.ROTATE(t,r,e))},t.prototype.matrix=function(t,r,e,i,a,n){return this.transform(u.MATRIX(t,r,e,i,a,n))},t.prototype.skewX=function(t){return this.transform(u.SKEW_X(t))},t.prototype.skewY=function(t){return this.transform(u.SKEW_Y(t))},t.prototype.xSymmetry=function(t){return this.transform(u.X_AXIS_SYMMETRY(t))},t.prototype.ySymmetry=function(t){return this.transform(u.Y_AXIS_SYMMETRY(t))},t.prototype.annotateArcs=function(){return this.transform(u.ANNOTATE_ARCS())},t}(),v=function(t){return" "===t||"\t"===t||"\r"===t||"\n"===t},l=function(t){return"0".charCodeAt(0)<=t.charCodeAt(0)&&t.charCodeAt(0)<="9".charCodeAt(0)},_=function(t){function e(){var r=t.call(this)||this;return r.curNumber="",r.curCommandType=-1,r.curCommandRelative=!1,r.canParseCommandOrComma=!0,r.curNumberHasExp=!1,r.curNumberHasExpDigits=!1,r.curNumberHasDecimal=!1,r.curArgs=[],r}return r(e,t),e.prototype.finish=function(t){if(void 0===t&&(t=[]),this.parse(" ",t),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError("Unterminated command at the path end.");return t},e.prototype.parse=function(t,r){var e=this;void 0===r&&(r=[]);for(var i=function(t){r.push(t),e.curArgs.length=0,e.canParseCommandOrComma=!0},a=0;a<t.length;a++){var n=t[a],o=!(this.curCommandType!==f.ARC||3!==this.curArgs.length&&4!==this.curArgs.length||1!==this.curNumber.length||"0"!==this.curNumber&&"1"!==this.curNumber),s=l(n)&&("0"===this.curNumber&&"0"===n||o);if(!l(n)||s)if("e"!==n&&"E"!==n)if("-"!==n&&"+"!==n||!this.curNumberHasExp||this.curNumberHasExpDigits)if("."!==n||this.curNumberHasExp||this.curNumberHasDecimal||o){if(this.curNumber&&-1!==this.curCommandType){var u=Number(this.curNumber);if(isNaN(u))throw new SyntaxError("Invalid number ending at "+a);if(this.curCommandType===f.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>u)throw new SyntaxError('Expected positive number, got "'+u+'" at index "'+a+'"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&"0"!==this.curNumber&&"1"!==this.curNumber)throw new SyntaxError('Expected a flag, got "'+this.curNumber+'" at index "'+a+'"');this.curArgs.push(u),this.curArgs.length===N[this.curCommandType]&&(f.HORIZ_LINE_TO===this.curCommandType?i({type:f.HORIZ_LINE_TO,relative:this.curCommandRelative,x:u}):f.VERT_LINE_TO===this.curCommandType?i({type:f.VERT_LINE_TO,relative:this.curCommandRelative,y:u}):this.curCommandType===f.MOVE_TO||this.curCommandType===f.LINE_TO||this.curCommandType===f.SMOOTH_QUAD_TO?(i({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),f.MOVE_TO===this.curCommandType&&(this.curCommandType=f.LINE_TO)):this.curCommandType===f.CURVE_TO?i({type:f.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===f.SMOOTH_CURVE_TO?i({type:f.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===f.QUAD_TO?i({type:f.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===f.ARC&&i({type:f.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber="",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!v(n))if(","===n&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if("+"!==n&&"-"!==n&&"."!==n)if(s)this.curNumber=n,this.curNumberHasDecimal=!1;else{if(0!==this.curArgs.length)throw new SyntaxError("Unterminated command at index "+a+".");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character "'+n+'" at index '+a+". Command cannot follow comma");if(this.canParseCommandOrComma=!1,"z"!==n&&"Z"!==n)if("h"===n||"H"===n)this.curCommandType=f.HORIZ_LINE_TO,this.curCommandRelative="h"===n;else if("v"===n||"V"===n)this.curCommandType=f.VERT_LINE_TO,this.curCommandRelative="v"===n;else if("m"===n||"M"===n)this.curCommandType=f.MOVE_TO,this.curCommandRelative="m"===n;else if("l"===n||"L"===n)this.curCommandType=f.LINE_TO,this.curCommandRelative="l"===n;else if("c"===n||"C"===n)this.curCommandType=f.CURVE_TO,this.curCommandRelative="c"===n;else if("s"===n||"S"===n)this.curCommandType=f.SMOOTH_CURVE_TO,this.curCommandRelative="s"===n;else if("q"===n||"Q"===n)this.curCommandType=f.QUAD_TO,this.curCommandRelative="q"===n;else if("t"===n||"T"===n)this.curCommandType=f.SMOOTH_QUAD_TO,this.curCommandRelative="t"===n;else{if("a"!==n&&"A"!==n)throw new SyntaxError('Unexpected character "'+n+'" at index '+a+".");this.curCommandType=f.ARC,this.curCommandRelative="a"===n}else r.push({type:f.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=n,this.curNumberHasDecimal="."===n}else this.curNumber+=n,this.curNumberHasDecimal=!0;else this.curNumber+=n;else this.curNumber+=n,this.curNumberHasExp=!0;else this.curNumber+=n,this.curNumberHasExpDigits=this.curNumberHasExp}return r},e.prototype.transform=function(t){return Object.create(this,{parse:{value:function(r,e){void 0===e&&(e=[]);for(var i=0,a=Object.getPrototypeOf(this).parse.call(this,r);i<a.length;i++){var n=a[i],o=t(n);Array.isArray(o)?e.push.apply(e,o):e.push(o)}return e}}})},e}(T),f=function(t){function i(r){var e=t.call(this)||this;return e.commands="string"==typeof r?i.parse(r):r,e}return r(i,t),i.prototype.encode=function(){return i.encode(this.commands)},i.prototype.getBounds=function(){var t=u.CALCULATE_BOUNDS();return this.transform(t),t},i.prototype.transform=function(t){for(var r=[],e=0,i=this.commands;e<i.length;e++){var a=t(i[e]);Array.isArray(a)?r.push.apply(r,a):r.push(a)}return this.commands=r,this},i.encode=function(t){return function e(t){var r="";Array.isArray(t)||(t=[t]);for(var e=0;e<t.length;e++){var i=t[e];if(i.type===f.CLOSE_PATH)r+="z";else if(i.type===f.HORIZ_LINE_TO)r+=(i.relative?"h":"H")+i.x;else if(i.type===f.VERT_LINE_TO)r+=(i.relative?"v":"V")+i.y;else if(i.type===f.MOVE_TO)r+=(i.relative?"m":"M")+i.x+" "+i.y;else if(i.type===f.LINE_TO)r+=(i.relative?"l":"L")+i.x+" "+i.y;else if(i.type===f.CURVE_TO)r+=(i.relative?"c":"C")+i.x1+" "+i.y1+" "+i.x2+" "+i.y2+" "+i.x+" "+i.y;else if(i.type===f.SMOOTH_CURVE_TO)r+=(i.relative?"s":"S")+i.x2+" "+i.y2+" "+i.x+" "+i.y;else if(i.type===f.QUAD_TO)r+=(i.relative?"q":"Q")+i.x1+" "+i.y1+" "+i.x+" "+i.y;else if(i.type===f.SMOOTH_QUAD_TO)r+=(i.relative?"t":"T")+i.x+" "+i.y;else{if(i.type!==f.ARC)throw new Error('Unexpected command type "'+i.type+'" at index '+e+".");r+=(i.relative?"a":"A")+i.rX+" "+i.rY+" "+i.xRot+" "+ +i.lArcFlag+" "+ +i.sweepFlag+" "+i.x+" "+i.y}}return r}(t)},i.parse=function(t){var r=new _,e=[];return r.parse(t,e),r.finish(e),e},i.CLOSE_PATH=1,i.MOVE_TO=2,i.HORIZ_LINE_TO=4,i.VERT_LINE_TO=8,i.LINE_TO=16,i.CURVE_TO=32,i.SMOOTH_CURVE_TO=64,i.QUAD_TO=128,i.SMOOTH_QUAD_TO=256,i.ARC=512,i.LINE_COMMANDS=i.LINE_TO|i.HORIZ_LINE_TO|i.VERT_LINE_TO,i.DRAWING_COMMANDS=i.HORIZ_LINE_TO|i.VERT_LINE_TO|i.LINE_TO|i.CURVE_TO|i.SMOOTH_CURVE_TO|i.QUAD_TO|i.SMOOTH_QUAD_TO|i.ARC,i}(T),N=((O={})[f.MOVE_TO]=2,O[f.LINE_TO]=2,O[f.HORIZ_LINE_TO]=1,O[f.VERT_LINE_TO]=1,O[f.CLOSE_PATH]=0,O[f.QUAD_TO]=4,O[f.SMOOTH_QUAD_TO]=2,O[f.CURVE_TO]=6,O[f.SMOOTH_CURVE_TO]=4,O[f.ARC]=7,O)},3492:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3493)},3493:function(module,exports,__webpack_require__){var parent=__webpack_require__(3494);module.exports=parent},3494:function(module,exports,__webpack_require__){__webpack_require__(3495);var path=__webpack_require__(3093);module.exports=path.Reflect.deleteProperty},3495:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),anObject=__webpack_require__(3099),getOwnPropertyDescriptor=__webpack_require__(3111).f;$({target:"Reflect",stat:!0},{deleteProperty:function deleteProperty(target,propertyKey){var descriptor=getOwnPropertyDescriptor(anObject(target),propertyKey);return!(descriptor&&!descriptor.configurable)&&delete target[propertyKey]}})},3496:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3497)},3497:function(module,exports,__webpack_require__){__webpack_require__(3112);var values=__webpack_require__(3498),classof=__webpack_require__(3125),ArrayPrototype=Array.prototype,DOMIterables={DOMTokenList:!0,NodeList:!0};module.exports=function(it){var own=it.values;return it===ArrayPrototype||it instanceof Array&&own===ArrayPrototype.values||DOMIterables.hasOwnProperty(classof(it))?values:own}},3498:function(module,exports,__webpack_require__){var parent=__webpack_require__(3499);module.exports=parent},3499:function(module,exports,__webpack_require__){__webpack_require__(3188);var entryVirtual=__webpack_require__(3100);module.exports=entryVirtual("Array").values},3500:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3501)},3501:function(module,exports,__webpack_require__){var parent=__webpack_require__(3502);module.exports=parent},3502:function(module,exports,__webpack_require__){__webpack_require__(3503);var path=__webpack_require__(3093);module.exports=path.parseInt},3503:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),parseIntImplementation=__webpack_require__(3504);$({global:!0,forced:parseInt!=parseIntImplementation},{parseInt:parseIntImplementation})},3504:function(module,exports,__webpack_require__){var global=__webpack_require__(3094),trim=__webpack_require__(3151).trim,whitespaces=__webpack_require__(3135),$parseInt=global.parseInt,hex=/^[+-]?0[Xx]/,FORCED=8!==$parseInt(whitespaces+"08")||22!==$parseInt(whitespaces+"0x16");module.exports=FORCED?function parseInt(string,radix){var S=trim(String(string));return $parseInt(S,radix>>>0||(hex.test(S)?16:10))}:$parseInt},3505:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3506)},3506:function(module,exports,__webpack_require__){var parent=__webpack_require__(3186);module.exports=parent},3507:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3508)},3508:function(module,exports,__webpack_require__){__webpack_require__(3112),__webpack_require__(3116);var getIteratorMethod=__webpack_require__(3139);module.exports=getIteratorMethod},3509:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3510)},3510:function(module,exports,__webpack_require__){var parent=__webpack_require__(3195);module.exports=parent},3511:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3512)},3512:function(module,exports,__webpack_require__){var parent=__webpack_require__(3206);module.exports=parent},3513:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3514)},3514:function(module,exports,__webpack_require__){var parent=__webpack_require__(3515);module.exports=parent},3515:function(module,exports,__webpack_require__){__webpack_require__(3516),__webpack_require__(3162),__webpack_require__(3116),__webpack_require__(3112);var path=__webpack_require__(3093);module.exports=path.Map},3516:function(module,exports,__webpack_require__){"use strict";var collection=__webpack_require__(3517),collectionStrong=__webpack_require__(3519);module.exports=collection("Map",(function(init){return function Map(){return init(this,arguments.length?arguments[0]:void 0)}}),collectionStrong)},3517:function(module,exports,__webpack_require__){"use strict";var $=__webpack_require__(3092),global=__webpack_require__(3094),InternalMetadataModule=__webpack_require__(3226),fails=__webpack_require__(3095),createNonEnumerableProperty=__webpack_require__(3103),iterate=__webpack_require__(3126),anInstance=__webpack_require__(3165),isObject=__webpack_require__(3098),setToStringTag=__webpack_require__(3124),defineProperty=__webpack_require__(3104).f,forEach=__webpack_require__(3114).forEach,DESCRIPTORS=__webpack_require__(3101),InternalStateModule=__webpack_require__(3121),setInternalState=InternalStateModule.set,internalStateGetterFor=InternalStateModule.getterFor;module.exports=function(CONSTRUCTOR_NAME,wrapper,common){var Constructor,IS_MAP=-1!==CONSTRUCTOR_NAME.indexOf("Map"),IS_WEAK=-1!==CONSTRUCTOR_NAME.indexOf("Weak"),ADDER=IS_MAP?"set":"add",NativeConstructor=global[CONSTRUCTOR_NAME],NativePrototype=NativeConstructor&&NativeConstructor.prototype,exported={};if(DESCRIPTORS&&"function"==typeof NativeConstructor&&(IS_WEAK||NativePrototype.forEach&&!fails((function(){(new NativeConstructor).entries().next()})))){Constructor=wrapper((function(target,iterable){setInternalState(anInstance(target,Constructor,CONSTRUCTOR_NAME),{type:CONSTRUCTOR_NAME,collection:new NativeConstructor}),null!=iterable&&iterate(iterable,target[ADDER],{that:target,AS_ENTRIES:IS_MAP})}));var getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME);forEach(["add","clear","delete","forEach","get","has","set","keys","values","entries"],(function(KEY){var IS_ADDER="add"==KEY||"set"==KEY;!(KEY in NativePrototype)||IS_WEAK&&"clear"==KEY||createNonEnumerableProperty(Constructor.prototype,KEY,(function(a,b){var collection=getInternalState(this).collection;if(!IS_ADDER&&IS_WEAK&&!isObject(a))return"get"==KEY&&void 0;var result=collection[KEY](0===a?0:a,b);return IS_ADDER?this:result}))})),IS_WEAK||defineProperty(Constructor.prototype,"size",{configurable:!0,get:function(){return getInternalState(this).collection.size}})}else Constructor=common.getConstructor(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER),InternalMetadataModule.REQUIRED=!0;return setToStringTag(Constructor,CONSTRUCTOR_NAME,!1,!0),exported[CONSTRUCTOR_NAME]=Constructor,$({global:!0,forced:!0},exported),IS_WEAK||common.setStrong(Constructor,CONSTRUCTOR_NAME,IS_MAP),Constructor}},3518:function(module,exports,__webpack_require__){var fails=__webpack_require__(3095);module.exports=!fails((function(){return Object.isExtensible(Object.preventExtensions({}))}))},3519:function(module,exports,__webpack_require__){"use strict";var defineProperty=__webpack_require__(3104).f,create=__webpack_require__(3123),redefineAll=__webpack_require__(3213),bind=__webpack_require__(3119),anInstance=__webpack_require__(3165),iterate=__webpack_require__(3126),defineIterator=__webpack_require__(3153),setSpecies=__webpack_require__(3214),DESCRIPTORS=__webpack_require__(3101),fastKey=__webpack_require__(3226).fastKey,InternalStateModule=__webpack_require__(3121),setInternalState=InternalStateModule.set,internalStateGetterFor=InternalStateModule.getterFor;module.exports={getConstructor:function(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER){var C=wrapper((function(that,iterable){anInstance(that,C,CONSTRUCTOR_NAME),setInternalState(that,{type:CONSTRUCTOR_NAME,index:create(null),first:void 0,last:void 0,size:0}),DESCRIPTORS||(that.size=0),null!=iterable&&iterate(iterable,that[ADDER],{that:that,AS_ENTRIES:IS_MAP})})),getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME),define=function(that,key,value){var previous,index,state=getInternalState(that),entry=getEntry(that,key);return entry?entry.value=value:(state.last=entry={index:index=fastKey(key,!0),key:key,value:value,previous:previous=state.last,next:void 0,removed:!1},state.first||(state.first=entry),previous&&(previous.next=entry),DESCRIPTORS?state.size++:that.size++,"F"!==index&&(state.index[index]=entry)),that},getEntry=function(that,key){var entry,state=getInternalState(that),index=fastKey(key);if("F"!==index)return state.index[index];for(entry=state.first;entry;entry=entry.next)if(entry.key==key)return entry};return redefineAll(C.prototype,{clear:function clear(){for(var state=getInternalState(this),data=state.index,entry=state.first;entry;)entry.removed=!0,entry.previous&&(entry.previous=entry.previous.next=void 0),delete data[entry.index],entry=entry.next;state.first=state.last=void 0,DESCRIPTORS?state.size=0:this.size=0},delete:function(key){var state=getInternalState(this),entry=getEntry(this,key);if(entry){var next=entry.next,prev=entry.previous;delete state.index[entry.index],entry.removed=!0,prev&&(prev.next=next),next&&(next.previous=prev),state.first==entry&&(state.first=next),state.last==entry&&(state.last=prev),DESCRIPTORS?state.size--:this.size--}return!!entry},forEach:function forEach(callbackfn){for(var entry,state=getInternalState(this),boundFunction=bind(callbackfn,arguments.length>1?arguments[1]:void 0,3);entry=entry?entry.next:state.first;)for(boundFunction(entry.value,entry.key,this);entry&&entry.removed;)entry=entry.previous},has:function has(key){return!!getEntry(this,key)}}),redefineAll(C.prototype,IS_MAP?{get:function get(key){var entry=getEntry(this,key);return entry&&entry.value},set:function set(key,value){return define(this,0===key?0:key,value)}}:{add:function add(value){return define(this,value=0===value?0:value,value)}}),DESCRIPTORS&&defineProperty(C.prototype,"size",{get:function(){return getInternalState(this).size}}),C},setStrong:function(C,CONSTRUCTOR_NAME,IS_MAP){var ITERATOR_NAME=CONSTRUCTOR_NAME+" Iterator",getInternalCollectionState=internalStateGetterFor(CONSTRUCTOR_NAME),getInternalIteratorState=internalStateGetterFor(ITERATOR_NAME);defineIterator(C,CONSTRUCTOR_NAME,(function(iterated,kind){setInternalState(this,{type:ITERATOR_NAME,target:iterated,state:getInternalCollectionState(iterated),kind:kind,last:void 0})}),(function(){for(var state=getInternalIteratorState(this),kind=state.kind,entry=state.last;entry&&entry.removed;)entry=entry.previous;return state.target&&(state.last=entry=entry?entry.next:state.state.first)?"keys"==kind?{value:entry.key,done:!1}:"values"==kind?{value:entry.value,done:!1}:{value:[entry.key,entry.value],done:!1}:(state.target=void 0,{value:void 0,done:!0})}),IS_MAP?"entries":"values",!IS_MAP,!0),setSpecies(CONSTRUCTOR_NAME)}}},3520:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3521)},3521:function(module,exports,__webpack_require__){var parent=__webpack_require__(3522);module.exports=parent},3522:function(module,exports,__webpack_require__){__webpack_require__(3523);var path=__webpack_require__(3093);module.exports=path.Reflect.apply},3523:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),getBuiltIn=__webpack_require__(3106),aFunction=__webpack_require__(3105),anObject=__webpack_require__(3099),fails=__webpack_require__(3095),nativeApply=getBuiltIn("Reflect","apply"),functionApply=Function.apply;$({target:"Reflect",stat:!0,forced:!fails((function(){nativeApply((function(){}))}))},{apply:function apply(target,thisArgument,argumentsList){return aFunction(target),anObject(argumentsList),nativeApply?nativeApply(target,thisArgument,argumentsList):functionApply.call(target,thisArgument,argumentsList)}})},3524:function(module,exports,__webpack_require__){module.exports=__webpack_require__(3525)},3525:function(module,exports,__webpack_require__){var parent=__webpack_require__(3526);module.exports=parent},3526:function(module,exports,__webpack_require__){__webpack_require__(3527);var path=__webpack_require__(3093);module.exports=path.Reflect.getPrototypeOf},3527:function(module,exports,__webpack_require__){var $=__webpack_require__(3092),anObject=__webpack_require__(3099),objectGetPrototypeOf=__webpack_require__(3122);$({target:"Reflect",stat:!0,sham:!__webpack_require__(3154)},{getPrototypeOf:function getPrototypeOf(target){return objectGetPrototypeOf(anObject(target))}})},3528:function(module,__webpack_exports__,__webpack_require__){"use strict";function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}__webpack_require__.d(__webpack_exports__,"a",(function(){return processCanvasRGBA}));var mulTable=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],shgTable=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function getImageDataFromCanvas(canvas,topX,topY,width,height){if("string"==typeof canvas&&(canvas=document.getElementById(canvas)),!canvas||"object"!==_typeof(canvas)||!("getContext"in canvas))throw new TypeError("Expecting canvas with `getContext` method in processCanvasRGB(A) calls!");var context=canvas.getContext("2d");try{return context.getImageData(topX,topY,width,height)}catch(e){throw new Error("unable to access image data: "+e)}}function processCanvasRGBA(canvas,topX,topY,width,height,radius){if(!(isNaN(radius)||radius<1)){radius|=0;var imageData=getImageDataFromCanvas(canvas,topX,topY,width,height);imageData=function processImageDataRGBA(imageData,topX,topY,width,height,radius){for(var stackEnd,pixels=imageData.data,div=2*radius+1,widthMinus1=width-1,heightMinus1=height-1,radiusPlus1=radius+1,sumFactor=radiusPlus1*(radiusPlus1+1)/2,stackStart=new BlurStack,stack=stackStart,i=1;i<div;i++)stack=stack.next=new BlurStack,i===radiusPlus1&&(stackEnd=stack);stack.next=stackStart;for(var stackIn=null,stackOut=null,yw=0,yi=0,mulSum=mulTable[radius],shgSum=shgTable[radius],y=0;y<height;y++){stack=stackStart;for(var pr=pixels[yi],pg=pixels[yi+1],pb=pixels[yi+2],pa=pixels[yi+3],_i=0;_i<radiusPlus1;_i++)stack.r=pr,stack.g=pg,stack.b=pb,stack.a=pa,stack=stack.next;for(var rInSum=0,gInSum=0,bInSum=0,aInSum=0,rOutSum=radiusPlus1*pr,gOutSum=radiusPlus1*pg,bOutSum=radiusPlus1*pb,aOutSum=radiusPlus1*pa,rSum=sumFactor*pr,gSum=sumFactor*pg,bSum=sumFactor*pb,aSum=sumFactor*pa,_i2=1;_i2<radiusPlus1;_i2++){var p=yi+((widthMinus1<_i2?widthMinus1:_i2)<<2),r=pixels[p],g=pixels[p+1],b=pixels[p+2],a=pixels[p+3],rbs=radiusPlus1-_i2;rSum+=(stack.r=r)*rbs,gSum+=(stack.g=g)*rbs,bSum+=(stack.b=b)*rbs,aSum+=(stack.a=a)*rbs,rInSum+=r,gInSum+=g,bInSum+=b,aInSum+=a,stack=stack.next}stackIn=stackStart,stackOut=stackEnd;for(var x=0;x<width;x++){var paInitial=aSum*mulSum>>shgSum;if(pixels[yi+3]=paInitial,0!==paInitial){var _a2=255/paInitial;pixels[yi]=(rSum*mulSum>>shgSum)*_a2,pixels[yi+1]=(gSum*mulSum>>shgSum)*_a2,pixels[yi+2]=(bSum*mulSum>>shgSum)*_a2}else pixels[yi]=pixels[yi+1]=pixels[yi+2]=0;rSum-=rOutSum,gSum-=gOutSum,bSum-=bOutSum,aSum-=aOutSum,rOutSum-=stackIn.r,gOutSum-=stackIn.g,bOutSum-=stackIn.b,aOutSum-=stackIn.a;var _p=x+radius+1;_p=yw+(_p<widthMinus1?_p:widthMinus1)<<2,rSum+=rInSum+=stackIn.r=pixels[_p],gSum+=gInSum+=stackIn.g=pixels[_p+1],bSum+=bInSum+=stackIn.b=pixels[_p+2],aSum+=aInSum+=stackIn.a=pixels[_p+3],stackIn=stackIn.next;var _stackOut=stackOut,_r=_stackOut.r,_g=_stackOut.g,_b=_stackOut.b,_a=_stackOut.a;rOutSum+=_r,gOutSum+=_g,bOutSum+=_b,aOutSum+=_a,rInSum-=_r,gInSum-=_g,bInSum-=_b,aInSum-=_a,stackOut=stackOut.next,yi+=4}yw+=width}for(var _x=0;_x<width;_x++){var _pr=pixels[yi=_x<<2],_pg=pixels[yi+1],_pb=pixels[yi+2],_pa=pixels[yi+3],_rOutSum=radiusPlus1*_pr,_gOutSum=radiusPlus1*_pg,_bOutSum=radiusPlus1*_pb,_aOutSum=radiusPlus1*_pa,_rSum=sumFactor*_pr,_gSum=sumFactor*_pg,_bSum=sumFactor*_pb,_aSum=sumFactor*_pa;stack=stackStart;for(var _i3=0;_i3<radiusPlus1;_i3++)stack.r=_pr,stack.g=_pg,stack.b=_pb,stack.a=_pa,stack=stack.next;for(var yp=width,_gInSum=0,_bInSum=0,_aInSum=0,_rInSum=0,_i4=1;_i4<=radius;_i4++){yi=yp+_x<<2;var _rbs=radiusPlus1-_i4;_rSum+=(stack.r=_pr=pixels[yi])*_rbs,_gSum+=(stack.g=_pg=pixels[yi+1])*_rbs,_bSum+=(stack.b=_pb=pixels[yi+2])*_rbs,_aSum+=(stack.a=_pa=pixels[yi+3])*_rbs,_rInSum+=_pr,_gInSum+=_pg,_bInSum+=_pb,_aInSum+=_pa,stack=stack.next,_i4<heightMinus1&&(yp+=width)}yi=_x,stackIn=stackStart,stackOut=stackEnd;for(var _y=0;_y<height;_y++){var _p2=yi<<2;pixels[_p2+3]=_pa=_aSum*mulSum>>shgSum,_pa>0?(_pa=255/_pa,pixels[_p2]=(_rSum*mulSum>>shgSum)*_pa,pixels[_p2+1]=(_gSum*mulSum>>shgSum)*_pa,pixels[_p2+2]=(_bSum*mulSum>>shgSum)*_pa):pixels[_p2]=pixels[_p2+1]=pixels[_p2+2]=0,_rSum-=_rOutSum,_gSum-=_gOutSum,_bSum-=_bOutSum,_aSum-=_aOutSum,_rOutSum-=stackIn.r,_gOutSum-=stackIn.g,_bOutSum-=stackIn.b,_aOutSum-=stackIn.a,_p2=_x+((_p2=_y+radiusPlus1)<heightMinus1?_p2:heightMinus1)*width<<2,_rSum+=_rInSum+=stackIn.r=pixels[_p2],_gSum+=_gInSum+=stackIn.g=pixels[_p2+1],_bSum+=_bInSum+=stackIn.b=pixels[_p2+2],_aSum+=_aInSum+=stackIn.a=pixels[_p2+3],stackIn=stackIn.next,_rOutSum+=_pr=stackOut.r,_gOutSum+=_pg=stackOut.g,_bOutSum+=_pb=stackOut.b,_aOutSum+=_pa=stackOut.a,_rInSum-=_pr,_gInSum-=_pg,_bInSum-=_pb,_aInSum-=_pa,stackOut=stackOut.next,yi+=width}}return imageData}(imageData,0,0,width,height,radius),canvas.getContext("2d").putImageData(imageData,topX,topY)}}var BlurStack=function BlurStack(){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,BlurStack),this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,